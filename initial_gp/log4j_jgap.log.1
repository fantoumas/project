[01.07.2016 01:15:38,375] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 84.32
[01.07.2016 01:15:38,375] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ ((((X ^ 8.0) ^ ((X ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ^ ((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0)))))) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 5.0))) * 4.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 3.0)) ==> Arg(1) + Arg(2) + Arg(0)
[01.07.2016 01:15:38,515] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 84.32
[01.07.2016 01:15:38,602] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ^ ((((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ^ ((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0)))) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 3.0)) ==> (Arg(0) + Arg(2) + Arg(0)) + ((Arg(1) + Arg(2) + Arg(2)) + (Arg(1) + Arg(0) + Arg(2)) + (Arg(0) + Arg(1) + Arg(1))) + ((Arg(1) + Arg(0) + Arg(2)) + (Arg(0) + ((((Arg(1) + Arg(1) + Arg(0)) + (Arg(2) + (Arg(1) + Arg(1) + Arg(0)) + Arg(2)) + (Arg(2) + Arg(1) + Arg(0))) + Arg(2) + Arg(0)) + (Arg(0) + Arg(1) + Arg(2)) + Arg(0)) + Arg(1)) + (Arg(2) + Arg(0) + Arg(0)))
[01.07.2016 01:15:38,751] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 83.37
[01.07.2016 01:15:38,752] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 5.0))) * 4.0)) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ^ (((X ^ (4.0 * 4.0)) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ==> (Arg(0) + Arg(2) + Arg(0)) + ((Arg(1) + Arg(2) + Arg(2)) + (Arg(1) + Arg(0) + Arg(2)) + (Arg(0) + Arg(1) + Arg(1))) + (((Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(2)) + (Arg(0) + ((Arg(0) + Arg(2) + Arg(1)) + (Arg(0) + Arg(1) + Arg(2)) + Arg(0)) + Arg(1)) + (Arg(2) + Arg(0) + Arg(0)))
[01.07.2016 01:15:39,284] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 83.32
[01.07.2016 01:15:39,285] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ (X ^ (6.0 * 5.0))) * 4.0)) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ^ (((X ^ (4.0 * 4.0)) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ==> (Arg(0) + Arg(2) + Arg(0)) + (Arg(2) + Arg(1) + Arg(2)) + (((Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(2)) + (Arg(0) + ((Arg(0) + Arg(2) + Arg(1)) + (Arg(0) + Arg(1) + Arg(2)) + Arg(0)) + Arg(1)) + (Arg(1) + Arg(2) + Arg(2)))
[01.07.2016 01:15:39,491] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 83.29
[01.07.2016 01:15:39,492] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ^ ((X ^ 8.0) ^ ((X * 9.0) ^ (6.0 * 6.0)))) ==> (Arg(1) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(1) + Arg(0) + Arg(2)) + Arg(1) + (Arg(2) + ((Arg(0) + Arg(2) + Arg(1)) + (Arg(1) + Arg(1) + Arg(0)) + (((Arg(0) + Arg(0) + Arg(0)) + Arg(0) + Arg(2)) + (Arg(1) + Arg(2) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1)))) + (Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0))))
[01.07.2016 01:15:40,678] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 83.29
[01.07.2016 01:15:40,678] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((((X * 9.0) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 5.0))) * 4.0)) ^ (6.0 * 6.0)) ^ ((X ^ 8.0) * 4.0)) ==> Arg(1)
[01.07.2016 01:15:40,962] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 82.61
[01.07.2016 01:15:40,963] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (6.0 * 6.0))))) ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (6.0 * 6.0)))) ==> (Arg(1) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(1) + Arg(0) + Arg(2)) + Arg(1) + (Arg(2) + ((Arg(2) + Arg(1) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + ((Arg(1) + Arg(0) + Arg(2)) + (((Arg(2) + Arg(1) + Arg(2)) + (Arg(2) + Arg(1) + Arg(2)) + (Arg(1) + Arg(0) + Arg(2))) + ((Arg(2) + Arg(1) + Arg(2)) + (Arg(2) + Arg(2) + Arg(1)) + (Arg(2) + Arg(1) + Arg(0))) + (Arg(1) + Arg(2) + Arg(0))) + (Arg(1) + Arg(1) + Arg(2)))) + (Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0))))
[01.07.2016 01:15:41,774] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.57
[01.07.2016 01:15:41,774] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 4.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((4.0 - X) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> ((Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0)) + (Arg(2) + (Arg(1) + Arg(2) + Arg(1)) + (Arg(2) + (Arg(2) + Arg(2) + Arg(2)) + Arg(2)))) + ((Arg(2) + Arg(0) + Arg(0)) + (Arg(2) + Arg(2) + Arg(0)) + ((Arg(1) + Arg(2) + Arg(1)) + (Arg(1) + Arg(1) + Arg(1)) + (Arg(2) + Arg(2) + (Arg(1) + Arg(1) + Arg(0))))) + ((Arg(0) + Arg(1) + Arg(1)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(1) + Arg(2) + Arg(1)))
[01.07.2016 01:15:43,337] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.56
[01.07.2016 01:15:43,338] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 4.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((4.0 - X) ^ ((X ^ 4.0) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> Arg(1)
[01.07.2016 01:15:44,201] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.52
[01.07.2016 01:15:44,202] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 4.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((4.0 - X) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((5.0 * X) ^ (6.0 * 5.0)))) ==> Arg(2) + Arg(2) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:15:44,955] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.45
[01.07.2016 01:15:44,956] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 4.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((4.0 - X) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * (6.0 * 6.0))) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> Arg(1) + Arg(1) + Arg(2)
[01.07.2016 01:15:45,572] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.13
[01.07.2016 01:15:45,573] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (6.0 * 6.0))))) ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((X * 9.0) ^ (5.0 * 6.0)))) ==> ((Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0)) + ((Arg(0) + Arg(0) + ((Arg(1) + Arg(1) + Arg(0)) + Arg(0) + (Arg(1) + (Arg(1) + Arg(0) + Arg(0)) + Arg(2)))) + (Arg(2) + Arg(1) + Arg(0)) + (Arg(1) + Arg(2) + Arg(2))) + (Arg(1) + Arg(0) + Arg(1))) + ((Arg(1) + Arg(0) + Arg(2)) + Arg(2) + ((Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0)) + Arg(1))) + (Arg(2) + Arg(2) + Arg(2))
[01.07.2016 01:15:46,384] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.13
[01.07.2016 01:15:46,385] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (6.0 * 6.0))))) ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((X ^ 8.0) ^ (((X ^ 6.0) ^ ((X ^ 3.0) ^ (4.0 * 4.0))) * 4.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((X * 9.0) ^ (5.0 * 6.0)))) ==> ((Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0)) + ((Arg(0) + Arg(0) + (((Arg(0) + Arg(2) + (Arg(2) + Arg(2) + (Arg(0) + Arg(1) + Arg(1)))) + (Arg(0) + ((Arg(0) + Arg(1) + Arg(0)) + Arg(2) + Arg(0)) + Arg(1)) + (Arg(0) + Arg(1) + Arg(2))) + Arg(0) + (Arg(1) + (Arg(1) + Arg(0) + Arg(0)) + Arg(2)))) + (Arg(2) + Arg(1) + Arg(0)) + (Arg(1) + Arg(2) + Arg(2))) + (Arg(1) + Arg(0) + Arg(1))) + ((Arg(1) + Arg(0) + Arg(2)) + Arg(2) + ((Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0)) + Arg(1))) + (Arg(2) + Arg(2) + Arg(2))
[01.07.2016 01:15:46,665] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 80.70
[01.07.2016 01:15:46,666] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 4.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((4.0 - X) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * ((((6.0 * X) ^ (4.0 * 6.0)) ^ ((6.0 * X) ^ (4.0 * 4.0))) * 4.0))) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> (Arg(1) + Arg(2) + Arg(1)) + Arg(2) + ((Arg(1) + Arg(1) + Arg(0)) + Arg(1) + (Arg(0) + Arg(1) + Arg(1)))
[01.07.2016 01:15:46,957] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 79.67
[01.07.2016 01:15:46,957] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 8.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ ((6.0 ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (3.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> (((Arg(1) + Arg(2) + (Arg(1) + Arg(0) + Arg(2))) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(1)) + Arg(0)) + Arg(2) + Arg(0)) + ((Arg(0) + Arg(0) + Arg(2)) + Arg(0) + Arg(1)) + Arg(0)
[01.07.2016 01:15:47,303] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 79.67
[01.07.2016 01:15:47,303] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 8.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ ((6.0 ^ ((X ^ 8.0) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (3.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> (((Arg(1) + Arg(2) + (Arg(1) + Arg(0) + Arg(2))) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(1)) + Arg(0)) + Arg(2) + Arg(0)) + ((Arg(0) + Arg(0) + Arg(2)) + Arg(0) + Arg(1)) + Arg(0)
[01.07.2016 01:15:49,323] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 79.08
[01.07.2016 01:15:49,323] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 8.0) ^ (((X ^ 7.0) ^ ((((5.0 * 2.0) ^ (((((((5.0 * X) ^ (4.0 ^ 4.0)) ^ (((3.0 - X) ^ (5.0 * 5.0)) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0) ^ (5.0 * 3.0)) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> (Arg(0) + Arg(2) + Arg(2)) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))
[01.07.2016 01:15:52,224] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 78.26
[01.07.2016 01:15:52,225] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ ((((2.0 ^ (4.0 ^ 3.0)) ^ (((((((5.0 * X) ^ (4.0 ^ 4.0)) ^ ((((X ^ 4.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) ^ ((6.0 * X) ^ (4.0 * 5.0))) * 4.0)) ^ ((((X ^ 6.0) ^ ((X ^ 4.0) ^ (6.0 * 6.0))) * 4.0) ^ (4.0 * 4.0))) * 3.0) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ (4.0 * 4.0)) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> Arg(2) + Arg(2) + ((Arg(1) + Arg(0) + Arg(2)) + Arg(1) + (Arg(2) + ((Arg(2) + Arg(1) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + ((Arg(1) + Arg(0) + Arg(2)) + ((Arg(2) + (Arg(0) + (Arg(2) + Arg(1) + Arg(0)) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0))) + ((Arg(1) + Arg(2) + Arg(1)) + Arg(2) + (Arg(1) + ((Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + (Arg(1) + Arg(1) + Arg(0))) + Arg(0)) + Arg(0))) + (Arg(1) + Arg(2) + Arg(0))) + Arg(0))) + (Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0))))
[01.07.2016 01:15:52,608] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 77.29
[01.07.2016 01:15:52,610] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (4.0 ^ 3.0)) ^ (((((((5.0 * X) ^ (4.0 ^ 4.0)) ^ ((((X ^ 4.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) ^ ((6.0 * X) ^ (4.0 * 5.0))) * 4.0)) ^ (4.0 ^ (4.0 * 4.0))) * 3.0) ^ ((4.0 ^ 3.0) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ 5.0)) * 4.0)) ^ ((X ^ 4.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> Arg(0) + ((Arg(1) + Arg(0) + Arg(2)) + Arg(2) + (((((Arg(0) + Arg(2) + Arg(2)) + Arg(2) + (Arg(2) + Arg(2) + Arg(2))) + Arg(2) + Arg(0)) + (Arg(1) + Arg(2) + Arg(1)) + (Arg(2) + Arg(2) + Arg(2))) + Arg(1) + (Arg(2) + (Arg(0) + Arg(0) + (Arg(1) + Arg(1) + (Arg(1) + Arg(1) + Arg(0)))) + (Arg(0) + (((Arg(1) + Arg(2) + Arg(1)) + Arg(0) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + ((Arg(1) + Arg(1) + Arg(2)) + (Arg(0) + Arg(2) + Arg(1)) + (Arg(1) + ((Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + (Arg(1) + Arg(1) + Arg(0))) + Arg(0)) + Arg(0)))) + Arg(0))))) + Arg(0)
[01.07.2016 01:15:57,648] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.94
[01.07.2016 01:15:57,772] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 8.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (3.0 ^ 3.0)) ^ (((((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((3.0 - X) ^ (4.0 * (5.0 * 5.0))) * 4.0)) ^ ((4.0 * 2.0) ^ (4.0 * 3.0))) * 3.0) ^ (5.0 * (((5.0 * X) ^ (4.0 ^ 3.0)) ^ ((6.0 ^ ((X ^ 8.0) ^ (4.0 * 6.0))) * 4.0)))) * 2.0)) ^ ((5.0 * X) ^ (5.0 * 3.0))) * 4.0)) ^ ((X ^ 4.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> (Arg(1) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(1) + Arg(0) + Arg(1)) + Arg(1) + ((Arg(1) + Arg(0) + Arg(2)) + ((Arg(1) + Arg(2) + (Arg(1) + ((Arg(1) + Arg(1) + Arg(0)) + Arg(0) + Arg(1)) + Arg(2))) + (Arg(1) + Arg(0) + Arg(0)) + (Arg(1) + Arg(1) + Arg(0))) + (((((Arg(0) + Arg(2) + Arg(2)) + Arg(2) + Arg(2)) + Arg(2) + Arg(0)) + (Arg(1) + Arg(0) + Arg(0)) + (Arg(2) + (Arg(1) + Arg(2) + Arg(2)) + (Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0)))) + (Arg(0) + Arg(2) + Arg(1)) + (Arg(1) + Arg(2) + Arg(2)))))
[01.07.2016 01:15:58,188] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.29
[01.07.2016 01:15:58,188] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (4.0 ^ 3.0)) ^ (((((((4.0 * X) ^ (4.0 ^ 4.0)) ^ ((((X ^ 4.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) ^ ((6.0 * X) ^ (4.0 * 5.0))) * 4.0)) ^ (4.0 ^ (4.0 * 3.0))) * 3.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ 5.0)) * 4.0)) ^ ((X ^ 4.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> Arg(0) + Arg(1) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:16:00,829] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.42
[01.07.2016 01:16:00,830] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (4.0 ^ 3.0)) ^ (((((((4.0 * X) ^ (4.0 ^ 4.0)) ^ ((((X ^ 4.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) ^ ((6.0 * X) ^ (4.0 * 5.0))) * 4.0)) ^ (4.0 ^ (4.0 * 3.0))) * 3.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ 5.0)) * 4.0)) ^ ((X ^ 4.0) ^ ((6.0 * X) ^ 2.0))) ==> Arg(0) + Arg(1) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:16:07,688] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.42
[01.07.2016 01:16:07,689] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (4.0 ^ 3.0)) ^ (((((((4.0 * X) ^ (4.0 ^ 4.0)) ^ ((((X ^ 4.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) ^ ((6.0 * X) ^ (4.0 * 5.0))) * 4.0)) ^ (4.0 ^ 2.0)) * 3.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ 5.0)) * 4.0)) ^ ((X ^ 4.0) ^ ((6.0 * X) ^ 2.0))) ==> Arg(0) + Arg(1) + (Arg(2) + Arg(0) + Arg(1))
[01.07.2016 01:16:32,619] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.42
[01.07.2016 01:16:32,619] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (4.0 ^ 3.0)) ^ (((((((3.0 * X) ^ (4.0 ^ 4.0)) ^ ((((X ^ 4.0) ^ (((4.0 ^ X) - X) ^ (3.0 * 6.0))) ^ ((5.0 * X) ^ (4.0 * 3.0))) * 3.0)) ^ (4.0 ^ 3.0)) * 3.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ 5.0)) * 4.0)) ^ ((X ^ 4.0) ^ ((6.0 * X) ^ 2.0))) ==> Arg(0)
[01.07.2016 01:16:34,456] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 74.86
[01.07.2016 01:16:34,456] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (4.0 ^ 3.0)) ^ (((((((3.0 * X) ^ (4.0 ^ 3.0)) ^ ((((X ^ 4.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) ^ (3.0 ^ (3.0 * 4.0))) * 4.0)) ^ (4.0 ^ 3.0)) * 3.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) * 2.0)) ^ ((6.0 * X) ^ 5.0)) * 4.0)) ^ ((X ^ 4.0) ^ (((6.0 * X) ^ 4.0) ^ 2.0))) ==> Arg(1) + Arg(2) + Arg(0)
[01.07.2016 01:16:44,500] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:16:44,586] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:16:44,623] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:16:44,780] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:16:44,783] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:16:45,092] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 89.96
[01.07.2016 01:16:45,096] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X ^ 7.0) * (X ^ 7.0)) - (X - (X ^ 7.0)) ==> (Arg(0) + (Arg(0) + Arg(2) + Arg(0)) + (Arg(1) + Arg(1) + Arg(2))) + Arg(2) + Arg(2)
[01.07.2016 01:16:45,262] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 89.53
[01.07.2016 01:16:45,264] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X ^ 5.0) - (6.0 - 6.0)) - X ==> (Arg(0) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + (Arg(2) + Arg(0) + (Arg(0) + Arg(1) + Arg(0))) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:16:45,565] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 89.44
[01.07.2016 01:16:45,566] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X ^ 5.0) - (6.0 - 6.0)) - (X - (X ^ 7.0)) ==> (Arg(0) + (Arg(0) + Arg(2) + Arg(0)) + (Arg(1) + Arg(1) + Arg(0))) + Arg(2) + Arg(2)
[01.07.2016 01:16:45,814] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 88.82
[01.07.2016 01:16:45,815] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * 2.0) * (X ^ 2.0)) - ((X * 2.0) - (X ^ 3.0)) ==> ((Arg(1) + Arg(0) + Arg(1)) + (Arg(2) + Arg(0) + Arg(1)) + (Arg(1) + Arg(2) + Arg(2))) + ((Arg(0) + Arg(0) + Arg(1)) + (Arg(0) + Arg(1) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1))) + ((Arg(2) + Arg(1) + Arg(0)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(2) + Arg(1) + Arg(1)))
[01.07.2016 01:16:45,984] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 88.52
[01.07.2016 01:16:45,984] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * 2.0) * (X ^ 2.0)) - ((X * 2.0) - (X - X)) ==> ((Arg(1) + Arg(0) + Arg(1)) + (Arg(2) + Arg(0) + Arg(1)) + (Arg(1) + Arg(2) + Arg(2))) + ((Arg(0) + Arg(0) + Arg(1)) + (Arg(0) + Arg(1) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1))) + ((Arg(2) + Arg(1) + Arg(0)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(2) + Arg(1) + Arg(1)))
[01.07.2016 01:16:46,384] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 87.68
[01.07.2016 01:16:46,388] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) - (X - X)) - ((X * (X ^ 9.0)) ^ (X * X)) ==> (Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0)) + (Arg(0) + Arg(1) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:16:47,048] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 87.47
[01.07.2016 01:16:47,049] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X ^ 5.0) - (X - X)) - ((X * (X ^ 9.0)) ^ (X * X))) - ((X ^ 7.0) * (X * X))) - X ==> (Arg(0) + Arg(2) + Arg(2)) + (Arg(2) + Arg(0) + (Arg(0) + Arg(0) + Arg(2))) + (Arg(0) + Arg(1) + Arg(1))
[01.07.2016 01:16:47,157] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 87.03
[01.07.2016 01:16:47,158] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X ^ 5.0) - (X - X)) - ((X * (X ^ 9.0)) ^ (X * X))) - ((X ^ 7.0) * (X * X))) - (X - (X ^ 7.0)) ==> Arg(0) + ((Arg(1) + Arg(0) + Arg(0)) + Arg(2) + Arg(0)) + ((Arg(2) + Arg(2) + Arg(1)) + Arg(1) + (Arg(0) + Arg(1) + Arg(1)))
[01.07.2016 01:16:47,342] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.57
[01.07.2016 01:16:47,342] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * ((9.0 ^ X) * (X ^ 8.0))) - (X - (X ^ 7.0))) - (X - X)) - ((X * (X ^ 9.0)) ^ (X * X)) ==> Arg(0) + ((Arg(2) + Arg(0) + Arg(2)) + (Arg(1) + Arg(2) + Arg(0)) + (Arg(0) + ((Arg(1) + Arg(0) + (Arg(2) + Arg(1) + Arg(2))) + (Arg(0) + (Arg(0) + (Arg(1) + Arg(0) + (Arg(0) + Arg(1) + Arg(0))) + Arg(0)) + Arg(0)) + (Arg(2) + Arg(0) + Arg(2))) + (Arg(2) + Arg(1) + Arg(1)))) + (Arg(1) + Arg(0) + Arg(2))
[01.07.2016 01:16:47,530] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.16
[01.07.2016 01:16:47,530] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) - ((X - (X ^ 7.0)) - (X ^ 7.0))) - ((X * (X ^ 9.0)) ^ (X * X)) ==> Arg(1)
[01.07.2016 01:16:49,280] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.15
[01.07.2016 01:16:49,281] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) - ((X - (X ^ 7.0)) - (X ^ 7.0))) - ((X * (X ^ 7.0)) ^ (X * X)) ==> (Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + Arg(1)) + Arg(0)) + Arg(0)) + (Arg(2) + Arg(0) + ((Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + ((Arg(0) + (Arg(0) + Arg(2) + ((Arg(0) + Arg(2) + (Arg(2) + ((Arg(1) + Arg(1) + Arg(0)) + (Arg(1) + Arg(2) + Arg(2)) + (Arg(0) + Arg(2) + Arg(2))) + Arg(0))) + Arg(1) + Arg(1))) + (Arg(0) + Arg(0) + Arg(0))) + Arg(2) + Arg(2))) + Arg(2) + Arg(1))) + (Arg(1) + Arg(2) + Arg(0))
[01.07.2016 01:16:49,766] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.13
[01.07.2016 01:16:49,767] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) - ((X ^ 4.0) * (((X ^ 7.0) * (X * ((X * X) - ((X ^ 7.0) * (X ^ 6.0))))) - X))) - ((X - (X ^ 7.0)) - (X - X))) - ((X * (X ^ 7.0)) ^ (X * X)) ==> Arg(1) + ((Arg(0) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))) + Arg(0) + (Arg(0) + Arg(1) + Arg(0))) + ((Arg(2) + Arg(1) + Arg(2)) + Arg(1) + (Arg(2) + Arg(2) + Arg(0)))
[01.07.2016 01:16:50,038] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.06
[01.07.2016 01:16:50,038] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) - ((X ^ 4.0) * (((X ^ 7.0) * (X * ((X * X) - ((X * X) * (X ^ 6.0))))) - X))) - ((X - (X ^ 7.0)) - (X - X))) - ((X * (X ^ 7.0)) ^ (X * X)) ==> Arg(1) + ((Arg(0) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))) + Arg(0) + (Arg(0) + Arg(1) + Arg(0))) + ((Arg(2) + Arg(1) + Arg(2)) + Arg(1) + (Arg(2) + Arg(2) + Arg(0)))
[01.07.2016 01:17:00,491] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:17:00,499] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:17:00,520] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:17:00,629] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:17:00,633] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:17:00,849] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 87.91
[01.07.2016 01:17:00,852] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 7.0) - X ==> Arg(1)
[01.07.2016 01:17:01,244] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 87.52
[01.07.2016 01:17:01,246] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (6.0 - 6.0) ^ (((X ^ 8.0) ^ (6.0 - X)) ^ X) ==> Arg(0)
[01.07.2016 01:17:02,482] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.89
[01.07.2016 01:17:02,482] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X)) - X ==> Arg(1) + Arg(1) + Arg(0)
[01.07.2016 01:17:02,639] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.70
[01.07.2016 01:17:02,640] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) ^ (6.0 ^ X)) - ((X * X) - (X ^ 3.0))) - X) - ((X ^ 8.0) * (((X ^ 5.0) - X) - (X ^ 3.0))) ==> Arg(0) + Arg(0) + Arg(0)
[01.07.2016 01:17:02,734] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 85.25
[01.07.2016 01:17:02,735] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) - (X ^ 4.0)) ==> ((Arg(0) + ((Arg(0) + Arg(1) + Arg(2)) + Arg(2) + ((Arg(1) + Arg(1) + Arg(1)) + (((Arg(2) + Arg(0) + Arg(0)) + (Arg(0) + Arg(2) + Arg(1)) + (Arg(2) + Arg(1) + Arg(1))) + Arg(2) + (Arg(0) + (Arg(1) + Arg(0) + Arg(0)) + Arg(0))) + (Arg(0) + Arg(0) + Arg(2)))) + Arg(2)) + (((Arg(0) + Arg(0) + Arg(2)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + Arg(0) + Arg(2))) + ((Arg(2) + Arg(0) + Arg(0)) + (Arg(1) + Arg(0) + Arg(1)) + (Arg(2) + Arg(0) + Arg(1))) + Arg(2)
[01.07.2016 01:17:03,704] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 84.69
[01.07.2016 01:17:03,707] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - (X ^ 4.0)) ==> (Arg(2) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:04,134] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 83.03
[01.07.2016 01:17:04,135] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X)) - (((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) - (X ^ 4.0)) ==> ((Arg(0) + ((Arg(0) + Arg(1) + Arg(2)) + Arg(2) + ((Arg(1) + Arg(1) + Arg(1)) + (((Arg(0) + Arg(1) + Arg(2)) + (Arg(0) + Arg(2) + Arg(1)) + (Arg(2) + Arg(1) + Arg(1))) + Arg(2) + (Arg(0) + (Arg(1) + Arg(0) + Arg(0)) + Arg(0))) + (Arg(0) + Arg(0) + Arg(2)))) + Arg(2)) + (((Arg(0) + Arg(0) + Arg(2)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + Arg(0) + Arg(2))) + ((Arg(2) + Arg(0) + Arg(0)) + (Arg(1) + Arg(0) + Arg(1)) + (Arg(2) + Arg(0) + Arg(1))) + Arg(2)
[01.07.2016 01:17:05,294] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 82.83
[01.07.2016 01:17:05,295] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - ((((((X * X) ^ (6.0 ^ X)) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X * X) ^ 2.0) ^ (6.0 - X)) ^ X))) - (X * X))) * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - (X ^ 4.0)) ==> (Arg(2) + Arg(1) + Arg(1)) + ((Arg(0) + Arg(1) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:05,569] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 82.68
[01.07.2016 01:17:05,570] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X)) - (((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (6.0 ^ X))) ==> ((Arg(0) + (Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + Arg(2)) + (Arg(2) + Arg(0) + Arg(1)) + (Arg(0) + Arg(0) + Arg(2))) + ((Arg(2) + Arg(0) + Arg(0)) + (Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + (Arg(2) + Arg(0) + Arg(1))) + Arg(2)
[01.07.2016 01:17:05,913] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.85
[01.07.2016 01:17:05,914] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - (X ^ 4.0)))) ==> ((Arg(2) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))) + Arg(2) + Arg(2)) + (((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(1) + Arg(2) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(1) + Arg(1)) + Arg(2))))) + Arg(2)) + (((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:07,457] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.43
[01.07.2016 01:17:07,558] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> ((Arg(2) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))) + Arg(2) + Arg(2)) + (((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(1) + Arg(2) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(1) + Arg(1)) + Arg(2))))) + Arg(2)) + (((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:08,901] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.36
[01.07.2016 01:17:08,902] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 6.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> ((Arg(2) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))) + Arg(2) + Arg(2)) + (((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(1) + Arg(2) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(1) + Arg(1)) + Arg(2))))) + Arg(2)) + (((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:09,609] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.01
[01.07.2016 01:17:09,610] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - (((X * ((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X)))) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 6.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (((Arg(2) + Arg(0) + Arg(0)) + Arg(0) + Arg(1)) + Arg(2) + Arg(2)) + (((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(1) + Arg(2) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(1) + Arg(1)) + Arg(2))))) + Arg(2)) + (((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:10,192] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 80.96
[01.07.2016 01:17:10,193] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (4.0 ^ X)) - ((((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ (((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0))) ^ (4.0 ^ ((X * X) ^ 4.0)))) - (X ^ 3.0)) ==> Arg(2) + Arg(2) + Arg(0)
[01.07.2016 01:17:10,483] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 80.73
[01.07.2016 01:17:10,483] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - ((((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (Arg(0) + Arg(0) + (Arg(1) + Arg(0) + Arg(2))) + (((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(0) + Arg(1)) + (Arg(0) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(0) + Arg(1)) + Arg(2))))) + Arg(2)) + (((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:11,035] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 80.32
[01.07.2016 01:17:11,035] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ (X * X))) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> ((Arg(2) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))) + Arg(2) + Arg(2)) + (((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + (((Arg(2) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))) + Arg(2) + Arg(2)) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + Arg(1))))) + Arg(2)) + (((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:13,014] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 80.02
[01.07.2016 01:17:13,014] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (4.0 ^ X)))) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(1) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + ((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2))) + Arg(2)) + (Arg(2) + Arg(0) + Arg(0)) + Arg(2))) + Arg(1))) + Arg(1) + Arg(2))
[01.07.2016 01:17:13,546] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 79.68
[01.07.2016 01:17:13,546] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - ((((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ ((((X * X) ^ 3.0) ^ (5.0 - X)) ^ X)))) - ((X * X) ^ ((((X * X) ^ 6.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> ((Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + Arg(2) + (Arg(2) + Arg(0) + Arg(0))) + Arg(0) + Arg(2)
[01.07.2016 01:17:14,640] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 79.32
[01.07.2016 01:17:14,640] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (4.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + Arg(2)) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + ((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2))) + Arg(2)) + (Arg(2) + Arg(0) + Arg(0)) + Arg(2))) + Arg(1))) + Arg(1) + Arg(2))
[01.07.2016 01:17:15,027] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 78.44
[01.07.2016 01:17:15,028] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (4.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + Arg(2)) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + ((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2))) + Arg(2)) + ((Arg(2) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))) + Arg(2) + Arg(2)) + Arg(2))) + Arg(1))) + Arg(1) + Arg(2))
[01.07.2016 01:17:17,455] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 78.44
[01.07.2016 01:17:17,456] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (4.0 ^ X)))) - (((X * ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X)) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (((Arg(0) + Arg(1) + Arg(0)) + ((Arg(0) + Arg(0) + Arg(2)) + Arg(1) + Arg(2)) + ((Arg(2) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))) + Arg(0) + Arg(1))) + Arg(1) + Arg(0)) + Arg(2) + Arg(0)
[01.07.2016 01:17:17,841] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 78.43
[01.07.2016 01:17:17,842] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (4.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X - X) ^ (4.0 - X)) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + Arg(2)) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + ((((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2))) + Arg(2)) + ((Arg(2) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))) + Arg(2) + Arg(2)) + Arg(2))) + Arg(1))) + Arg(1) + Arg(2))
[01.07.2016 01:17:18,268] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 78.14
[01.07.2016 01:17:18,269] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ ((((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> ((Arg(2) + Arg(2) + Arg(0)) + (Arg(2) + Arg(1) + ((Arg(1) + Arg(2) + Arg(0)) + Arg(1) + Arg(0))) + Arg(2)) + Arg(1) + Arg(2)
[01.07.2016 01:17:20,664] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 78.14
[01.07.2016 01:17:20,665] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ ((((X * X) ^ ((3.0 * X) ^ ((((6.0 - 6.0) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> ((Arg(2) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))) + Arg(2) + Arg(2)) + ((Arg(0) + Arg(0) + Arg(0)) + Arg(1) + Arg(2)) + ((Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(0) + (Arg(1) + Arg(1) + (Arg(2) + Arg(0) + Arg(2))) + (((Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + (Arg(2) + Arg(0) + ((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1))) + Arg(2)) + (Arg(0) + Arg(2) + Arg(1))) + Arg(0) + Arg(2))) + (Arg(2) + Arg(0) + Arg(0)) + (Arg(0) + (Arg(2) + Arg(0) + (Arg(2) + Arg(1) + Arg(1))) + Arg(2))) + Arg(0))) + (Arg(1) + Arg(2) + Arg(2))) + Arg(0)) + Arg(2) + (Arg(0) + Arg(2) + Arg(1)))
[01.07.2016 01:17:22,276] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 77.42
[01.07.2016 01:17:22,277] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X ^ 4.0) ^ ((((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> Arg(0)
[01.07.2016 01:17:24,329] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 77.16
[01.07.2016 01:17:24,329] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ 4.0) ^ ((((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (Arg(2) + Arg(0) + Arg(0)) + ((((Arg(2) + Arg(0) + Arg(0)) + ((Arg(2) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1))) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + Arg(1)) + Arg(1))) + Arg(1) + Arg(2))) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + (Arg(1) + (Arg(0) + (Arg(2) + Arg(0) + Arg(0)) + Arg(2)) + Arg(2))) + Arg(1))) + Arg(1) + Arg(2))
[01.07.2016 01:17:30,260] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 77.01
[01.07.2016 01:17:30,260] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X ^ 4.0) ^ ((((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((X ^ 5.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (6.0 - 6.0)))) ==> (Arg(0) + (Arg(0) + Arg(2) + Arg(2)) + Arg(1)) + (Arg(0) + ((((Arg(2) + Arg(1) + Arg(1)) + Arg(2) + Arg(0)) + Arg(1) + Arg(2)) + Arg(2) + Arg(2)) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + (Arg(1) + Arg(0) + Arg(1))) + Arg(1))) + Arg(1) + Arg(2))
[01.07.2016 01:17:31,083] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.82
[01.07.2016 01:17:31,084] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ 4.0) ^ ((((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 5.0)))) ==> (Arg(2) + Arg(0) + Arg(0)) + ((((Arg(2) + Arg(0) + Arg(0)) + ((Arg(2) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1))) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + Arg(1)) + Arg(1))) + Arg(1) + Arg(2))) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)
[01.07.2016 01:17:35,242] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.28
[01.07.2016 01:17:35,242] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((X ^ 5.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (6.0 - 6.0)))) ==> Arg(1) + Arg(2) + Arg(1)
[01.07.2016 01:17:41,460] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.22
[01.07.2016 01:17:41,461] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) * (4.0 - 4.0)) ^ ((((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 5.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (4.0 ^ X)))) - (((X ^ 5.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((6.0 - 6.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ (6.0 ^ 6.0)) ^ X))) - (6.0 - 6.0)))) ==> Arg(2) + Arg(2) + Arg(0)
[01.07.2016 01:17:41,964] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.22
[01.07.2016 01:17:41,965] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - (((X ^ 5.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> (Arg(1) + Arg(1) + Arg(2)) + ((Arg(0) + (Arg(0) + Arg(2) + (Arg(0) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2))) + ((Arg(2) + Arg(2) + (Arg(0) + (((Arg(2) + Arg(2) + Arg(2)) + (Arg(1) + (Arg(2) + (Arg(1) + Arg(0) + Arg(1)) + (Arg(1) + Arg(2) + Arg(0))) + Arg(0)) + (((Arg(0) + Arg(0) + Arg(0)) + Arg(0) + Arg(1)) + Arg(0) + Arg(1))) + Arg(2) + (Arg(2) + Arg(0) + ((Arg(1) + Arg(0) + Arg(1)) + Arg(0) + Arg(1)))) + Arg(2))) + Arg(1) + Arg(2))) + Arg(2) + Arg(1)) + Arg(2)
[01.07.2016 01:17:43,396] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.14
[01.07.2016 01:17:43,397] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 3.0) ^ (5.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((X ^ 5.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 7.0)))) ==> (Arg(0) + (Arg(0) + Arg(2) + (Arg(0) + (Arg(1) + Arg(0) + Arg(1)) + Arg(2))) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2))) + ((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(2)
[01.07.2016 01:17:44,737] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.22
[01.07.2016 01:17:44,738] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - (((X ^ 5.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> Arg(2) + Arg(0) + Arg(0)
[01.07.2016 01:17:49,202] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.19
[01.07.2016 01:17:49,202] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> Arg(2) + Arg(0) + Arg(0)
[01.07.2016 01:17:50,626] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.17
[01.07.2016 01:17:50,627] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> Arg(0)
[01.07.2016 01:17:51,501] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.13
[01.07.2016 01:17:51,502] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - (((((X ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> Arg(0)
[01.07.2016 01:17:52,078] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.03
[01.07.2016 01:17:52,078] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (X ^ 7.0)))) ==> Arg(0)
[01.07.2016 01:17:53,653] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 74.80
[01.07.2016 01:17:53,653] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((X * X) ^ (6.0 - X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> ((Arg(0) + Arg(0) + (Arg(2) + Arg(2) + (Arg(2) + Arg(0) + Arg(1)))) + Arg(1) + Arg(2)) + ((Arg(0) + Arg(0) + Arg(0)) + (Arg(2) + Arg(1) + Arg(1)) + Arg(2)) + ((Arg(1) + (Arg(2) + Arg(2) + Arg(0)) + Arg(0)) + Arg(1) + Arg(2))
[01.07.2016 01:17:57,805] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 74.77
[01.07.2016 01:17:57,806] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - (X ^ 7.0))) ^ X) ^ ((X * X) ^ (6.0 - X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (((X ^ 6.0) ^ 4.0) ^ (6.0 - X))))) ==> (Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(1)) + (Arg(0) + ((Arg(0) + (Arg(0) + Arg(2) + ((Arg(0) + Arg(2) + Arg(2)) + (Arg(2) + Arg(2) + Arg(0)) + (Arg(1) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(0) + Arg(0)) + Arg(0)))) + Arg(2)) + (Arg(2) + Arg(2) + (Arg(2) + Arg(1) + Arg(1))) + Arg(2)) + Arg(2)) + ((Arg(0) + ((Arg(0) + Arg(2) + Arg(2)) + Arg(2) + (Arg(1) + Arg(1) + Arg(0))) + Arg(1)) + Arg(2) + (Arg(2) + Arg(2) + Arg(0)))
[01.07.2016 01:17:58,263] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 73.63
[01.07.2016 01:17:58,264] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((X ^ 7.0) ^ 4.0)) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> ((Arg(0) + Arg(0) + (Arg(2) + Arg(2) + (Arg(2) + Arg(0) + Arg(1)))) + Arg(1) + Arg(2)) + Arg(0) + ((Arg(1) + (Arg(2) + Arg(2) + Arg(0)) + Arg(0)) + Arg(1) + Arg(2))
[01.07.2016 01:17:59,932] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 73.42
[01.07.2016 01:17:59,932] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((X ^ 6.0) ^ 4.0)) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> (Arg(0) + Arg(2) + Arg(1)) + (Arg(2) + ((Arg(0) + (Arg(0) + Arg(2) + (Arg(2) + (Arg(2) + Arg(0) + Arg(0)) + ((Arg(0) + (Arg(2) + Arg(2) + Arg(2)) + Arg(2)) + (((Arg(0) + Arg(0) + Arg(0)) + Arg(0) + Arg(1)) + Arg(0) + Arg(1)) + Arg(2)))) + Arg(2)) + (Arg(2) + Arg(2) + (Arg(2) + Arg(1) + Arg(1))) + Arg(2)) + Arg(2)) + Arg(1)
[01.07.2016 01:18:04,391] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 72.60
[01.07.2016 01:18:04,392] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 5.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> Arg(2) + ((Arg(1) + Arg(0) + Arg(1)) + ((Arg(0) + (Arg(1) + Arg(2) + Arg(0)) + ((Arg(2) + Arg(2) + ((Arg(2) + Arg(0) + (Arg(2) + Arg(2) + (Arg(0) + Arg(2) + Arg(1)))) + (Arg(2) + Arg(0) + Arg(0)) + Arg(2))) + Arg(1) + Arg(2))) + Arg(2) + (Arg(1) + (Arg(2) + Arg(2) + Arg(0)) + Arg(1))) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:18:07,747] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 72.59
[01.07.2016 01:18:07,747] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 5.0) ^ (4.0 - X))) ^ X))) - ((X * X) ^ (6.0 - X))))) ==> Arg(2) + ((Arg(1) + Arg(0) + Arg(1)) + ((Arg(0) + (Arg(1) + Arg(2) + Arg(0)) + ((Arg(2) + Arg(2) + ((Arg(2) + Arg(0) + (Arg(2) + Arg(2) + (Arg(0) + Arg(2) + Arg(1)))) + (Arg(2) + Arg(0) + Arg(0)) + Arg(2))) + Arg(1) + Arg(2))) + Arg(2) + (Arg(1) + (Arg(2) + Arg(2) + Arg(0)) + Arg(1))) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:18:13,934] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 72.59
[01.07.2016 01:18:13,934] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 5.0) ^ (4.0 - X))) ^ X))) - (((X * X) ^ 3.0) ^ (5.0 - X))))) ==> (Arg(2) + Arg(2) + Arg(0)) + Arg(0) + ((((Arg(0) + Arg(1) + Arg(0)) + (Arg(2) + Arg(0) + Arg(2)) + (((Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(1)) + Arg(0) + Arg(1)) + ((Arg(1) + Arg(1) + Arg(0)) + Arg(0) + Arg(1)) + (((Arg(0) + Arg(2) + Arg(2)) + Arg(0) + (Arg(1) + Arg(1) + Arg(1))) + Arg(1) + Arg(2)))) + Arg(1) + Arg(2)) + Arg(2) + ((Arg(2) + Arg(2) + (Arg(1) + (Arg(1) + Arg(2) + Arg(2)) + Arg(0))) + Arg(2) + Arg(2)))
[01.07.2016 01:18:15,187] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 71.56
[01.07.2016 01:18:15,188] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ (((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) ^ ((X * (X * X)) ^ 4.0)) - (6.0 - 6.0)))) ==> (((Arg(2) + Arg(0) + (Arg(0) + (Arg(1) + Arg(2) + Arg(0)) + ((Arg(0) + Arg(1) + Arg(0)) + (Arg(2) + Arg(1) + Arg(1)) + Arg(2)))) + (Arg(2) + Arg(1) + Arg(1)) + Arg(1)) + Arg(0) + Arg(1)) + (Arg(0) + Arg(0) + Arg(0)) + Arg(2)
[01.07.2016 01:18:15,465] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 70.65
[01.07.2016 01:18:15,465] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ ((((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ (6.0 - X))))) ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 01:18:18,956] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.70
[01.07.2016 01:18:18,957] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ (6.0 - X))))) ==> (Arg(0) + (Arg(0) + Arg(1) + Arg(1)) + Arg(1)) + (Arg(0) + ((Arg(2) + Arg(2) + ((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(1)) + Arg(2) + (Arg(2) + Arg(1) + Arg(2)))) + Arg(1) + Arg(2)) + Arg(2)) + ((Arg(1) + ((Arg(0) + Arg(2) + Arg(2)) + (Arg(2) + Arg(0) + Arg(1)) + Arg(0)) + Arg(0)) + Arg(2) + (Arg(2) + Arg(2) + Arg(0)))
[01.07.2016 01:18:22,874] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.70
[01.07.2016 01:18:22,874] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X * X) ^ (6.0 - X))))) ==> (((Arg(2) + Arg(0) + (Arg(0) + (Arg(1) + Arg(2) + Arg(0)) + (Arg(0) + Arg(1) + Arg(0)))) + (Arg(2) + Arg(1) + Arg(1)) + Arg(1)) + Arg(0) + Arg(1)) + ((Arg(0) + (Arg(0) + Arg(2) + (Arg(0) + Arg(2) + Arg(2))) + (Arg(2) + Arg(2) + Arg(0))) + Arg(2) + Arg(1)) + Arg(2)
[01.07.2016 01:18:23,538] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.60
[01.07.2016 01:18:23,538] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ (6.0 - X))))) ==> Arg(2) + ((Arg(1) + Arg(0) + Arg(1)) + (((Arg(2) + Arg(2) + ((Arg(0) + Arg(0) + Arg(2)) + ((Arg(0) + Arg(0) + Arg(0)) + Arg(2) + Arg(1)) + Arg(1))) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:18:35,612] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.50
[01.07.2016 01:18:35,612] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X))))) ==> Arg(2) + (((Arg(0) + Arg(0) + Arg(0)) + Arg(0) + Arg(1)) + (((Arg(0) + Arg(1) + Arg(0)) + Arg(2) + Arg(0)) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2)) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:18:39,391] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.50
[01.07.2016 01:18:39,392] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ (6.0 - X))))) ==> Arg(2) + (((Arg(0) + Arg(0) + Arg(0)) + Arg(0) + Arg(1)) + (((Arg(0) + Arg(1) + Arg(0)) + Arg(2) + Arg(0)) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2)) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:18:41,899] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.49
[01.07.2016 01:18:41,899] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ (6.0 - X))))) ==> Arg(0) + (Arg(0) + Arg(0) + ((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + (Arg(2) + Arg(2) + Arg(1)) + (Arg(2) + Arg(2) + Arg(0))) + Arg(2)) + (((Arg(1) + (((Arg(1) + Arg(1) + Arg(1)) + ((Arg(1) + ((Arg(0) + Arg(2) + Arg(2)) + (Arg(1) + Arg(1) + Arg(2)) + Arg(0)) + Arg(0)) + Arg(1) + Arg(2)) + ((Arg(0) + Arg(1) + Arg(0)) + Arg(0) + Arg(1))) + Arg(1) + Arg(0)) + Arg(0)) + Arg(2) + Arg(0)) + Arg(2) + (Arg(1) + (Arg(0) + Arg(2) + Arg(2)) + Arg(1))) + Arg(2))) + Arg(2)
[01.07.2016 01:18:43,643] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.49
[01.07.2016 01:18:43,644] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ (6.0 - X))))) ==> Arg(0) + (Arg(0) + Arg(0) + ((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + (Arg(2) + Arg(2) + Arg(1)) + (Arg(2) + Arg(2) + Arg(0))) + Arg(2)) + (((Arg(1) + (((Arg(1) + Arg(1) + Arg(1)) + ((Arg(1) + ((Arg(0) + Arg(2) + Arg(2)) + (Arg(1) + Arg(1) + Arg(2)) + Arg(0)) + Arg(0)) + Arg(1) + Arg(2)) + ((Arg(0) + Arg(1) + Arg(0)) + Arg(0) + Arg(1))) + Arg(1) + Arg(0)) + Arg(0)) + Arg(2) + Arg(0)) + Arg(2) + (Arg(1) + (Arg(0) + Arg(2) + Arg(2)) + Arg(1))) + Arg(2))) + Arg(2)
[01.07.2016 01:18:48,049] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.48
[01.07.2016 01:18:48,049] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ ((6.0 - X) - X))))) ==> ((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + (((Arg(2) + Arg(2) + Arg(0)) + (Arg(2) + Arg(2) + ((Arg(2) + Arg(2) + (Arg(0) + Arg(2) + Arg(2))) + Arg(1) + Arg(2))) + Arg(1)) + Arg(2) + (Arg(0) + Arg(1) + Arg(2)))) + Arg(2) + (Arg(2) + Arg(1) + Arg(2))
[01.07.2016 01:18:49,095] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.48
[01.07.2016 01:18:49,096] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * (4.0 - 4.0)) ^ 3.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - ((X * X) ^ 3.0))) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ (6.0 - X))))) ==> (Arg(0) + (((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + (((Arg(2) + Arg(2) + Arg(0)) + (Arg(2) + Arg(2) + ((Arg(2) + Arg(2) + (Arg(0) + Arg(2) + Arg(2))) + Arg(1) + Arg(2))) + Arg(1)) + Arg(2) + (Arg(0) + Arg(1) + Arg(2)))) + Arg(2) + (Arg(2) + Arg(1) + Arg(2))) + (Arg(1) + Arg(2) + Arg(0))) + (Arg(0) + Arg(2) + Arg(1)) + ((Arg(1) + ((Arg(0) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2)) + Arg(2) + (Arg(0) + Arg(2) + Arg(2))) + Arg(1)) + Arg(0) + Arg(1))
[01.07.2016 01:18:58,938] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.48
[01.07.2016 01:18:58,939] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ ((5.0 - X) - X))))) ==> (Arg(0) + ((Arg(0) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + (Arg(0) + Arg(0) + Arg(0)) + (Arg(1) + Arg(1) + Arg(2))) + Arg(1)) + Arg(2)) + (((Arg(0) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(2) + ((Arg(0) + (((Arg(2) + Arg(2) + Arg(2)) + Arg(1) + Arg(2)) + Arg(1) + Arg(2)) + Arg(1)) + Arg(2) + Arg(1))) + Arg(1)) + (((Arg(0) + Arg(1) + Arg(0)) + Arg(0) + Arg(1)) + Arg(0) + Arg(1))) + Arg(2) + (Arg(1) + (Arg(2) + Arg(0) + Arg(2)) + Arg(1))) + Arg(2)
[01.07.2016 01:19:09,332] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.47
[01.07.2016 01:19:09,333] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 5.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * ((5.0 * X) ^ 4.0)) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ ((3.0 - X) - X))))) ==> ((Arg(2) + Arg(1) + ((Arg(0) + Arg(0) + Arg(1)) + Arg(2) + (Arg(1) + Arg(0) + Arg(1)))) + ((Arg(0) + (Arg(2) + Arg(2) + Arg(0)) + Arg(2)) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2) + (Arg(2) + ((Arg(1) + Arg(1) + Arg(0)) + (Arg(0) + Arg(2) + (Arg(0) + Arg(2) + (Arg(0) + Arg(1) + Arg(2)))) + (Arg(2) + Arg(0) + Arg(0))) + Arg(2))
[01.07.2016 01:19:11,748] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.45
[01.07.2016 01:19:11,748] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 5.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * ((5.0 * X) ^ 4.0)) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - ((X * X) ^ 3.0)))) - ((X ^ 6.0) ^ ((3.0 - X) - X))))) ==> ((Arg(2) + Arg(1) + ((((Arg(0) + (Arg(2) + Arg(2) + ((Arg(1) + Arg(1) + (Arg(1) + Arg(2) + Arg(1))) + Arg(2) + Arg(0))) + Arg(0)) + Arg(1) + Arg(2)) + Arg(2) + Arg(0)) + Arg(2) + (Arg(1) + Arg(0) + Arg(1)))) + ((Arg(0) + (Arg(2) + Arg(2) + Arg(0)) + Arg(2)) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2) + (Arg(2) + ((Arg(1) + Arg(1) + Arg(0)) + (Arg(0) + Arg(2) + (Arg(0) + Arg(2) + (Arg(0) + Arg(1) + Arg(2)))) + (Arg(2) + Arg(0) + Arg(0))) + Arg(2))
[01.07.2016 01:19:12,346] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.44
[01.07.2016 01:19:12,346] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ ((((3.0 - X) - X) - X) - X))))) ==> (Arg(0) + (Arg(1) + (Arg(2) + Arg(0) + Arg(2)) + Arg(1)) + Arg(2)) + (((Arg(0) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(2) + ((Arg(0) + (((Arg(2) + Arg(2) + Arg(2)) + Arg(1) + Arg(2)) + Arg(1) + Arg(2)) + Arg(1)) + Arg(2) + Arg(1))) + Arg(1)) + (Arg(2) + Arg(1) + (Arg(1) + ((Arg(0) + Arg(0) + Arg(0)) + Arg(1) + Arg(0)) + Arg(1)))) + Arg(2) + (Arg(1) + (Arg(2) + Arg(0) + Arg(2)) + Arg(1))) + Arg(2)
[01.07.2016 01:19:15,986] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.36
[01.07.2016 01:19:15,986] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (5.0 - (X * X))) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ ((((3.0 - X) - X) - X) - X))))) ==> (Arg(1) + Arg(0) + Arg(2)) + (Arg(0) + ((Arg(2) + Arg(2) + ((Arg(0) + (((Arg(1) + ((Arg(0) + (Arg(0) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(2) + ((Arg(0) + Arg(2) + (Arg(1) + (Arg(2) + Arg(0) + Arg(2)) + Arg(1))) + Arg(2) + Arg(1))) + Arg(1)) + Arg(0)) + Arg(0)) + Arg(1) + Arg(2)) + Arg(1) + Arg(2)) + (Arg(1) + (Arg(0) + Arg(1) + Arg(0)) + Arg(1))) + (Arg(0) + (Arg(2) + Arg(0) + Arg(0)) + Arg(0)) + (Arg(2) + Arg(0) + Arg(2)))) + (Arg(0) + Arg(0) + Arg(2)) + Arg(2)) + Arg(2)) + Arg(1)
[01.07.2016 01:19:17,465] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.98
[01.07.2016 01:19:17,466] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * (6.0 - X))))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ ((5.0 - X) - X))))) ==> (Arg(0) + (Arg(0) + (Arg(2) + (((Arg(0) + (Arg(0) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(2) + ((Arg(0) + Arg(2) + (Arg(0) + Arg(1) + Arg(0))) + Arg(2) + Arg(1))) + Arg(1)) + Arg(0)) + Arg(2) + Arg(2)) + Arg(1)) + Arg(1)) + Arg(2)) + (((Arg(2) + Arg(0) + Arg(0)) + (Arg(2) + Arg(2) + Arg(2)) + (Arg(1) + Arg(1) + Arg(1))) + Arg(2) + ((Arg(0) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(2) + Arg(0)) + Arg(2) + (Arg(0) + Arg(2) + (Arg(0) + Arg(1) + Arg(0)))))) + Arg(2)
[01.07.2016 01:19:21,028] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.97
[01.07.2016 01:19:21,029] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * (6.0 - X))))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ (5.0 - X))))) ==> Arg(2) + (Arg(0) + ((Arg(0) + Arg(1) + Arg(0)) + (((Arg(0) + Arg(2) + Arg(1)) + Arg(1) + Arg(1)) + Arg(2) + Arg(2)) + Arg(2)) + Arg(2)) + (Arg(0) + (Arg(0) + Arg(1) + Arg(2)) + Arg(2))
[01.07.2016 01:19:21,648] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.96
[01.07.2016 01:19:21,648] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * (6.0 - X))))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - (((X * X) ^ 4.0) ^ (5.0 - (6.0 - 5.0)))))) ==> Arg(2) + Arg(0) + ((Arg(1) + Arg(1) + (Arg(1) + Arg(0) + Arg(1))) + Arg(2) + Arg(0))
[01.07.2016 01:19:22,991] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.95
[01.07.2016 01:19:22,991] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * (6.0 - X))))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - (((6.0 - 6.0) ^ 4.0) ^ (5.0 - (6.0 - 5.0)))))) ==> Arg(0) + (((Arg(0) + Arg(1) + Arg(0)) + (Arg(0) + (Arg(2) + Arg(2) + Arg(2)) + Arg(1)) + ((Arg(0) + Arg(1) + Arg(0)) + (Arg(1) + Arg(0) + Arg(2)) + (Arg(2) + Arg(0) + Arg(2)))) + Arg(2) + Arg(1)) + Arg(2)
[01.07.2016 01:19:26,556] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.91
[01.07.2016 01:19:26,556] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - (((X * X) ^ 4.0) ^ (5.0 - (6.0 - 5.0)))))) ==> (Arg(0) + (Arg(0) + (Arg(2) + (Arg(1) + (Arg(2) + Arg(0) + Arg(2)) + Arg(1)) + Arg(1)) + Arg(1)) + Arg(2)) + ((Arg(1) + (Arg(2) + Arg(0) + Arg(2)) + Arg(1)) + Arg(2) + (((Arg(2) + Arg(0) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(2) + (Arg(0) + Arg(1) + Arg(0))) + Arg(1)) + ((Arg(1) + (Arg(0) + Arg(1) + Arg(0)) + Arg(1)) + Arg(0) + Arg(1))) + Arg(2) + ((Arg(0) + Arg(2) + Arg(0)) + Arg(2) + ((Arg(0) + (Arg(0) + Arg(1) + Arg(1)) + Arg(2)) + (Arg(0) + Arg(0) + Arg(2)) + Arg(0))))) + Arg(2)
[01.07.2016 01:19:28,835] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.90
[01.07.2016 01:19:28,835] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - (((X * X) ^ 4.0) ^ (5.0 - (6.0 - 5.0)))))) ==> (Arg(2) + Arg(0) + Arg(2)) + (((Arg(0) + Arg(1) + Arg(0)) + (Arg(0) + (Arg(2) + Arg(2) + ((Arg(2) + Arg(2) + (Arg(2) + Arg(1) + ((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + (Arg(1) + Arg(0) + Arg(1))))) + Arg(2) + Arg(1))) + Arg(1)) + (Arg(0) + Arg(2) + Arg(1))) + Arg(2) + (Arg(1) + (Arg(0) + Arg(0) + Arg(2)) + Arg(0))) + Arg(2)
[01.07.2016 01:19:30,849] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.89
[01.07.2016 01:19:30,849] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - (((X * X) ^ 4.0) ^ (5.0 - (6.0 - 6.0)))))) ==> (Arg(2) + Arg(0) + Arg(2)) + (((Arg(0) + Arg(1) + Arg(0)) + (Arg(0) + (Arg(2) + Arg(2) + ((Arg(2) + Arg(2) + (Arg(2) + Arg(1) + ((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + (Arg(1) + Arg(0) + Arg(1))))) + Arg(2) + Arg(1))) + Arg(1)) + (Arg(0) + Arg(2) + Arg(1))) + Arg(2) + (Arg(1) + (Arg(0) + Arg(0) + Arg(2)) + Arg(0))) + Arg(2)
[01.07.2016 01:19:31,556] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.88
[01.07.2016 01:19:31,557] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (5.0 - (6.0 - 5.0)))))) ==> ((((Arg(2) + Arg(1) + (((Arg(0) + Arg(1) + Arg(2)) + Arg(2) + Arg(0)) + Arg(2) + (Arg(1) + Arg(0) + Arg(1)))) + (((Arg(0) + Arg(1) + Arg(0)) + ((Arg(0) + Arg(1) + Arg(1)) + (Arg(0) + (Arg(2) + Arg(2) + (Arg(0) + Arg(1) + Arg(0))) + Arg(1)) + Arg(2)) + Arg(2)) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2) + ((Arg(2) + Arg(2) + ((Arg(0) + Arg(2) + Arg(2)) + Arg(1) + Arg(2))) + Arg(1) + Arg(2))) + (Arg(0) + (Arg(2) + Arg(1) + ((Arg(0) + Arg(0) + Arg(1)) + Arg(2) + (Arg(1) + Arg(0) + Arg(1)))) + Arg(1)) + Arg(2)) + (Arg(0) + Arg(1) + (Arg(2) + Arg(2) + (Arg(1) + Arg(2) + Arg(0)))) + Arg(2)
[01.07.2016 01:19:32,258] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.88
[01.07.2016 01:19:32,259] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((((X * X) ^ 4.0) ^ 4.0) ^ (5.0 - ((X * X) - 5.0)))))) ==> (((Arg(2) + Arg(1) + ((Arg(1) + Arg(1) + Arg(0)) + Arg(2) + (Arg(1) + Arg(1) + Arg(1)))) + ((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + (Arg(0) + (Arg(2) + ((Arg(0) + ((Arg(0) + Arg(1) + Arg(0)) + Arg(1) + ((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + ((Arg(1) + Arg(0) + Arg(1)) + Arg(0) + Arg(1)))) + Arg(1)) + Arg(1) + Arg(2)) + Arg(1)) + Arg(1))) + Arg(1)) + Arg(0) + Arg(1)) + Arg(2) + (((Arg(1) + Arg(1) + Arg(1)) + (Arg(0) + (Arg(0) + ((Arg(1) + Arg(2) + Arg(1)) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))) + Arg(2) + Arg(1))
[01.07.2016 01:19:44,961] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.65
[01.07.2016 01:19:44,961] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((((X * X) ^ 4.0) ^ 3.0) ^ (6.0 - X))))) ==> (((Arg(2) + Arg(1) + ((Arg(1) + Arg(1) + Arg(0)) + Arg(2) + (Arg(1) + Arg(1) + Arg(1)))) + ((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + (Arg(0) + (Arg(2) + ((Arg(0) + ((Arg(0) + Arg(1) + Arg(0)) + Arg(1) + (((Arg(0) + Arg(2) + (Arg(0) + Arg(1) + Arg(2))) + Arg(2) + Arg(2)) + Arg(2) + (Arg(0) + ((Arg(0) + Arg(1) + Arg(2)) + Arg(0) + Arg(1)) + Arg(1)))) + Arg(1)) + Arg(1) + Arg(2)) + Arg(1)) + Arg(1))) + Arg(1)) + Arg(0) + Arg(1)) + Arg(2) + (((Arg(1) + Arg(1) + Arg(1)) + (Arg(0) + (Arg(0) + ((Arg(1) + Arg(2) + Arg(1)) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))) + Arg(2) + Arg(1))
[01.07.2016 01:19:46,588] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.65
[01.07.2016 01:19:46,588] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ 3.0) ^ (6.0 - X))))) ==> (((Arg(0) + Arg(1) + Arg(1)) + Arg(2) + (Arg(0) + Arg(2) + Arg(0))) + ((Arg(1) + Arg(0) + Arg(1)) + Arg(0) + Arg(1)) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0)) + Arg(2)
[01.07.2016 01:19:50,615] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.52
[01.07.2016 01:19:50,615] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> ((Arg(1) + Arg(0) + Arg(0)) + (((Arg(1) + Arg(0) + Arg(1)) + Arg(0) + Arg(1)) + Arg(1) + (Arg(0) + Arg(2) + Arg(1))) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0)) + Arg(2)
[01.07.2016 01:20:12,800] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.52
[01.07.2016 01:20:12,800] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 01:20:32,098] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.37
[01.07.2016 01:20:32,098] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> Arg(1)
[01.07.2016 01:20:38,138] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.34
[01.07.2016 01:20:38,139] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - ((X * X) ^ 3.0))) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> (Arg(0) + Arg(2) + (Arg(0) + Arg(0) + Arg(1))) + Arg(2) + (Arg(0) + Arg(2) + Arg(2))
[01.07.2016 01:20:45,736] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.33
[01.07.2016 01:20:45,736] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - ((6.0 - 6.0) ^ 3.0))) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> (Arg(0) + Arg(2) + ((((Arg(1) + Arg(0) + Arg(2)) + Arg(2) + ((Arg(1) + Arg(0) + Arg(0)) + (Arg(1) + Arg(0) + Arg(2)) + Arg(1))) + Arg(2) + ((Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + (Arg(0) + Arg(1) + Arg(1)))) + Arg(0) + Arg(1))) + Arg(2) + Arg(2)
[01.07.2016 01:20:59,521] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.33
[01.07.2016 01:20:59,522] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (5.0 ^ 3.0))) ^ (X * X))) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - ((6.0 - 6.0) ^ 3.0))) ^ ((((X * X) ^ 3.0) ^ 5.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> (Arg(2) + ((Arg(2) + Arg(1) + (Arg(1) + (Arg(1) + (Arg(1) + Arg(0) + Arg(2)) + ((Arg(1) + Arg(0) + Arg(1)) + Arg(2) + (Arg(2) + Arg(2) + Arg(0)))) + Arg(2))) + Arg(1) + Arg(2)) + (Arg(1) + Arg(0) + Arg(2))) + (Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + (Arg(1) + Arg(0) + Arg(0)) + ((Arg(1) + Arg(1) + Arg(2)) + ((Arg(2) + Arg(1) + Arg(2)) + Arg(1) + Arg(2)) + (Arg(1) + Arg(0) + Arg(0))))
[01.07.2016 01:21:06,708] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.29
[01.07.2016 01:21:06,708] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (5.0 ^ 3.0))) ^ (X * X))) - ((((((X * X) ^ 4.0) ^ 4.0) ^ (6.0 - (4.0 - (X * 5.0)))) ^ ((((X * X) ^ 3.0) ^ 5.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> (Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + ((((Arg(0) + Arg(2) + Arg(1)) + (Arg(1) + Arg(1) + Arg(2)) + ((Arg(1) + Arg(1) + Arg(1)) + Arg(2) + (Arg(1) + Arg(0) + Arg(2)))) + ((Arg(0) + Arg(0) + Arg(2)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(1) + Arg(2) + Arg(2))) + ((Arg(0) + Arg(0) + Arg(2)) + (Arg(2) + Arg(2) + Arg(1)) + (Arg(1) + Arg(2) + Arg(0)))) + (Arg(0) + Arg(1) + Arg(1)) + Arg(2))
[01.07.2016 01:21:35,551] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.29
[01.07.2016 01:21:35,552] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (5.0 ^ 3.0))) ^ (X * X))) - ((((((X * X) ^ 4.0) ^ 4.0) ^ (6.0 - (4.0 - (X * 5.0)))) ^ ((((X * X) ^ 3.0) ^ 5.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> (Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + ((((Arg(0) + Arg(2) + Arg(1)) + (Arg(1) + Arg(1) + Arg(2)) + ((Arg(1) + Arg(1) + Arg(1)) + Arg(2) + (Arg(1) + Arg(0) + Arg(2)))) + ((Arg(0) + Arg(0) + Arg(2)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(1) + Arg(2) + Arg(2))) + ((Arg(0) + Arg(0) + Arg(2)) + (Arg(2) + Arg(2) + Arg(1)) + (Arg(1) + Arg(2) + Arg(0)))) + (Arg(0) + Arg(1) + Arg(1)) + Arg(2))
[01.07.2016 01:24:02,122] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:24:02,129] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:24:02,148] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:24:02,277] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:24:02,281] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:24:03,039] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 903.09
[01.07.2016 01:24:03,042] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X * X ==> Arg(0)
[01.07.2016 01:24:05,039] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 893.78
[01.07.2016 01:24:05,040] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - ((4.0 - 4.0) ^ (2.0 - 2.0)) ==> Arg(0)
[01.07.2016 01:24:06,329] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 878.18
[01.07.2016 01:24:06,332] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - ((X ^ 10.0) ^ (X ^ 4.0)) ==> Arg(0)
[01.07.2016 01:24:08,376] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 878.15
[01.07.2016 01:24:08,376] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (((X * X) - ((X * X) ^ (X ^ 4.0))) ^ 4.0) ==> Arg(0) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2)
[01.07.2016 01:24:09,708] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 876.69
[01.07.2016 01:24:09,709] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - ((X ^ 10.0) ^ (((X * X) ^ (X - X)) - ((X ^ 4.0) ^ (X ^ 4.0)))) ==> Arg(0)
[01.07.2016 01:24:11,348] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 872.81
[01.07.2016 01:24:11,351] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - ((((X * X) - (((X * X) - ((X * X) - X)) ^ 4.0)) - ((X * X) ^ (X ^ 4.0))) ^ 4.0) ==> (((Arg(2) + Arg(2) + Arg(0)) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2)) + Arg(2) + Arg(0)) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2)
[01.07.2016 01:24:12,450] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 872.14
[01.07.2016 01:24:12,450] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (((X * X) - (((X * X) - (X ^ 3.0)) ^ (X * X))) ^ (5.0 - 3.0)) ==> Arg(0)
[01.07.2016 01:24:14,582] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 869.96
[01.07.2016 01:24:14,582] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (((X * X) - (((X * X) ^ (((4.0 * 4.0) ^ (X * X)) - ((X * X) ^ (X * X)))) ^ (X * X))) ^ (5.0 - 3.0)) ==> Arg(0)
[01.07.2016 01:24:15,150] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 869.08
[01.07.2016 01:24:15,151] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - ((((X * X) ^ 10.0) ^ (X * X)) ^ (X * X)) ==> (Arg(1) + Arg(0) + Arg(0)) + (Arg(2) + Arg(0) + (Arg(2) + Arg(1) + Arg(1))) + (Arg(1) + Arg(0) + Arg(0))
[01.07.2016 01:24:58,190] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:24:58,205] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:24:58,243] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:24:58,353] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:24:58,357] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:24:58,441] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.95
[01.07.2016 01:24:58,444] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * (3.0 ^ X)) - (X * 3.0) ==> Arg(2)
[01.07.2016 01:24:58,927] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.87
[01.07.2016 01:24:58,927] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) - X) * ((X * X) - X)) ^ (4.0 ^ X)) - X ==> Arg(2)
[01.07.2016 01:24:59,041] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.84
[01.07.2016 01:24:59,042] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((((X - X) * X) - X) * ((X * X) - X)) ^ (4.0 ^ X)) - X ==> Arg(2)
[01.07.2016 01:24:59,228] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.78
[01.07.2016 01:24:59,229] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ 6.0) ^ (6.0 ^ (X * 6.0)) ==> Arg(2)
[01.07.2016 01:24:59,302] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.54
[01.07.2016 01:24:59,302] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) ^ (6.0 ^ (X * 6.0)) ==> Arg(2)
[01.07.2016 01:24:59,636] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.54
[01.07.2016 01:24:59,639] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) - X) * ((2.0 - 2.0) - X)) ^ (6.0 ^ (X * 6.0)) ==> Arg(1) + Arg(1) + Arg(2)
[01.07.2016 01:24:59,686] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.54
[01.07.2016 01:24:59,686] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) - X) * ((X * X) - X)) ^ (6.0 ^ (X * 6.0)) ==> Arg(1) + Arg(1) + Arg(2)
[01.07.2016 01:25:00,000] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.54
[01.07.2016 01:25:00,000] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) - X) * (((X ^ 4.0) * 4.0) - X)) ^ (6.0 ^ (X * 6.0)) ==> Arg(0) + Arg(1) + Arg(2)
[01.07.2016 01:25:00,029] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.47
[01.07.2016 01:25:00,030] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) - X) * ((X * X) - X)) ^ (6.0 ^ (X * 6.0))) ^ 4.0 ==> Arg(2) + Arg(0) + Arg(2)
[01.07.2016 01:25:00,129] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.34
[01.07.2016 01:25:00,129] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (6.0 ^ (X * 6.0))) ^ 4.0) ^ (6.0 ^ (X * 6.0)) ==> (Arg(1) + Arg(1) + Arg(0)) + Arg(2) + (Arg(0) + Arg(0) + Arg(1))
[01.07.2016 01:25:00,226] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.16
[01.07.2016 01:25:00,226] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (3.0 ^ (X * 6.0))) ^ (6.0 ^ (X * 6.0))) ^ 4.0 ==> Arg(0) + Arg(2) + Arg(1)
[01.07.2016 01:25:00,328] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.11
[01.07.2016 01:25:00,328] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ ((3.0 ^ 3.0) ^ (X * 6.0))) ^ (3.0 ^ (3.0 ^ (5.0 ^ X))) ==> Arg(0) + Arg(2) + (((Arg(0) + Arg(2) + Arg(1)) + (Arg(0) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))) + Arg(1)) + Arg(2) + Arg(0))
[01.07.2016 01:25:00,467] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.09
[01.07.2016 01:25:00,467] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) ^ (5.0 ^ (X * 6.0))) ^ (6.0 ^ (X * 6.0))) ^ 4.0) ^ 4.0 ==> Arg(2) + Arg(0) + Arg(2)
[01.07.2016 01:25:00,719] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.06
[01.07.2016 01:25:00,720] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ (5.0 ^ (X * 6.0))) ^ (6.0 ^ (X * 6.0))) ^ 4.0 ==> Arg(1) + (((Arg(1) + Arg(2) + Arg(1)) + Arg(2) + (Arg(0) + Arg(2) + Arg(2))) + Arg(0) + Arg(2)) + Arg(1)
[01.07.2016 01:25:00,786] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.05
[01.07.2016 01:25:00,787] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) ^ (5.0 ^ (X * 6.0))) ^ (6.0 ^ (X * 6.0))) ^ 3.0) ^ 4.0 ==> Arg(0) + Arg(2) + Arg(1)
[01.07.2016 01:25:00,892] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.05
[01.07.2016 01:25:00,893] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) ^ (5.0 ^ (X * 6.0))) ^ (6.0 ^ (X * 6.0))) ^ 3.0) ^ 3.0 ==> Arg(1)
[01.07.2016 01:25:01,033] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.03
[01.07.2016 01:25:01,033] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) ^ (6.0 ^ (X * 6.0))) ^ 3.0) ^ (6.0 ^ (X * 6.0))) ^ 4.0 ==> Arg(0)
[01.07.2016 01:25:01,425] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.97
[01.07.2016 01:25:01,426] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ ((3.0 * 3.0) ^ 3.0)) ^ ((5.0 ^ (X * 6.0)) ^ 3.0)) ^ 4.0 ==> Arg(2) + Arg(1) + Arg(0)
[01.07.2016 01:25:01,929] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.97
[01.07.2016 01:25:01,930] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ ((3.0 * 3.0) ^ 3.0)) ^ ((6.0 ^ (X * 6.0)) ^ 3.0)) ^ 4.0 ==> (Arg(1) + Arg(2) + Arg(0)) + Arg(2) + Arg(0)
[01.07.2016 01:25:02,012] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.97
[01.07.2016 01:25:02,013] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (4.0 * 4.0)) ^ ((5.0 ^ (X * 6.0)) ^ 3.0)) ^ 4.0 ==> Arg(1) + Arg(0) + Arg(1)
[01.07.2016 01:25:02,418] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.96
[01.07.2016 01:25:02,419] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X ^ ((3.0 * 5.0) ^ 3.0)) ^ ((6.0 ^ (X * 6.0)) ^ 3.0)) ^ 9.0 ==> (Arg(0) + Arg(0) + (Arg(2) + Arg(2) + (Arg(0) + Arg(1) + Arg(2)))) + Arg(2) + Arg(0)
[01.07.2016 01:25:02,621] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.96
[01.07.2016 01:25:02,621] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ (4.0 * 4.0)) ^ ((6.0 ^ (X * 6.0)) ^ 3.0)) ^ 4.0) ^ 3.0 ==> (Arg(1) + Arg(2) + Arg(0)) + Arg(2) + Arg(0)
[01.07.2016 01:25:04,895] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.96
[01.07.2016 01:25:04,895] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X ^ 4.0) ^ ((6.0 ^ (X * 6.0)) ^ 3.0)) ^ 3.0) ^ 4.0) ^ 4.0 ==> (Arg(2) + Arg(2) + Arg(1)) + (Arg(2) + Arg(1) + Arg(1)) + (Arg(2) + Arg(1) + Arg(1))
[01.07.2016 01:25:05,606] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.96
[01.07.2016 01:25:05,606] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X ^ (2.0 * 4.0)) ^ ((4.0 ^ (X * 5.0)) ^ 5.0)) ^ 3.0) ^ 4.0) ^ 4.0 ==> Arg(1)
[01.07.2016 01:25:05,643] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.92
[01.07.2016 01:25:05,644] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X ^ 4.0) ^ ((4.0 ^ (X * 6.0)) ^ 3.0)) ^ 3.0) ^ 4.0) - (X * X) ==> (Arg(1) + Arg(0) + Arg(1)) + (Arg(1) + Arg(1) + Arg(2)) + (Arg(1) + Arg(1) + Arg(1))
[01.07.2016 01:25:05,734] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.87
[01.07.2016 01:25:05,734] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ (10.0 * 4.0)) ^ ((5.0 ^ (X * 6.0)) ^ 3.0)) ^ 4.0) - (X * X) ==> (Arg(1) + Arg(0) + Arg(1)) + (Arg(1) + Arg(1) + Arg(2)) + (Arg(1) + Arg(1) + Arg(1))
[01.07.2016 01:25:06,505] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.80
[01.07.2016 01:25:06,506] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ ((5.0 ^ ((X * 4.0) ^ 3.0)) ^ 4.0)) ^ 4.0) - (X * X) ==> Arg(1)
[01.07.2016 01:25:06,924] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.80
[01.07.2016 01:25:06,925] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ ((5.0 ^ ((X * 4.0) ^ 3.0)) ^ 4.0)) ^ 4.0) - (X * X) ==> Arg(1)
[01.07.2016 01:25:07,192] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.80
[01.07.2016 01:25:07,193] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ ((5.0 ^ ((X * 5.0) ^ 3.0)) ^ 4.0)) ^ 4.0) - (X * X) ==> Arg(0) + Arg(0) + (Arg(0) + Arg(0) + Arg(0))
[01.07.2016 01:25:07,249] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.79
[01.07.2016 01:25:07,249] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ ((4.0 ^ ((X * 5.0) ^ 3.0)) ^ 4.0)) ^ 4.0) - (X * X) ==> Arg(1)
[01.07.2016 01:25:07,345] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.79
[01.07.2016 01:25:07,346] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (5.0 ^ (((X * 4.0) ^ 5.0) ^ 5.0))) ^ 4.0) - (X * X) ==> Arg(0) + ((Arg(0) + Arg(0) + Arg(0)) + Arg(2) + Arg(1)) + Arg(0)
[01.07.2016 01:25:07,474] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.79
[01.07.2016 01:25:07,475] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (5.0 ^ (((X * 6.0) ^ 3.0) ^ 5.0))) ^ 4.0) - (X * X) ==> (Arg(1) + Arg(1) + Arg(1)) + Arg(2) + (Arg(0) + Arg(0) + (Arg(1) + Arg(1) + Arg(2)))
[01.07.2016 01:25:07,506] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.79
[01.07.2016 01:25:07,506] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (5.0 ^ (((X * 5.0) ^ 3.0) ^ 5.0))) ^ 4.0) - (X * X) ==> Arg(0) + ((Arg(0) + Arg(0) + Arg(0)) + Arg(2) + Arg(1)) + Arg(0)
[01.07.2016 01:25:07,686] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.79
[01.07.2016 01:25:07,687] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (5.0 ^ (((X * 5.0) ^ 5.0) ^ 5.0))) ^ 4.0) - (X * X) ==> (Arg(2) + Arg(2) + Arg(0)) + Arg(1) + Arg(1)
[01.07.2016 01:25:07,719] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.79
[01.07.2016 01:25:07,719] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (5.0 ^ (((X * 5.0) ^ 5.0) ^ 5.0))) ^ 3.0) - (X * X) ==> ((Arg(1) + Arg(1) + Arg(1)) + (Arg(2) + Arg(0) + Arg(0)) + (Arg(0) + Arg(0) + Arg(0))) + Arg(2) + (Arg(1) + Arg(2) + Arg(1))
[01.07.2016 01:25:07,756] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.78
[01.07.2016 01:25:07,757] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (5.0 ^ (((X * 4.0) ^ 5.0) ^ 5.0))) - (X * X) ==> Arg(1) + Arg(1) + Arg(2)
[01.07.2016 01:25:07,975] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.78
[01.07.2016 01:25:07,975] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (3.0 ^ ((((X * 5.0) ^ 5.0) ^ 5.0) ^ 5.0))) - (X * X) ==> Arg(1)
[01.07.2016 01:25:08,235] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.35
[01.07.2016 01:25:08,236] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ (3.0 ^ ((((X * 5.0) ^ 5.0) ^ 5.0) ^ 5.0))) - (X * X) ==> Arg(2) + Arg(1) + (Arg(0) + Arg(0) + Arg(2))
[01.07.2016 01:25:22,589] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.35
[01.07.2016 01:25:22,590] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ (3.0 ^ ((((X * 5.0) ^ 5.0) ^ 5.0) ^ 5.0))) - (X * X) ==> Arg(2) + Arg(1) + (Arg(0) + Arg(0) + Arg(2))
[01.07.2016 01:26:13,470] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:26:13,477] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:26:13,497] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:26:13,635] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:26:13,639] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:26:13,744] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.32
[01.07.2016 01:26:13,747] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ 4.0 ==> Arg(0)
[01.07.2016 01:26:13,853] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.06
[01.07.2016 01:26:13,854] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 9.0) - X ==> Arg(0)
[01.07.2016 01:26:14,596] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.06
[01.07.2016 01:26:14,597] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (X - ((X ^ 9.0) - X)) ==> Arg(1)
[01.07.2016 01:26:15,448] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.98
[01.07.2016 01:26:15,449] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X - (X ^ 8.0)) - X) - X ==> Arg(0)
[01.07.2016 01:26:15,560] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.98
[01.07.2016 01:26:15,561] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((4.0 - 4.0) - (X ^ 8.0)) - X ==> Arg(2)
[01.07.2016 01:26:17,603] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.96
[01.07.2016 01:26:17,605] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (2.0 ^ (X - X)) ==> Arg(2)
[01.07.2016 01:26:17,711] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.56
[01.07.2016 01:26:17,712] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (2.0 ^ (X ^ 7.0)) ==> Arg(2)
[01.07.2016 01:26:17,725] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.52
[01.07.2016 01:26:17,726] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (4.0 ^ (X ^ 7.0)) ==> Arg(2)
[01.07.2016 01:26:18,023] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.48
[01.07.2016 01:26:18,023] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (2.0 ^ (X ^ 5.0)) ==> Arg(2)
[01.07.2016 01:26:18,080] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.42
[01.07.2016 01:26:18,080] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (3.0 ^ (X ^ 5.0)) ==> Arg(2)
[01.07.2016 01:26:18,666] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.42
[01.07.2016 01:26:18,666] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (2.0 ^ (X ^ 3.0)) ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 01:26:27,460] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.42
[01.07.2016 01:26:27,461] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (2.0 ^ (X ^ 3.0)) ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 01:27:27,694] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:27:27,710] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:27:27,903] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:27:28,031] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:27:28,036] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:27:28,155] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.78
[01.07.2016 01:27:28,157] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((sine X) / (6.0 / X)) - (sine (8.0 / X)) ==> Arg(2)
[01.07.2016 01:27:28,217] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.01
[01.07.2016 01:27:28,218] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (X * 7.0) ==> (Arg(1) + Arg(1) + Arg(2)) + (Arg(2) + Arg(2) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0))
[01.07.2016 01:27:28,332] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.96
[01.07.2016 01:27:28,333] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((sine (4.0 * X)) - (7.0 * 7.0 * X)) ==> Arg(2) + Arg(1) + Arg(1)
[01.07.2016 01:27:28,371] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.88
[01.07.2016 01:27:28,372] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (X * (7.0 - (sine (9.0 ^ X)))) ==> (Arg(0) + Arg(2) + Arg(0)) + (Arg(0) + Arg(2) + Arg(1)) + (Arg(2) + Arg(2) + Arg(1))
[01.07.2016 01:27:28,494] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.35
[01.07.2016 01:27:28,494] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((5.0 * 5.0) * (sine (Exp(X))) * (sine (4.0 * X))) ==> Arg(1)
[01.07.2016 01:27:28,520] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.02
[01.07.2016 01:27:28,523] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((3.0 * 3.0 * X) * 6.0 * 6.0)) ==> Arg(0) + Arg(1) + Arg(0)
[01.07.2016 01:27:28,561] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.41
[01.07.2016 01:27:28,561] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (7.0 / (sine ((sine 3.0) / X))) ==> (Arg(0) + Arg(1) + Arg(0)) + (Arg(1) + Arg(1) + Arg(0)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:27:28,936] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.85
[01.07.2016 01:27:28,936] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (7.0 / (sine (7.0 / (sine ((sine 3.0) / X))))) ==> (Arg(1) + Arg(1) + Arg(0)) + (Arg(1) + Arg(0) + Arg(2)) + Arg(0)
[01.07.2016 01:27:30,158] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.43
[01.07.2016 01:27:30,159] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (7.0 / (sine (7.0 / (sine (7.0 * X * 7.0))))) ==> Arg(2) + Arg(2) + Arg(0)
[01.07.2016 01:27:40,857] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.11
[01.07.2016 01:27:40,858] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (7.0 / (sine ((7.0 * X * 7.0) / (sine 3.0)))) ==> Arg(1)
[01.07.2016 01:27:42,751] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.75
[01.07.2016 01:27:42,751] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (10.0 / (sine (sine (sine ((7.0 * X * 7.0) / (sine 3.0)))))) ==> Arg(0)
[01.07.2016 01:27:44,132] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.75
[01.07.2016 01:27:44,132] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (10.0 / (sine (sine (sine ((7.0 * X * 7.0) / (sine 3.0)))))) ==> Arg(0)
[01.07.2016 01:29:07,283] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:29:07,290] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:29:07,307] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:29:07,436] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:29:07,441] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:29:07,538] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.45
[01.07.2016 01:29:07,541] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (2.0 / X) ==> (Arg(2) + Arg(0) + Arg(2)) + Arg(1) + Arg(0)
[01.07.2016 01:29:07,648] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.38
[01.07.2016 01:29:07,649] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X * ((sine (2.0 / X)) / (sine (sine X))) ==> Arg(0)
[01.07.2016 01:29:07,899] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.36
[01.07.2016 01:29:07,900] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((sine 6.0) - ((6.0 * X) - 6.0)) ==> Arg(1) + Arg(0) + Arg(2)
[01.07.2016 01:29:08,090] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.17
[01.07.2016 01:29:08,091] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((X * 9.0) - (9.0 / 8.0)) - X) ==> Arg(0)
[01.07.2016 01:29:08,201] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.75
[01.07.2016 01:29:08,202] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((Exp((sine (sine (X * X * 2.0))))) * 5.0)) ==> Arg(0)
[01.07.2016 01:29:08,417] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.63
[01.07.2016 01:29:08,420] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((Exp((sine (sine (sine (5.0 * X * X)))))) * 4.0)) ==> Arg(0)
[01.07.2016 01:29:08,571] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.26
[01.07.2016 01:29:08,572] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((Exp((sine (sine (sine (5.0 * X * X)))))) * 4.0) ==> Arg(1) + (Arg(1) + Arg(0) + Arg(1)) + Arg(2)
[01.07.2016 01:29:08,640] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.88
[01.07.2016 01:29:08,641] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((X * 7.0) - 8.0) ==> Arg(2)
[01.07.2016 01:29:08,759] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.81
[01.07.2016 01:29:08,760] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (5.0 / (Exp((sine (sine (5.0 * X * X)))))) ==> Arg(2)
[01.07.2016 01:29:08,790] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.66
[01.07.2016 01:29:08,790] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((sine (sine (sine (5.0 * X * X)))) * 4.0) - 8.0) ==> Arg(1) + Arg(1) + Arg(1)
[01.07.2016 01:29:08,918] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.33
[01.07.2016 01:29:08,918] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((sine (5.0 * X * X)) * 4.0) - 8.0) ==> Arg(2) + Arg(0) + Arg(1)
[01.07.2016 01:29:09,537] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.07
[01.07.2016 01:29:09,538] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((sine (sine (sine (5.0 * X * X)))) * 5.0) - 8.0) ==> (Arg(1) + Arg(1) + Arg(2)) + (Arg(2) + Arg(2) + Arg(0)) + (Arg(1) + Arg(0) + Arg(0))
[01.07.2016 01:29:09,833] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.90
[01.07.2016 01:29:09,833] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((sine ((sine (5.0 * X * X)) * 2.0)) * 3.0) - 8.0) ==> Arg(1) + Arg(2) + Arg(1)
[01.07.2016 01:29:12,468] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.63
[01.07.2016 01:29:12,469] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((sine (X * (5.0 * X * X) * 9.0)) * 5.0) - 8.0) ==> Arg(2)
[01.07.2016 01:29:13,748] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.38
[01.07.2016 01:29:13,748] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (5.0 - ((sine (X * (5.0 * X * X) * 9.0)) * 5.0)) ==> Arg(1)
[01.07.2016 01:29:14,182] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.38
[01.07.2016 01:29:14,183] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (5.0 - ((sine (X * (X * X * 5.0) * 9.0)) * 5.0)) ==> Arg(2) + (Arg(1) + Arg(2) + Arg(2)) + Arg(1)
[01.07.2016 01:29:23,403] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.27
[01.07.2016 01:29:23,404] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (5.0 - (X * ((X * X * 8.0) * 4.0) * 6.0)) ==> Arg(2)
[01.07.2016 01:29:23,443] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.27
[01.07.2016 01:29:23,443] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (5.0 - ((X * (X * 6.0 * X) * 8.0) * 4.0)) ==> Arg(2) + Arg(1) + Arg(1)
[01.07.2016 01:29:47,564] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.18
[01.07.2016 01:29:47,565] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((X * (X * 6.0 * X) * 8.0) * 4.0) - 8.0) ==> Arg(1) + Arg(2) + Arg(2)
[01.07.2016 01:29:51,558] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.17
[01.07.2016 01:29:51,558] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((X * (sine (X * X * 7.0)) * 8.0) * 4.0) - 8.0) ==> Arg(1) + (Arg(2) + (Arg(2) + Arg(1) + (Arg(2) + Arg(2) + Arg(0))) + Arg(1)) + Arg(0)
[01.07.2016 01:30:04,278] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.13
[01.07.2016 01:30:04,279] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((X * (sine (4.0 / X)) * 8.0) - 8.0) ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 01:30:06,178] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 2.77
[01.07.2016 01:30:06,187] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((X * (sine (4.0 / (sine (4.0 / X)))) * 8.0) - 8.0) ==> Arg(0)
[01.07.2016 01:30:17,211] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 2.14
[01.07.2016 01:30:17,211] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (2.0 / (sine ((X * (sine (4.0 / X)) * 7.0) - 8.0))) ==> Arg(2)
[01.07.2016 01:31:34,485] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 2.14
[01.07.2016 01:31:34,485] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (2.0 / (sine ((X * (sine (4.0 / X)) * 7.0) - 8.0))) ==> Arg(2)
[01.07.2016 01:33:15,042] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:33:15,080] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:33:15,119] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:33:15,267] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:33:15,271] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:33:15,440] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.92
[01.07.2016 01:33:15,456] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (7.0 * X * 7.0) ==> (Arg(0) + Arg(2) + Arg(1)) + (Arg(0) + Arg(1) + Arg(1)) + (Arg(2) + Arg(2) + Arg(1))
[01.07.2016 01:33:15,495] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.18
[01.07.2016 01:33:15,495] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((4.0 * 4.0) * (4.0 ^ 4.0) * (X ^ 4.0)) ==> Arg(1)
[01.07.2016 01:33:15,636] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.59
[01.07.2016 01:33:15,636] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (6.0 / X) ==> Arg(1) + Arg(0) + Arg(1)
[01.07.2016 01:33:15,826] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.13
[01.07.2016 01:33:15,827] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((4.0 * 4.0) * (4.0 ^ 4.0) * (Exp(X))) ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 01:33:15,964] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.12
[01.07.2016 01:33:15,965] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (6.0 / (sine (sine (6.0 / X)))) ==> Arg(0)
[01.07.2016 01:33:16,217] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.96
[01.07.2016 01:33:16,220] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (3.0 * (sine (sine (6.0 / (sine (sine (6.0 / X))))))) ==> Arg(1) + (Arg(0) + Arg(0) + (Arg(2) + Arg(1) + Arg(0))) + Arg(1)
[01.07.2016 01:33:17,262] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.65
[01.07.2016 01:33:17,263] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (3.0 * (sine (sine (sine (6.0 / (sine (sine (6.0 / X)))))))) ==> Arg(2)
[01.07.2016 01:33:18,255] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.41
[01.07.2016 01:33:18,256] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((Exp(X)) / (sine (6.0 / X))) ==> Arg(2)
[01.07.2016 01:33:18,552] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.99
[01.07.2016 01:33:18,552] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((Exp(X)) / (sine (sine ((Exp(X)) / (sine (6.0 / X)))))) ==> (Arg(1) + Arg(1) + Arg(0)) + Arg(2) + Arg(2)
[01.07.2016 01:33:20,122] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.91
[01.07.2016 01:33:20,122] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((Exp(X)) / (sine (sine ((6.0 / X) - X)))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 01:33:20,494] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.81
[01.07.2016 01:33:20,495] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((7.0 ^ X) / (sine (6.0 / X))) ==> (Arg(2) + Arg(1) + Arg(2)) + Arg(0) + Arg(2)
[01.07.2016 01:33:20,852] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.42
[01.07.2016 01:33:20,852] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((6.0 ^ X) / (sine (sine (6.0 / X)))) ==> Arg(2)
[01.07.2016 01:34:28,424] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.99
[01.07.2016 01:34:28,424] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((6.0 ^ X) / (sine (sine (6.0 / X)))) - (sine 3.0)) ==> Arg(2)
[01.07.2016 01:35:43,773] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.99
[01.07.2016 01:35:43,774] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((6.0 ^ X) / (sine (sine (6.0 / X)))) - (sine 3.0)) ==> Arg(2)
[01.07.2016 01:37:51,135] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:37:51,158] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:37:51,195] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:37:51,444] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:37:51,449] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:37:51,610] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.13
[01.07.2016 01:37:51,614] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((X - 2.0) * (X / 2.0) * (sine X)) ==> Arg(2) + (Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(0) + Arg(1))
[01.07.2016 01:37:51,752] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.11
[01.07.2016 01:37:51,753] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X - 2.0) * (X / 2.0) * (sine X) ==> (Arg(2) + Arg(2) + Arg(2)) + (Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + Arg(1) + Arg(1))
[01.07.2016 01:37:51,791] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.95
[01.07.2016 01:37:51,792] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0) ==> Arg(1)
[01.07.2016 01:37:51,862] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.22
[01.07.2016 01:37:51,863] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) ==> Arg(2)
[01.07.2016 01:37:51,967] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.99
[01.07.2016 01:37:51,968] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0))) ==> Arg(0)
[01.07.2016 01:37:52,004] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.91
[01.07.2016 01:37:52,007] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)))) ==> Arg(2)
[01.07.2016 01:37:55,710] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.90
[01.07.2016 01:37:55,711] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)))) * (sine 8.0)) ==> Arg(1) + Arg(1) + Arg(1)
[01.07.2016 01:37:56,757] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.90
[01.07.2016 01:37:56,757] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((sine (sine ((sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) * (sine 8.0)))) * (sine 8.0)) ==> Arg(1)
[01.07.2016 01:37:57,394] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.90
[01.07.2016 01:37:57,394] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) * (sine (Exp(6.0)))))) ==> Arg(0) + Arg(2) + (Arg(1) + (Arg(0) + Arg(1) + ((Arg(1) + Arg(1) + Arg(2)) + Arg(1) + Arg(0))) + (Arg(0) + Arg(2) + Arg(2)))
[01.07.2016 01:37:57,998] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.87
[01.07.2016 01:37:57,999] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) * (sine (Exp((X * X))))))) ==> Arg(1) + Arg(1) + (Arg(0) + Arg(2) + Arg(2))
[01.07.2016 01:37:58,201] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.71
[01.07.2016 01:37:58,201] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) * (sine (Exp((X * X)))))) ==> Arg(0) + Arg(2) + (Arg(1) + (Arg(1) + Arg(0) + Arg(1)) + ((Arg(1) + Arg(0) + (Arg(0) + Arg(1) + Arg(0))) + Arg(0) + Arg(0)))
[01.07.2016 01:37:58,612] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.70
[01.07.2016 01:37:58,613] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) * (sine (Exp((X * (sine X))))))) ==> Arg(2) + ((Arg(2) + (Arg(0) + Arg(2) + Arg(1)) + Arg(2)) + Arg(2) + Arg(0)) + Arg(2)
[01.07.2016 01:37:59,550] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.64
[01.07.2016 01:37:59,550] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) * (Exp((X * X)))))) ==> (((Arg(0) + Arg(2) + Arg(0)) + Arg(1) + Arg(2)) + Arg(2) + Arg(2)) + Arg(2) + Arg(0)
[01.07.2016 01:37:59,886] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.59
[01.07.2016 01:37:59,886] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0))) * (Exp((X * X)))))) ==> Arg(0)
[01.07.2016 01:37:59,938] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.56
[01.07.2016 01:37:59,939] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)))) * (Exp((X * X))))) ==> Arg(1)
[01.07.2016 01:38:04,957] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.55
[01.07.2016 01:38:04,958] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)))) / (Exp((sine X)))))) ==> Arg(2) + Arg(0) + Arg(0)
[01.07.2016 01:38:05,100] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.53
[01.07.2016 01:38:05,100] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)))) / (Exp(X))))) ==> (Arg(2) + Arg(0) + Arg(0)) + Arg(0) + Arg(0)
[01.07.2016 01:38:05,339] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.52
[01.07.2016 01:38:05,339] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine (sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0))))) / (Exp(X))))) ==> Arg(2) + (((Arg(1) + Arg(1) + Arg(0)) + Arg(2) + Arg(2)) + Arg(0) + Arg(2)) + (Arg(2) + (Arg(2) + Arg(2) + Arg(0)) + Arg(2))
[01.07.2016 01:43:20,359] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:43:20,446] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:43:20,538] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:43:20,697] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:43:20,702] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:43:21,254] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.53
[01.07.2016 01:43:21,257] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (sine 9.0) / (X * 9.0 * 9.0) ==> Arg(2)
[01.07.2016 01:43:21,775] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.11
[01.07.2016 01:43:21,776] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (sine (X * 7.0 * X)) ^ 7.0 ==> Arg(2)
[01.07.2016 01:43:23,521] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.07
[01.07.2016 01:43:23,521] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((4.0 ^ X) - (X * X)) * ((sine X) * (4.0 * 4.0 * X)) * (sine (sine X))) ==> Arg(0)
[01.07.2016 01:44:13,168] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:44:13,207] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:44:13,226] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:44:13,354] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:44:13,359] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:44:15,472] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.28
[01.07.2016 01:44:15,475] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) / X ==> Arg(1)
[01.07.2016 01:44:16,287] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.28
[01.07.2016 01:44:16,336] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (3.0 * X) / 3.0 ==> Arg(0)
[01.07.2016 01:44:19,973] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.28
[01.07.2016 01:44:19,974] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (3.0 * ((X * X) / X)) / 3.0 ==> Arg(0)
[01.07.2016 01:44:38,768] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.28
[01.07.2016 01:44:38,769] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((3.0 * ((X * X) / X)) / 3.0) * ((X * X) / X)) / X ==> Arg(0) + Arg(2) + (Arg(2) + Arg(2) + Arg(2))
[01.07.2016 01:44:39,266] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.28
[01.07.2016 01:44:39,266] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) / X) * ((((3.0 * ((X * X) / X)) / 3.0) * ((X * ((X * X) / X)) / X)) / X)) / X ==> Arg(2) + Arg(0) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(1) + (Arg(2) + Arg(0) + Arg(0)))
[01.07.2016 01:47:52,004] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:47:52,012] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:47:52,032] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:47:52,142] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:47:52,146] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:47:54,229] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.92
[01.07.2016 01:47:54,233] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * 5.0 * X) / (X * 5.0) ==> (Arg(2) + Arg(0) + Arg(2)) + (Arg(2) + Arg(0) + Arg(1)) + (Arg(2) + Arg(2) + Arg(2))
[01.07.2016 01:47:58,545] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.92
[01.07.2016 01:47:58,546] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X * 3.0) / (X * 3.0) ==> (Arg(0) + Arg(2) + Arg(2)) + (Arg(1) + Arg(1) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1))
[01.07.2016 01:55:56,490] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:55:56,513] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:55:56,533] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:55:56,689] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:55:56,694] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:55:56,696] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.6 MB
[01.07.2016 01:55:59,846] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.02
[01.07.2016 01:55:59,847] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X ==> Arg(1)
[01.07.2016 01:56:00,977] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.02
[01.07.2016 01:56:00,980] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((((X * 7.0) / (ADF1(7.0,X,X))) - ((sine 7.0) * (X - X))),(ADF1(7.0,X,X)),(sine 7.0)) ==> Arg(0)
[01.07.2016 01:56:08,085] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.53
[01.07.2016 01:56:08,087] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((((X * 7.0) / (ADF1(7.0,X,X))) - ((sine 6.0) * (sine ((sine 4.0) * (4.0 * X))))),(ADF1(7.0,X,X)),(sine 7.0)) ==> Arg(0)
[01.07.2016 01:56:24,862] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.53
[01.07.2016 01:56:24,862] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((((X * 7.0) / (ADF1(7.0,X,X))) - ((sine 6.0) * (sine ((sine 4.0) * (4.0 * ((X * 8.0 * X) / (X * 8.0))))))),(ADF1(7.0,X,X)),(sine 7.0)) ==> Arg(0)
[01.07.2016 01:56:24,862] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 24.8 MB
[01.07.2016 01:56:51,833] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:56:51,840] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:56:51,861] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:56:51,982] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:56:51,987] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:56:51,989] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.3 MB
[01.07.2016 01:56:54,097] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.24
[01.07.2016 01:56:54,101] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((3.0 - (3.0 - X)),X,(2.0 * 2.0)) ==> Arg(0)
[01.07.2016 01:56:57,071] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.00
[01.07.2016 01:56:57,072] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (sine 2.0) * (ADF1(X,5.0,X)) ==> Arg(2)
[01.07.2016 01:57:08,830] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 35.1 MB
[01.07.2016 01:57:28,167] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:57:28,174] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:57:28,194] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:57:28,305] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:57:28,309] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:57:28,311] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.3 MB
[01.07.2016 01:57:36,898] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:57:36,905] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:57:36,926] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:57:37,039] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:57:37,044] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:57:37,047] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.3 MB
[01.07.2016 01:57:39,221] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:39,225] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) / X ==> Arg(0) + ((Arg(2) + Arg(0) + Arg(2)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(1) + Arg(2) + Arg(1))) + Arg(1)
[01.07.2016 01:57:43,274] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:43,274] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) / X) * ((X * X) / X)) / X ==> (Arg(1) + Arg(2) + Arg(2)) + Arg(0) + Arg(2)
[01.07.2016 01:57:46,233] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:46,233] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) * X) / X) / X ==> Arg(1) + Arg(0) + Arg(2)
[01.07.2016 01:57:47,508] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:47,508] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * 7.0) / (ADF1(7.0,7.0,7.0)) ==> Arg(0)
[01.07.2016 01:57:49,967] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:49,967] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) / X) * ((((X * 7.0) / (ADF1(7.0,7.0,7.0))) * ((X * X) / X)) / X)) / X ==> Arg(2)
[01.07.2016 01:57:50,443] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 18.3 MB
[01.07.2016 01:57:51,878] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:51,879] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((X * X) * (X * X)) / X) / X) * X) / X) / X ==> Arg(2) + ((Arg(1) + Arg(2) + Arg(0)) + (Arg(1) + (Arg(1) + Arg(1) + Arg(2)) + Arg(0)) + Arg(0)) + Arg(1)
[01.07.2016 01:57:53,094] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:53,095] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((X * X) * (((X * X) * ((X * X) / X)) / X)) / X) / X) * X) / X) / X ==> Arg(1) + Arg(0) + Arg(0)
[01.07.2016 01:57:53,835] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:53,836] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((((X * X) / X) * ((X / X) / X)) * (((X * X) * (X * X)) / X)) / X) / X ==> Arg(2) + Arg(0) + Arg(2)
[01.07.2016 01:57:54,798] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:54,799] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((((((X * X) * X) / X) / X) * ((((X * X) * X) / X) / X)) / X) * ((((((X * X) / X) * ((X / X) / X)) * (((X * X) * (X * X)) / X)) / X) / X)) / X ==> ((Arg(1) + Arg(0) + Arg(0)) + (Arg(1) + Arg(0) + Arg(0)) + Arg(1)) + (Arg(1) + Arg(2) + Arg(1)) + Arg(1)
[01.07.2016 01:57:56,649] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:56,649] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((((((X * X) * (X * X)) / X) / X) * X) / X) / X) * X) * (((((((X * X) * (X * X)) / X) / X) * X) / X) / X)) / X) / X ==> Arg(2) + ((Arg(2) + Arg(0) + Arg(1)) + (Arg(1) + Arg(0) + (Arg(2) + Arg(2) + Arg(1))) + Arg(0)) + Arg(1)
[01.07.2016 01:57:57,844] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:57,846] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((((X * X) * (X * X)) / X) / X) * X) / X) / X) * ((((X * X) * (((((((X * X) * (X * X)) / X) / X) * X) / X) / X)) / X) / X)) / X ==> Arg(1) + ((Arg(0) + Arg(1) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + (Arg(0) + (Arg(0) + ((Arg(1) + Arg(0) + Arg(0)) + (Arg(1) + Arg(2) + Arg(1)) + Arg(2)) + Arg(1)) + Arg(0))) + (Arg(0) + Arg(2) + Arg(1))
[01.07.2016 01:57:58,749] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:58,750] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((((X * X) * (X * X)) / X) / X) * X) / X) / X) * ((((X * X) * (((((((X * X) * (X * X)) / X) / X) * ((X * X) / X)) / X) / X)) / X) / X)) / X ==> Arg(1) + ((Arg(0) + Arg(1) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + (Arg(0) + (Arg(1) + Arg(0) + Arg(0)) + Arg(0))) + (Arg(0) + Arg(2) + Arg(1))
[01.07.2016 01:58:01,365] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:58:01,365] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((((X * X) * (X * X)) / X) / X) / X) * (((((((X * X) * (X * X)) / X) / X) * X) / X) / X)) / X) * (((((X * X) * (X * X)) / X) / X) / X)) / X ==> Arg(2) + ((Arg(1) + Arg(2) + Arg(1)) + (Arg(2) + Arg(2) + Arg(1)) + Arg(0)) + Arg(1)
[01.07.2016 01:58:01,365] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 50, memory free: 21.0 MB
[01.07.2016 01:58:12,798] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 75, memory free: 35.3 MB
[01.07.2016 01:58:23,973] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 100, memory free: 20.3 MB
[01.07.2016 01:58:27,260] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:58:27,261] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((((((X * X) * (X * X)) / X) / X) * (((((((X * X) * (X * X)) / X) / X) * X) / X) / X)) / X) * ((((((X * X) * (X * X)) / X) / X) / X) / X)) / X ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 09:21:36,598] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 09:21:36,761] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 09:21:36,836] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 09:21:36,935] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:06:11,968] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:06:12,108] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:06:12,127] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:06:12,260] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:08:08,246] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:08:08,254] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:08:08,294] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:08:08,468] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:10:03,170] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:10:03,177] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:10:03,197] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:10:03,305] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:10:03,309] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:10:03,311] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:10:05,641] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.52
[01.07.2016 10:10:05,641] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X ==> Arg(2)
[01.07.2016 10:10:07,656] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.52
[01.07.2016 10:10:07,657] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: 4.0 - (4.0 - X) ==> Arg(0)
[01.07.2016 10:10:11,948] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.28
[01.07.2016 10:10:11,949] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (ADF1((Exp(X)),(sine 8.0),(8.0 ^ 8.0))) * X ==> Arg(1)
[01.07.2016 10:10:19,485] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 44.4 MB
[01.07.2016 10:10:29,600] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.04
[01.07.2016 10:10:29,601] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (ADF1(((ADF1((Exp(X)),(sine 5.0),(ADF1((Exp(X)),(sine 5.0),((ADF1((Exp(X)),(sine 6.0),(sine 8.0))) * X))))) * X),(sine 8.0),(7.0 ^ 7.0))) * ((ADF1((Exp(X)),(sine 8.0),(sine 8.0))) * X) ==> Arg(1)
[01.07.2016 10:10:49,401] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.87
[01.07.2016 10:10:49,404] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (ADF1(6.0,(sine 8.0),(6.0 ^ 6.0))) * ((ADF1(((ADF1((Exp(X)),X,(ADF1((Exp(X)),(sine 5.0),(X * X))))) * X),(sine 8.0),(6.0 ^ 6.0))) * ((ADF1((Exp(X)),(sine 8.0),(sine 4.0))) * X)) ==> Arg(1)
[01.07.2016 10:11:04,876] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.83
[01.07.2016 10:11:04,877] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (ADF1(6.0,(sine 8.0),(6.0 ^ 6.0))) * ((ADF1(((ADF1((Exp(X)),X,(ADF1((Exp(X)),(sine 5.0),(X * X))))) * X),(sine 8.0),(Exp(X)))) * ((ADF1(7.0,(sine 8.0),(7.0 ^ 7.0))) * ((ADF1((Exp(X)),(sine 8.0),(sine 8.0))) * X))) ==> Arg(1)
[01.07.2016 10:11:04,877] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 50, memory free: 17.0 MB
[01.07.2016 10:11:33,046] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:11:33,053] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:11:33,073] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:11:33,185] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:11:33,189] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:11:33,190] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:11:33,357] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.84
[01.07.2016 10:11:33,358] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X ==> Arg(1)
[01.07.2016 10:11:33,537] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.84
[01.07.2016 10:11:33,538] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 2.0) * (X - X) * (sine 2.0)) * (Exp(X)) * ((X * 2.0 * X) ^ (2.0 ^ 2.0))) - ((Exp((2.0 - 2.0))) * ((2.0 - X) - 2.0)) ==> Arg(2)
[01.07.2016 10:11:33,610] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.84
[01.07.2016 10:11:33,610] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * 7.0) / 7.0 ==> Arg(1)
[01.07.2016 10:11:34,472] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 92.8 MB
[01.07.2016 10:11:34,506] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.55
[01.07.2016 10:11:34,506] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (sine 2.0) * X ==> Arg(0)
[01.07.2016 10:11:34,650] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.55
[01.07.2016 10:11:34,654] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (sine 2.0) * ((X * 7.0) / 7.0) ==> Arg(0)
[01.07.2016 10:11:34,810] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.08
[01.07.2016 10:11:34,810] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * ((X * 6.0) / (X * (sine 2.0)))) / 7.0 ==> Arg(2)
[01.07.2016 10:11:35,467] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 50, memory free: 179.9 MB
[01.07.2016 10:11:36,429] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 75, memory free: 81.3 MB
[01.07.2016 10:11:37,330] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 100, memory free: 309.5 MB
[01.07.2016 10:11:38,036] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 125, memory free: 211.8 MB
[01.07.2016 10:11:38,106] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.08
[01.07.2016 10:11:38,107] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((3.0 / (3.0 / X)) * ((X * 6.0) / (X * (sine 2.0)))) / 7.0 ==> Arg(2)
[01.07.2016 10:11:38,976] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 150, memory free: 113.9 MB
[01.07.2016 10:11:39,130] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.08
[01.07.2016 10:11:39,130] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((3.0 / (3.0 / X)) * (((3.0 / (3.0 / X)) * 6.0) / (X * (sine 2.0)))) / 7.0 ==> Arg(0) + Arg(1) + Arg(1)
[01.07.2016 10:11:39,259] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.08
[01.07.2016 10:11:39,260] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((3.0 / (3.0 / X)) * ((((7.0 * X) / 7.0) * 6.0) / (X * (sine 2.0)))) / 7.0 ==> Arg(0) + Arg(1) + Arg(1)
[01.07.2016 10:11:39,668] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 175, memory free: 35.7 MB
[01.07.2016 10:11:39,739] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.08
[01.07.2016 10:11:39,739] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((7.0 * X) / 7.0) * ((((7.0 * X) / 7.0) * 6.0) / (X * (sine 2.0)))) / 7.0 ==> Arg(0) + Arg(1) + Arg(1)
[01.07.2016 10:11:39,959] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.08
[01.07.2016 10:11:39,959] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((3.0 / (3.0 / X)) * (((X * (sine 4.0)) * 6.0) / (X * (sine 4.0)))) / 6.0) * ((((6.0 * X) / 6.0) * 6.0) / (X * (sine 2.0)))) / 7.0 ==> Arg(2) + Arg(2) + (Arg(0) + Arg(1) + Arg(1))
[01.07.2016 10:11:40,491] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 200, memory free: 269.4 MB
[01.07.2016 10:11:40,702] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.08
[01.07.2016 10:11:40,702] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((3.0 / (3.0 / X)) * (((X * (sine 4.0)) * 6.0) / (X * (sine 4.0)))) / 6.0) * (((X * (sine 4.0)) * 6.0) / (X * (sine 4.0)))) / 6.0) * ((((6.0 * X) / 6.0) * 6.0) / (X * (sine 2.0)))) / 7.0 ==> Arg(2)
[01.07.2016 10:11:41,308] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 225, memory free: 164.7 MB
[01.07.2016 10:11:42,091] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 250, memory free: 46.2 MB
[01.07.2016 10:11:42,307] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.08
[01.07.2016 10:11:42,307] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X - (X / (2.0 ^ 5.0))) - (X / (2.0 ^ 5.0)) ==> Arg(0) + Arg(0) + (Arg(2) + Arg(2) + Arg(2))
[01.07.2016 10:11:42,346] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.07
[01.07.2016 10:11:42,346] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((X - (X / (2.0 ^ 4.0))) / (2.0 ^ 4.0)) ==> Arg(2)
[01.07.2016 10:11:42,711] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.07
[01.07.2016 10:11:42,712] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - (X / (2.0 ^ 4.0))) - (X / (5.0 ^ 5.0))) / (2.0 ^ 4.0)) ==> Arg(2) + Arg(0) + Arg(0)
[01.07.2016 10:11:42,890] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.06
[01.07.2016 10:11:42,890] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((X - ((X - (X / (X - (X / (2.0 ^ 3.0))))) / (2.0 ^ 4.0))) / (2.0 ^ 4.0)) ==> Arg(0) + Arg(0) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 10:11:42,890] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 275, memory free: 179.3 MB
[01.07.2016 10:11:42,984] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.94
[01.07.2016 10:11:42,985] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (sine (3.0 ^ 3.0)) * (X - ((X / (X - (X / (X - (X / (4.0 ^ 8.0)))))) / (4.0 ^ 3.0))) ==> Arg(0) + Arg(2) + Arg(0)
[01.07.2016 10:11:43,092] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.72
[01.07.2016 10:11:43,097] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - (X / (3.0 ^ 3.0))) - ((X / (X * X * 8.0)) / (X - (X - (X / (2.0 ^ 3.0)))))) / (3.0 ^ 3.0)) ==> Arg(1) + Arg(0) + (Arg(0) + Arg(1) + (Arg(1) + Arg(1) + (Arg(0) + Arg(0) + (Arg(1) + Arg(2) + Arg(0)))))
[01.07.2016 10:11:43,131] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.70
[01.07.2016 10:11:43,131] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - ((X / (X * X * (X - ((3.0 ^ 3.0) / (2.0 ^ 2.0))))) / (5.0 ^ 5.0))) - ((X / (X * X * 8.0)) / (X - (X - (X / (2.0 ^ 3.0)))))) / (3.0 ^ 3.0)) ==> Arg(1) + Arg(0) + (Arg(0) + Arg(1) + (Arg(1) + Arg(1) + (Arg(0) + Arg(0) + (Arg(1) + Arg(2) + Arg(0)))))
[01.07.2016 10:11:43,174] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.63
[01.07.2016 10:11:43,174] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (sine (3.0 ^ 3.0)) * (X - ((X / (X - (X / (X - (X / (4.0 ^ 8.0)))))) / (3.0 ^ 3.0))) ==> Arg(0) + Arg(2) + Arg(0)
[01.07.2016 10:11:43,698] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.54
[01.07.2016 10:11:43,698] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((X - ((X - (X / (X - (X / (X - (X / (3.0 ^ 5.0))))))) / 3.0)) / (2.0 ^ 3.0)) ==> (Arg(0) + (Arg(1) + Arg(2) + Arg(2)) + Arg(0)) + Arg(1) + Arg(0)
[01.07.2016 10:11:43,740] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.54
[01.07.2016 10:11:43,740] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((X - ((X - (X / (X - (X / (X - (X / (2.0 ^ 8.0))))))) / 3.0)) / (2.0 ^ 3.0)) ==> (Arg(0) + (Arg(1) + Arg(2) + Arg(2)) + Arg(0)) + Arg(1) + Arg(0)
[01.07.2016 10:11:43,781] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.34
[01.07.2016 10:11:43,782] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (sine (3.0 ^ 3.0)) * (X - ((X / (X - (X / (X - (X / (4.0 ^ 8.0)))))) / (4.0 ^ 2.0))) ==> Arg(0) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))
[01.07.2016 10:11:43,913] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.19
[01.07.2016 10:11:43,913] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 6.0))) - (X / (3.0 ^ 3.0))) - ((X - (X - (X / (X - (X / (X - (X / (2.0 ^ 6.0)))))))) / (4.0 ^ 2.0))) - (X / (3.0 ^ 5.0)) ==> Arg(2)
[01.07.2016 10:11:44,224] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 300, memory free: 254.1 MB
[01.07.2016 10:11:44,721] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.18
[01.07.2016 10:11:44,722] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 6.0))) - (X / (3.0 ^ 3.0))) - ((X - (X - (X / (X - (X / (X - ((X - (X / 4.0)) / (2.0 ^ 6.0)))))))) / (4.0 ^ 2.0))) - (X / (3.0 ^ 5.0)) ==> Arg(0) + Arg(0) + (Arg(1) + Arg(1) + Arg(0))
[01.07.2016 10:11:44,768] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.18
[01.07.2016 10:11:44,768] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 6.0))) - (X / (3.0 ^ 3.0))) - ((X - (X - (X / (X - (X / (X - ((X - (X / 3.0)) / (2.0 ^ 6.0)))))))) / (4.0 ^ 2.0))) - (X / (3.0 ^ 5.0)) ==> Arg(2)
[01.07.2016 10:11:44,874] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.12
[01.07.2016 10:11:44,874] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (3.0 ^ 3.0))) - (X / (3.0 ^ 3.0))) - ((X - (X - (X / (X - (X / (X - ((X - (X / 3.0)) / (2.0 ^ 6.0)))))))) / (4.0 ^ 2.0))) - (X / (3.0 ^ 5.0)) ==> Arg(1) + Arg(1) + Arg(0)
[01.07.2016 10:11:45,071] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.04
[01.07.2016 10:11:45,071] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (X / (5.0 ^ 3.0))) - ((X / (X - (X / (X - (sine ((X * X * 10.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (X / (3.0 ^ 5.0)) ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 10:11:45,177] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.03
[01.07.2016 10:11:45,178] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (X / (5.0 ^ 3.0))) - ((X / (X - (X / (X - (X / (3.0 ^ 5.0)))))) / (4.0 ^ 2.0))) - (X / (4.0 ^ 8.0)) ==> Arg(0) + Arg(0) + (Arg(2) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(1) + (Arg(2) + Arg(0) + Arg(0))) + Arg(1))
[01.07.2016 10:11:45,279] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.02
[01.07.2016 10:11:45,279] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (X / (5.0 ^ 3.0))) - ((X / (X - (X / (X - (sine ((X * X * 10.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (X / (4.0 ^ 5.0)) ==> Arg(0) + Arg(0) + (Arg(1) + ((Arg(2) + (Arg(0) + Arg(0) + Arg(0)) + Arg(0)) + Arg(0) + Arg(1)) + (Arg(0) + Arg(0) + (Arg(0) + Arg(1) + Arg(2))))
[01.07.2016 10:11:45,426] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 325, memory free: 58.9 MB
[01.07.2016 10:11:45,552] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.01
[01.07.2016 10:11:45,553] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (X / (5.0 ^ 3.0))) - ((X / (X - (X / (X - (sine ((X * X * 10.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - ((5.0 ^ 3.0) / (7.0 ^ 5.0)) ==> Arg(1) + Arg(0) + Arg(0)
[01.07.2016 10:11:45,712] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.72
[01.07.2016 10:11:45,712] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (X / (5.0 ^ 3.0))) - ((X / (X - (X / (X - (sine ((X * X * 10.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 10.0) ^ (X - 10.0))) ==> Arg(0) + Arg(0) + (Arg(2) + Arg(2) + Arg(0))
[01.07.2016 10:11:46,382] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.71
[01.07.2016 10:11:46,382] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (X / (5.0 ^ 3.0))) - ((X / (X - (X / (X - (sine ((X * X * 10.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 8.0) ^ (X - 10.0))) ==> ((Arg(0) + (Arg(2) + Arg(1) + Arg(1)) + Arg(0)) + Arg(1) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(2) + Arg(2))) + Arg(0) + (((Arg(1) + (Arg(2) + Arg(2) + Arg(2)) + (Arg(2) + Arg(0) + Arg(0))) + Arg(1) + (Arg(2) + Arg(1) + Arg(2))) + (Arg(2) + Arg(0) + Arg(0)) + Arg(0))
[01.07.2016 10:11:46,625] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.71
[01.07.2016 10:11:46,626] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (X / (5.0 ^ 3.0))) - ((X / (X - (X / (X - (sine ((X * X * 10.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 8.0) ^ (X - 9.0))) ==> Arg(0) + Arg(0) + ((Arg(0) + Arg(2) + Arg(1)) + (Arg(1) + Arg(0) + Arg(0)) + Arg(0))
[01.07.2016 10:11:46,754] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.50
[01.07.2016 10:11:46,755] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (sine ((X * X * 10.0) ^ (X - 10.0)))) - ((X / (X - (X / (X - (sine ((X * X * 10.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 10.0) ^ (X - 10.0))) ==> Arg(2) + (((Arg(0) + Arg(1) + Arg(2)) + Arg(1) + Arg(1)) + (Arg(2) + Arg(0) + Arg(0)) + Arg(0)) + Arg(0)
[01.07.2016 10:11:46,881] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 350, memory free: 66.5 MB
[01.07.2016 10:11:47,001] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.32
[01.07.2016 10:11:47,001] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (X / (5.0 ^ (X * X * 10.0)))) - ((X / (X - (X / (X - (sine ((X * X * 10.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 10.0) ^ (X - 9.0))) ==> Arg(2) + Arg(1) + (Arg(0) + Arg(1) + Arg(1))
[01.07.2016 10:11:47,612] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.32
[01.07.2016 10:11:47,613] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (X / (4.0 ^ (X * X * 10.0)))) - ((X / (X - (X / (X - (sine ((X * X * 10.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 10.0) ^ (X - 9.0))) ==> ((Arg(2) + Arg(1) + Arg(0)) + (Arg(2) + Arg(0) + Arg(0)) + Arg(0)) + Arg(1) + Arg(0)
[01.07.2016 10:11:47,788] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.31
[01.07.2016 10:11:47,788] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (X / (4.0 ^ (X * X * 10.0)))) - ((X / (X - (X / (X - (X / (4.0 ^ 4.0)))))) / (4.0 ^ 2.0))) - (sine ((X * X * 10.0) ^ (X - 9.0))) ==> ((Arg(1) + Arg(1) + Arg(0)) + (Arg(1) + Arg(1) + Arg(1)) + ((((Arg(0) + Arg(1) + Arg(2)) + Arg(1) + Arg(1)) + Arg(0) + Arg(0)) + Arg(1) + Arg(0))) + Arg(0) + (Arg(2) + Arg(0) + Arg(0))
[01.07.2016 10:11:47,853] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.27
[01.07.2016 10:11:47,854] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (X / (5.0 ^ (X * X * 10.0)))) - ((X / (X - (X / (X - (sine ((X * X * 10.0) ^ (X - 9.0))))))) / (2.0 ^ 4.0))) - (sine ((X * X * 10.0) ^ (X - 9.0))) ==> Arg(1) + Arg(1) + Arg(1)
[01.07.2016 10:11:47,910] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.24
[01.07.2016 10:11:47,911] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / ((Exp(4.0)) / 4.0))) - (X / (4.0 ^ (X * X * 10.0)))) - ((X / (X - (X / (X - (sine ((X * X * 9.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 10.0) ^ (X - 9.0))) ==> Arg(0) + Arg(0) + ((((Arg(0) + Arg(1) + Arg(2)) + Arg(1) + Arg(1)) + ((Arg(1) + (Arg(1) + Arg(2) + Arg(1)) + Arg(2)) + Arg(0) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(1) + (Arg(2) + Arg(0) + Arg(0))) + Arg(0))
[01.07.2016 10:11:48,306] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 375, memory free: 38.6 MB
[01.07.2016 10:11:48,434] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.24
[01.07.2016 10:11:48,435] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / ((Exp(4.0)) / 4.0))) - (X / (4.0 ^ (X * X * 10.0)))) - ((X / (X - (X / (X - (sine ((X * X * 10.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 10.0) ^ (X - 9.0))) ==> Arg(0) + Arg(0) + ((((Arg(0) + Arg(1) + Arg(2)) + Arg(1) + Arg(1)) + ((Arg(1) + (Arg(1) + Arg(2) + Arg(1)) + Arg(2)) + Arg(0) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(1) + (Arg(2) + Arg(0) + Arg(0))) + Arg(0))
[01.07.2016 10:11:48,554] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.19
[01.07.2016 10:11:48,555] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / ((Exp(4.0)) / 4.0))) - (X / (4.0 ^ (X * X * 10.0)))) - ((X / (X - (X / (X - (sine ((X * X * 10.0) ^ (X - 9.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 10.0) ^ (X - 9.0))) ==> Arg(0) + Arg(0) + ((((((Arg(2) + Arg(0) + Arg(0)) + (Arg(2) + Arg(1) + Arg(1)) + Arg(0)) + Arg(1) + Arg(2)) + Arg(1) + Arg(1)) + ((Arg(1) + (Arg(1) + Arg(2) + Arg(1)) + Arg(2)) + Arg(0) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(1) + (Arg(2) + Arg(0) + Arg(0))) + Arg(0))
[01.07.2016 10:11:49,014] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.17
[01.07.2016 10:11:49,014] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X - (X / ((Exp(4.0)) / 4.0))) - ((X / (X - (X / (X - (sine ((X * X * 9.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 9.0) ^ (X - 8.0))) ==> Arg(0) + ((((Arg(1) + Arg(1) + (Arg(1) + Arg(2) + Arg(2))) + (Arg(2) + Arg(1) + Arg(1)) + Arg(0)) + Arg(1) + Arg(2)) + Arg(2) + Arg(1)) + Arg(1)
[01.07.2016 10:11:49,071] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.17
[01.07.2016 10:11:49,072] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / ((Exp(4.0)) / 4.0))) - (X / (4.0 ^ ((Exp(4.0)) / 2.0)))) - ((X / (X - (X / (X - (sine ((X * X * 8.0) ^ (X - 10.0))))))) / (2.0 ^ 4.0))) - (sine ((X * X * 9.0) ^ (X - 8.0))) ==> Arg(0) + ((((Arg(1) + Arg(1) + ((Arg(0) + Arg(2) + (Arg(0) + Arg(2) + (Arg(1) + Arg(0) + Arg(0)))) + Arg(0) + Arg(1))) + (Arg(2) + Arg(1) + Arg(1)) + Arg(0)) + Arg(1) + Arg(2)) + Arg(2) + Arg(1)) + Arg(1)
[01.07.2016 10:11:49,546] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.17
[01.07.2016 10:11:49,546] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X - (X / ((Exp(4.0)) / 4.0))) - ((X / (X - (X / (X - (sine ((X * X * 7.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 9.0) ^ (X - 8.0))) ==> Arg(0) + Arg(0) + ((Arg(1) + Arg(2) + Arg(2)) + Arg(1) + Arg(2))
[01.07.2016 10:11:49,805] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 400, memory free: 142.2 MB
[01.07.2016 10:11:50,630] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.17
[01.07.2016 10:11:50,630] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X - (X / ((Exp(4.0)) / 4.0))) - ((X / (X - (X / (X - (sine (sine ((X * X * 10.0) ^ (X - 9.0)))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 9.0) ^ (X - 8.0))) ==> Arg(0)
[01.07.2016 10:11:50,689] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.16
[01.07.2016 10:11:50,689] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X - ((X - (sine ((X * X * 8.0) ^ (Exp(4.0))))) / ((Exp(4.0)) / 4.0))) - ((X / (X - (X / (X - (sine ((X * X * 7.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 9.0) ^ (X - 8.0))) ==> Arg(2) + (Arg(0) + Arg(0) + ((Arg(0) + Arg(0) + (Arg(2) + Arg(2) + (Arg(1) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0)))) + (Arg(2) + Arg(0) + Arg(1)) + Arg(0))) + Arg(2)
[01.07.2016 10:11:51,288] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.06
[01.07.2016 10:11:51,288] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X - ((X - (sine (X * X * 7.0))) / ((Exp(4.0)) / 4.0))) - ((X / (X - (X / (X - (sine ((X * X * 7.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 9.0) ^ (X - 8.0))) ==> Arg(1)
[01.07.2016 10:11:51,444] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 425, memory free: 33.6 MB
[01.07.2016 10:11:52,007] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.96
[01.07.2016 10:11:52,007] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X - ((X - (sine (X * X * 7.0))) / (4.0 ^ 2.0))) - ((X / (X - (X / (X - (sine ((X * X * 7.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 9.0) ^ (X - 8.0))) ==> ((Arg(0) + Arg(0) + (Arg(2) + Arg(1) + (Arg(2) + Arg(0) + Arg(0)))) + Arg(0) + Arg(2)) + Arg(2) + Arg(0)
[01.07.2016 10:11:52,284] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.96
[01.07.2016 10:11:52,284] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X - ((X - (sine (X * X * 7.0))) / (4.0 ^ 2.0))) - ((X / (X - (X / (X - (sine ((X * X * 7.0) ^ (X - 9.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 9.0) ^ (X - 8.0))) ==> ((Arg(0) + Arg(0) + (Arg(2) + (Arg(2) + Arg(0) + Arg(0)) + Arg(0))) + Arg(0) + Arg(2)) + Arg(2) + Arg(0)
[01.07.2016 10:11:52,447] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.86
[01.07.2016 10:11:52,448] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X - ((X - (sine (X * X * (X - 10.0)))) / (4.0 ^ 2.0))) - ((X / (X - (X / (X - (sine ((X * X * 7.0) ^ (X - 10.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * 9.0) ^ (X - 8.0))) ==> (Arg(2) + Arg(2) + Arg(0)) + (Arg(2) + Arg(2) + (Arg(2) + ((Arg(2) + Arg(0) + Arg(0)) + (Arg(2) + Arg(2) + Arg(1)) + Arg(0)) + Arg(0))) + Arg(0)
[01.07.2016 10:11:52,778] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.81
[01.07.2016 10:11:52,778] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 5.0))) - (X / (X * X * 7.0))) - ((X / (X - (X / (X - (sine ((X * X * 6.0) ^ (X - 8.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * (2.0 ^ 2.0)) ^ (X - 8.0))) ==> Arg(0) + Arg(0) + (Arg(1) + Arg(0) + Arg(2))
[01.07.2016 10:11:52,779] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 450, memory free: 157.1 MB
[01.07.2016 10:11:53,112] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.80
[01.07.2016 10:11:53,113] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 5.0))) - (X / (X * X * 7.0))) - ((X / (X - (X / (X - (sine ((4.0 ^ 2.0) ^ (X - 8.0))))))) / (4.0 ^ 2.0))) - (sine ((X * X * (2.0 ^ 2.0)) ^ (X - 8.0))) ==> Arg(0) + Arg(0) + (Arg(1) + Arg(0) + Arg(2))
[01.07.2016 10:11:53,162] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.69
[01.07.2016 10:11:53,162] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 5.0))) - (X / (X * X * 7.0))) - ((X / (X - (X / (X - ((X * X * (2.0 ^ 2.0)) ^ (X - 8.0)))))) / (4.0 ^ 2.0))) - (sine ((X * X * (2.0 ^ 2.0)) ^ (X - 8.0))) ==> Arg(2) + (Arg(2) + Arg(1) + Arg(0)) + (Arg(1) + Arg(0) + Arg(0))
[01.07.2016 10:11:53,789] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.66
[01.07.2016 10:11:53,790] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * 7.0))) - ((X / (X - (X / (X - ((X * X * (2.0 ^ 2.0)) ^ (X - 8.0)))))) / (4.0 ^ 2.0))) - (sine ((X * X * (2.0 ^ 2.0)) ^ (X - 8.0))) ==> (Arg(2) + Arg(0) + Arg(0)) + (Arg(2) + (Arg(0) + (Arg(2) + Arg(0) + Arg(2)) + Arg(2)) + (Arg(0) + Arg(0) + (Arg(2) + Arg(2) + Arg(2)))) + Arg(1)
[01.07.2016 10:11:54,101] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 475, memory free: 86.8 MB
[01.07.2016 10:11:55,126] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.55
[01.07.2016 10:11:55,126] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * 7.0))) - ((X / (X - (X / (X - ((X * X * (Exp(X))) ^ (X - 8.0)))))) / (4.0 ^ 2.0))) - (sine ((X * X * (2.0 ^ 2.0)) ^ (X - 8.0))) ==> Arg(0) + Arg(0) + (Arg(1) + Arg(0) + (Arg(0) + (Arg(1) + (((Arg(0) + Arg(2) + Arg(1)) + (Arg(2) + Arg(2) + Arg(1)) + (Arg(2) + Arg(0) + Arg(1))) + Arg(2) + Arg(0)) + Arg(1)) + (Arg(2) + Arg(0) + Arg(0))))
[01.07.2016 10:11:55,382] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 500, memory free: 75.5 MB
[01.07.2016 10:11:56,545] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.42
[01.07.2016 10:11:56,546] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * (2.0 ^ 3.0)))) - ((X / (X - (X / (X - ((X * X * 3.0) ^ (X - 8.0)))))) / (4.0 ^ 2.0))) - (sine ((X * X * (2.0 ^ 2.0)) ^ (X - 8.0))) ==> (Arg(2) + (Arg(2) + Arg(1) + (Arg(0) + Arg(1) + Arg(2))) + (Arg(2) + (((Arg(1) + Arg(1) + Arg(1)) + (Arg(1) + (Arg(2) + Arg(2) + Arg(2)) + Arg(2)) + Arg(2)) + (Arg(2) + Arg(0) + Arg(0)) + Arg(2)) + Arg(0))) + Arg(2) + Arg(2)
[01.07.2016 10:11:56,716] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 525, memory free: 76.4 MB
[01.07.2016 10:11:56,869] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.41
[01.07.2016 10:11:56,869] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * 8.0))) - ((X / (X - (X / (X - ((X * X * (Exp(X))) ^ (X - 8.0)))))) / (4.0 ^ 2.0))) - (sine ((X * X * (2.0 ^ 2.0)) ^ (X - 8.0))) ==> Arg(1)
[01.07.2016 10:11:58,003] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 550, memory free: 72.3 MB
[01.07.2016 10:11:58,930] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.23
[01.07.2016 10:11:58,930] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * 8.0))) - ((X / (X - (X / (X - ((2.0 ^ 2.0) ^ (X - 8.0)))))) / (4.0 ^ 2.0))) - (sine ((X * X * (X * X * (Exp(X)))) ^ (X - 8.0))) ==> Arg(2) + (Arg(2) + Arg(2) + (Arg(1) + (Arg(0) + Arg(1) + Arg(2)) + Arg(2))) + Arg(2)
[01.07.2016 10:11:59,292] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 575, memory free: 39.9 MB
[01.07.2016 10:11:59,456] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.23
[01.07.2016 10:11:59,457] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * 8.0))) - ((X / (X - (X / (X - (8.0 ^ (X - 8.0)))))) / (4.0 ^ 2.0))) - (sine ((X * X * (X * X * (Exp(X)))) ^ (X - 8.0))) ==> Arg(2) + (Arg(2) + Arg(2) + (Arg(0) + Arg(0) + Arg(0))) + (Arg(2) + Arg(2) + ((Arg(2) + Arg(2) + Arg(0)) + (Arg(0) + Arg(0) + Arg(1)) + (Arg(1) + Arg(2) + Arg(2))))
[01.07.2016 10:11:59,582] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.23
[01.07.2016 10:11:59,583] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * 8.0))) - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (sine ((X * X * (X * X * (Exp(X)))) ^ (X - 8.0))) ==> Arg(2) + (Arg(2) + Arg(2) + Arg(2)) + (Arg(2) + Arg(2) + (Arg(2) + Arg(2) + (Arg(0) + Arg(0) + (((Arg(0) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(2) + Arg(0)) + Arg(2)) + Arg(2)) + ((Arg(2) + Arg(2) + Arg(2)) + Arg(1) + Arg(0)) + Arg(0)))))
[01.07.2016 10:11:59,875] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.18
[01.07.2016 10:11:59,875] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * 8.0))) - ((X / (X - (X / (X - ((X * X * 8.0) ^ (X - 6.0)))))) / (4.0 ^ 2.0))) - (sine ((X * X * (X * X * (Exp(X)))) ^ (X - 8.0))) ==> Arg(2) + Arg(2) + Arg(0)
[01.07.2016 10:12:00,208] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.92
[01.07.2016 10:12:00,208] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * 8.0))) - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (sine ((X * X * (X * X * (Exp(X)))) ^ ((X / X) - 8.0))) ==> Arg(2) + (Arg(2) + Arg(2) + Arg(2)) + (Arg(2) + Arg(2) + (Arg(2) + Arg(2) + (Arg(0) + Arg(0) + (((Arg(2) + Arg(2) + ((Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + Arg(2)) + Arg(2))) + (Arg(0) + (Arg(2) + Arg(2) + Arg(0)) + Arg(2)) + Arg(2)) + ((Arg(2) + Arg(2) + Arg(2)) + Arg(1) + Arg(0)) + Arg(0)))))
[01.07.2016 10:12:00,657] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 600, memory free: 29.0 MB
[01.07.2016 10:12:00,958] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.88
[01.07.2016 10:12:00,959] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - ((X - (X / (4.0 ^ 2.0))) / (X * X * 8.0))) - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (sine ((X * X * (X * X * (Exp(X)))) ^ ((X / X) - 8.0))) ==> (((Arg(2) + Arg(2) + (Arg(0) + Arg(1) + Arg(0))) + (Arg(0) + Arg(2) + Arg(2)) + Arg(2)) + Arg(1) + Arg(2)) + (Arg(2) + Arg(0) + Arg(0)) + Arg(2)
[01.07.2016 10:12:01,049] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.83
[01.07.2016 10:12:01,049] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * 8.0))) - ((X / (X - ((X - (X / (4.0 ^ 3.0))) / X))) / (4.0 ^ 2.0))) - (sine ((X * X * (X * X * (Exp(X)))) ^ ((X / X) - 8.0))) ==> Arg(2) + ((Arg(2) + Arg(2) + Arg(0)) + (Arg(2) + (Arg(2) + Arg(2) + Arg(0)) + (Arg(2) + (Arg(2) + Arg(2) + Arg(2)) + Arg(0))) + ((Arg(2) + (Arg(2) + Arg(2) + Arg(2)) + Arg(2)) + Arg(2) + (Arg(0) + Arg(2) + (Arg(2) + Arg(2) + Arg(2))))) + Arg(2)
[01.07.2016 10:12:01,195] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.75
[01.07.2016 10:12:01,195] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * 8.0))) - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (sine ((X * X * (X * X * 3.0)) ^ ((X / X) - 8.0))) ==> Arg(0)
[01.07.2016 10:12:01,573] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.64
[01.07.2016 10:12:01,573] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * (4.0 ^ 2.0)))) - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (sine ((X * X * (X * X * 3.0)) ^ ((X / X) - 8.0))) ==> Arg(0)
[01.07.2016 10:12:01,632] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.62
[01.07.2016 10:12:01,632] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - ((X - (X / (4.0 ^ 2.0))) / (X * X * 8.0))) - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (sine (sine ((X * X * (X * X * 3.0)) ^ ((X / X) - 8.0)))) ==> Arg(2) + (Arg(0) + Arg(0) + Arg(0)) + (Arg(2) + Arg(2) + ((Arg(2) + Arg(0) + Arg(0)) + (Arg(0) + Arg(0) + Arg(2)) + Arg(2)))
[01.07.2016 10:12:01,863] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 625, memory free: 65.7 MB
[01.07.2016 10:12:02,000] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.61
[01.07.2016 10:12:02,001] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - ((X - (X / 8.0)) / (X * X * 8.0))) - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (sine (sine ((X * X * (X * X * 3.0)) ^ ((X / X) - 8.0)))) ==> Arg(2) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(2) + (Arg(2) + Arg(2) + Arg(0)) + Arg(2))
[01.07.2016 10:12:02,226] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.60
[01.07.2016 10:12:02,226] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (4.0 ^ 2.0))) - (X / (X * X * (4.0 ^ 2.0)))) - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (sine (sine ((X * X * (X * X * 3.0)) ^ ((X / X) - 8.0)))) ==> Arg(0)
[01.07.2016 10:12:02,545] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.44
[01.07.2016 10:12:02,546] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - (X / (2.0 ^ 4.0))) - (X / (X * X * 7.0))) - ((X / (X - ((X - (X / (4.0 ^ 3.0))) / X))) / (4.0 ^ 2.0))) - (sine ((X * X * (X * X * 3.0)) ^ (4.0 - 8.0))) ==> (Arg(2) + (((Arg(2) + (Arg(2) + (Arg(2) + Arg(2) + Arg(2)) + Arg(2)) + Arg(2)) + Arg(1) + Arg(2)) + (Arg(2) + (Arg(1) + Arg(1) + Arg(2)) + (Arg(2) + Arg(0) + Arg(2))) + ((Arg(2) + (Arg(1) + Arg(2) + Arg(0)) + Arg(2)) + Arg(2) + (Arg(0) + Arg(1) + Arg(2)))) + Arg(0)) + (Arg(0) + Arg(1) + Arg(0)) + Arg(2)
[01.07.2016 10:12:02,637] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.41
[01.07.2016 10:12:02,637] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (X / (X * X * 8.0))) - ((X / (X - (X / X))) / (4.0 ^ 4.0))) - (sine (sine ((X * X * (X * X * 3.0)) ^ ((X / X) - 5.0)))) ==> Arg(2) + (Arg(2) + Arg(0) + Arg(0)) + ((Arg(1) + Arg(1) + Arg(2)) + Arg(2) + (Arg(2) + Arg(2) + (Arg(2) + Arg(2) + (Arg(0) + Arg(0) + Arg(0)))))
[01.07.2016 10:12:02,681] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.30
[01.07.2016 10:12:02,681] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (X / (X * X * 8.0))) - (X / (4.0 ^ 3.0))) - (sine (sine ((X * X * (X * X * 3.0)) ^ ((X / X) - 5.0)))) ==> ((((Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + (Arg(0) + Arg(2) + Arg(1))) + Arg(2)) + (Arg(2) + Arg(2) + Arg(0)) + (Arg(1) + Arg(0) + Arg(1))) + (Arg(0) + Arg(2) + Arg(2)) + Arg(2)) + Arg(0) + Arg(0)
[01.07.2016 10:12:02,843] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.25
[01.07.2016 10:12:02,845] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (X / (X * X * 8.0))) - ((X / 3.0) / (4.0 ^ 2.0))) - (sine (sine ((X * X * (X * X * 3.0)) ^ ((X / X) - 5.0)))) ==> Arg(2) + ((Arg(2) + Arg(1) + Arg(2)) + Arg(2) + (Arg(2) + Arg(2) + (Arg(0) + Arg(0) + Arg(0)))) + Arg(2)
[01.07.2016 10:12:02,933] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 21.82
[01.07.2016 10:12:02,933] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (X / (X * X * 8.0))) - ((X / (sine X)) / (4.0 ^ 4.0))) - (sine (sine ((X * X * (X * X * 3.0)) ^ ((X / X) - 5.0)))) ==> ((Arg(2) + ((Arg(1) + (((Arg(1) + Arg(2) + Arg(0)) + (Arg(2) + (Arg(2) + Arg(2) + Arg(2)) + Arg(2)) + Arg(2)) + Arg(1) + Arg(2)) + Arg(0)) + (Arg(2) + Arg(2) + Arg(0)) + Arg(0)) + Arg(2)) + Arg(1) + Arg(1)) + (Arg(0) + Arg(2) + Arg(2)) + Arg(2)
[01.07.2016 10:12:03,019] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 650, memory free: 40.7 MB
[01.07.2016 10:12:03,988] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 21.81
[01.07.2016 10:12:03,988] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (X / (X * X * 7.0))) - ((X / (sine X)) / (4.0 ^ 4.0))) - (sine (sine (sine ((X * X * (X * X * 3.0)) ^ ((X / X) - 5.0))))) ==> (Arg(2) + Arg(2) + Arg(0)) + Arg(0) + (Arg(2) + (((Arg(0) + Arg(0) + Arg(2)) + Arg(1) + Arg(1)) + Arg(2) + Arg(0)) + Arg(2))
[01.07.2016 10:12:04,185] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 675, memory free: 67.0 MB
[01.07.2016 10:12:04,522] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 21.73
[01.07.2016 10:12:04,522] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - ((X / (X - (X / X))) / (4.0 ^ 2.0))) - (X / (X * X * 7.0))) - ((X / (sine X)) / (4.0 ^ 4.0))) - (sine (sine (((X - (X / X)) * X * (X * X * 3.0)) ^ ((X / X) - 5.0)))) ==> (Arg(2) + Arg(2) + Arg(0)) + Arg(0) + (Arg(2) + (((Arg(0) + Arg(0) + Arg(2)) + Arg(1) + Arg(1)) + Arg(2) + Arg(0)) + Arg(2))
[01.07.2016 10:12:05,588] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 700, memory free: 54.0 MB
[01.07.2016 10:12:06,843] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 725, memory free: 26.9 MB
[01.07.2016 10:12:07,759] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 21.56
[01.07.2016 10:12:07,759] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - ((X / (X - (X / X))) / (5.0 ^ 2.0))) - (X / (X * X * 7.0))) - ((X / (sine X)) / (4.0 ^ 4.0))) - (sine (sine (((X - (X / X)) * X * (X * X * 3.0)) ^ ((X / X) - 5.0)))) ==> (Arg(0) + Arg(0) + Arg(1)) + ((Arg(0) + Arg(0) + (Arg(2) + Arg(2) + Arg(0))) + Arg(0) + (Arg(2) + ((Arg(2) + Arg(2) + Arg(0)) + Arg(2) + Arg(0)) + Arg(2))) + (((Arg(2) + (((Arg(2) + ((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(2)) + Arg(2)) + Arg(1) + Arg(1)) + Arg(2) + Arg(0)) + Arg(0)) + Arg(0) + Arg(2)) + Arg(0) + Arg(0))
[01.07.2016 10:12:08,138] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 750, memory free: 30.8 MB
[01.07.2016 10:12:09,443] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 775, memory free: 32.6 MB
[01.07.2016 10:12:10,696] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 21.56
[01.07.2016 10:12:10,696] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X - ((X / (X - (X / X))) / (5.0 ^ 2.0))) - (X / (X * X * 7.0))) - ((X / (sine X)) / (4.0 ^ 4.0))) - (sine (sine (((X - (X / X)) * X * (X * X * 3.0)) ^ ((X / X) - 5.0)))) ==> (Arg(0) + Arg(0) + Arg(1)) + ((Arg(0) + Arg(0) + (Arg(2) + Arg(2) + Arg(0))) + Arg(0) + (Arg(2) + ((Arg(2) + Arg(2) + Arg(0)) + Arg(2) + Arg(0)) + Arg(2))) + (((Arg(2) + (((Arg(2) + ((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(2)) + Arg(2)) + Arg(1) + Arg(1)) + Arg(2) + Arg(0)) + Arg(0)) + Arg(0) + Arg(2)) + Arg(0) + Arg(0))
[01.07.2016 10:18:42,188] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:18:42,353] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:18:42,379] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:18:42,479] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:18:42,483] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:18:42,497] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:18:44,256] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:18:44,256] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X ==> Arg(1)
[01.07.2016 10:18:52,810] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:18:52,810] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X * X) / (X ^ 2.0) ==> (Arg(0) + Arg(1) + Arg(2)) + (Arg(0) + Arg(2) + Arg(0)) + (Arg(1) + Arg(0) + Arg(0))
[01.07.2016 10:18:56,668] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 40.1 MB
[01.07.2016 10:18:58,082] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:18:58,082] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X / 3.0) * 3.0 ==> Arg(2)
[01.07.2016 10:19:07,799] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:19:07,800] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X * X) * X * X) / (X * X)) * X * X) / (X ^ 4.0) ==> Arg(0) + (Arg(1) + Arg(0) + Arg(0)) + Arg(0)
[01.07.2016 10:19:08,777] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 50, memory free: 16.0 MB
[01.07.2016 10:19:10,376] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:19:10,377] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X * X) * X * X) / (X ^ 3.0)) * X * X) / (X * X * X) ==> (Arg(0) + Arg(1) + Arg(2)) + (Arg(0) + Arg(1) + Arg(1)) + (Arg(1) + Arg(0) + Arg(0))
[01.07.2016 10:19:10,873] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:19:10,874] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X * X) * X * X) / (X ^ 3.0)) * X * ((X * X * X) / (X * X))) / (X ^ 3.0) ==> Arg(1) + Arg(1) + Arg(2)
[01.07.2016 10:19:11,359] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:19:11,360] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1(X,((X * X * X) * X * X),((((X * X * X) * X * X) / (X * X)) / (X * X))) ==> Arg(2)
[01.07.2016 10:19:14,316] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:19:14,316] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * ((((X * X * X) * X * X) / (X * X)) / (X * X)) * X) / (X * X) ==> (Arg(0) + Arg(0) + Arg(2)) + (Arg(0) + Arg(1) + Arg(2)) + ((Arg(0) + Arg(0) + Arg(2)) + (Arg(2) + Arg(2) + Arg(1)) + Arg(2))
[01.07.2016 10:19:15,889] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:19:15,890] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X * X) * (((((X * X * X) * X * X) / (X * X * X)) * X * X) / (X * X * X)) * X) / (X ^ 3.0)) * X * X) / (X * X * X) ==> (Arg(2) + Arg(1) + (Arg(1) + Arg(0) + Arg(0))) + (Arg(0) + Arg(1) + Arg(1)) + (Arg(1) + Arg(1) + Arg(1))
[01.07.2016 10:19:16,566] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:19:16,567] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1(X,((X ^ 3.0) * X * X),((((((X * X * X) * X * X) / (X * X)) * X * X) / (X * X)) / (X * X))) ==> Arg(2)
[01.07.2016 10:19:21,612] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:19:21,613] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1(X,((X ^ 3.0) * X * X),((((((((X * X * X) * X * X) / (X * X)) * X * X) / (X * X)) * X * X) / (X * X)) / (X * X))) ==> Arg(2)
[01.07.2016 10:19:24,268] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 75, memory free: 21.8 MB
[01.07.2016 10:19:33,327] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:19:33,328] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1(X,((X * X * X) ^ 4.0),((((((((((X * X * X) * X * X) / (X * X)) * X * X) / (X * X)) * X * X) / (X * X)) * X * X) / (X * X)) / (X * X))) ==> Arg(2)
[01.07.2016 10:19:36,993] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:19:36,993] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1(X,(ADF1(X,X,X)),((((((X * X * X) * X * X) / (X * X)) * X * ((((((X * X * X) * X * X) / (X * X)) * X * X) / (X * X)) / (X * X))) / (X * X)) / (X * X))) ==> Arg(2)
[01.07.2016 10:19:48,395] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 100, memory free: 9.6 MB
[01.07.2016 10:20:15,411] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 125, memory free: 15.7 MB
[01.07.2016 10:20:26,146] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:20:26,147] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1(X,(X * X),((((((X * X * X) * X * X) / (X * X)) * X * ((((((X * X) * X * X) / (X * X)) * X * X) / (X * X)) / X)) / (X * X)) / (X * X))) ==> Arg(2)
[01.07.2016 10:20:44,631] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:20:44,632] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1(X,(X * X),((((((X * X * X) * X * X) / (X * X)) * X * ((((((X * X * X) * X * X) / (X * X * X)) * X * X) / (X * X)) / X)) / (X * X)) / (X * X))) ==> Arg(2)
[01.07.2016 10:20:49,431] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 150, memory free: 23.2 MB
[01.07.2016 10:21:24,249] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 175, memory free: 18.3 MB
[01.07.2016 10:21:51,126] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 200, memory free: 10.6 MB
[01.07.2016 10:22:02,595] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:22:02,595] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((((((X * X * X) * X * X) / (X * X)) * X * X) / (X * X)) * X * ((((((X * X * X) * X * X) / (X * X * X)) * X * X) / (X * X)) / X)) / (X * X)) / (X * X) ==> Arg(2)
[01.07.2016 10:22:10,434] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.07
[01.07.2016 10:22:10,435] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((((X * X * X) * X * X) / (X * X)) * X * ((((((((X * X * X) * X * X) / (X * X)) * X * X) / (X * X * X)) * X * X) / (X * X)) / X)) / (X * X)) / (X * X) ==> Arg(2)
[01.07.2016 10:22:15,445] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.94
[01.07.2016 10:22:15,445] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((ADF1(8.0,8.0,X)) / (8.0 / X)) / (sine (ADF1(8.0,8.0,X))) ==> Arg(1)
[01.07.2016 10:22:16,421] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 225, memory free: 18.4 MB
[01.07.2016 10:22:38,849] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 250, memory free: 18.2 MB
[01.07.2016 10:22:52,299] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 275, memory free: 9.5 MB
[01.07.2016 10:22:54,895] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.76
[01.07.2016 10:22:54,895] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (ADF1(X,(X * X),(6.0 - 6.0))) / (ADF1((sine 8.0),X,X)) ==> Arg(1) + Arg(0) + Arg(0)
[01.07.2016 10:23:31,124] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 300, memory free: 17.7 MB
[01.07.2016 10:24:16,269] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.71
[01.07.2016 10:24:16,270] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((ADF1(X,(X * X),(X * X))) / (ADF1((sine 8.0),X,X))) / (ADF1((sine 8.0),X,X))) / (ADF1((sine 8.0),X,X)) ==> Arg(0)
[01.07.2016 10:24:26,697] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 325, memory free: 24.5 MB
[01.07.2016 10:25:55,871] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 350, memory free: 22.6 MB
[01.07.2016 10:27:24,338] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.59
[01.07.2016 10:27:24,338] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1(((ADF1((X - X),4.0,(4.0 - 4.0))) ^ ((X * X * X) * (sine 4.0) * (sine X))),X,(((X / 4.0) * (ADF1(7.0,7.0,X))) / (ADF1((X - X),(7.0 * 7.0),(X * 7.0 * X))))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:27:43,188] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 375, memory free: 31.1 MB
[01.07.2016 10:27:47,787] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.36
[01.07.2016 10:27:47,787] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1(((ADF1((X - X),4.0,(4.0 - 4.0))) ^ ((sine 8.0) * (sine 4.0) * (sine X))),X,(((X / 4.0) * (ADF1(7.0,7.0,X))) / (ADF1((X - X),(sine 7.0),(X * 7.0 * X))))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:27:52,104] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.12
[01.07.2016 10:27:52,105] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1(((ADF1((X - X),4.0,(4.0 - 4.0))) ^ ((X * X * X) * (sine 4.0) * (sine X))),X,((((ADF1((sine 6.0),X,X)) / 4.0) * (ADF1(7.0,7.0,X))) / (ADF1((X - X),(7.0 * 7.0),(X * 7.0 * X))))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:28:12,590] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.79
[01.07.2016 10:28:12,591] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1(((sine (ADF1((sine 2.0),2.0,X))) ^ ((X * X * X) * (sine 7.0) * (sine X))),X,(((X / 4.0) * (ADF1(7.0,7.0,X))) / (ADF1((X - X),(7.0 * 7.0),(X * X * X))))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:28:21,874] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.72
[01.07.2016 10:28:21,875] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((ADF1((X - X),X,X)),X,(((X / 4.0) * (ADF1(7.0,7.0,X))) / (ADF1((X - X),(ADF1((ADF1((sine 8.0),X,X)),X,(ADF1(X,(ADF1(X,X,(X * X))),(sine 8.0))))),3.0)))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:28:25,967] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.63
[01.07.2016 10:28:25,967] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((ADF1((ADF1(X,(X * X),(ADF1(5.0,X,X)))),(ADF1((sine 7.0),(X * (sine X)),X)),X)),X,(((ADF1((sine 5.0),X,X)) * (sine 8.0)) / (ADF1((X - X),(ADF1((sine 7.0),X,5.0)),(X * 7.0 * X))))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:28:34,756] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.49
[01.07.2016 10:28:34,757] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((ADF1((X - X),X,X)),X,(((X / 4.0) * (ADF1(7.0,7.0,X))) / (ADF1((X - X),(ADF1(6.0,X,(ADF1(X,(ADF1(X,X,(X * X))),(X - X))))),3.0)))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:28:54,748] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.48
[01.07.2016 10:28:54,748] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((ADF1((X - X),X,X)),X,((ADF1(6.0,X,(((X / 6.0) * (sine 7.0)) / (ADF1(6.0,(7.0 * 7.0),(sine 6.0)))))) / (ADF1((ADF1((X - X),X,(6.0 - 6.0))),(ADF1(X,X,(ADF1(X,(ADF1(X,X,(X * X))),(sine 6.0))))),3.0)))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:29:36,446] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 400, memory free: 18.2 MB
[01.07.2016 10:30:02,027] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.17
[01.07.2016 10:30:02,027] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((X * X),X,((ADF1(6.0,X,(((X / 6.0) * (sine 7.0)) / (ADF1(X,8.0,X))))) / (ADF1((ADF1((X - X),X,(6.0 - 6.0))),(ADF1(X,X,(ADF1(X,(ADF1(X,X,(X * X))),(sine 6.0))))),3.0)))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:30:19,431] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:30:19,702] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:30:19,739] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:30:19,841] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:30:19,845] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:30:19,880] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:30:21,715] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.01
[01.07.2016 10:30:21,718] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((((X * 7.0 * X) / 7.0) / (X / (X / X))),(ADF1(((X / 7.0) * (7.0 / X) * (7.0 / X)),((X / X) * (7.0 - X) * (X / X)),7.0)),(X * X)) ==> Arg(0)
[01.07.2016 10:30:43,008] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.11
[01.07.2016 10:30:43,008] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((X * X),X,((ADF1(6.0,X,(((X / 5.0) * (sine 7.0)) / (ADF1(X,8.0,X))))) / (ADF1((ADF1((X - X),X,(6.0 - 6.0))),(ADF1(X,X,(ADF1(X,(ADF1(X,X,(X * X))),(sine 6.0))))),3.0)))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:30:57,533] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:30:57,542] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:30:57,564] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:30:57,679] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:30:57,684] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:30:57,686] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:30:59,994] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 27.24
[01.07.2016 10:30:59,997] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X ==> (Arg(1) + Arg(0) + Arg(1)) + Arg(1) + Arg(0)
[01.07.2016 10:31:22,353] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.08
[01.07.2016 10:31:22,353] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((sine 5.0),X,(X / (ADF1((ADF1((X * X),(X * 6.0 * X),(ADF1(X,X,X)))),(ADF1(5.0,X,(ADF1(X,(ADF1(X,X,(X * X))),(sine ((ADF1((sine 5.0),X,X)) / (ADF1(6.0,(sine 5.0),((sine 6.0) * 4.0 * X))))))))),3.0)))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:31:34,828] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:31:34,836] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:31:34,856] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:31:35,023] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:31:35,028] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:31:35,030] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:32:14,272] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:32:14,283] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:32:14,305] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:32:14,466] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:32:14,471] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:32:14,474] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.3 MB
[01.07.2016 10:32:22,496] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 425, memory free: 35.1 MB
[01.07.2016 10:32:38,750] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:32:38,758] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:32:38,778] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:32:38,926] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:32:38,931] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:32:38,933] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:32:41,216] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.14
[01.07.2016 10:32:41,222] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: 4.0 - ((4.0 - 4.0) - (X - 4.0)) ==> Arg(0)
[01.07.2016 10:33:17,369] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:33:17,377] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:33:17,399] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:33:17,523] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:33:17,528] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:33:17,531] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:34:02,712] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:34:02,720] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:34:02,740] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:34:02,861] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:34:02,866] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:34:02,869] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:34:17,280] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:34:17,290] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:34:17,312] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:34:17,427] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:34:17,432] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:34:17,434] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:35:36,704] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.86
[01.07.2016 10:35:36,705] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((sine 5.0),X,(X / (ADF1((3.0 / 6.0),(ADF1(3.0,X,(ADF1(X,(ADF1(X,X,(X * X))),(sine ((ADF1((sine 5.0),X,4.0)) / (ADF1((sine 5.0),X,X)))))))),3.0)))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:35:36,705] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 450, memory free: 21.2 MB
[01.07.2016 10:35:51,712] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:35:51,719] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:35:51,738] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:35:51,852] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:35:51,856] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:35:51,859] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:35:54,286] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 26.71
[01.07.2016 10:35:54,289] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) / X ==> Arg(1)
[01.07.2016 10:35:58,389] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:35:58,402] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:35:58,423] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:35:58,583] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:35:58,589] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:35:58,591] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:36:00,561] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 28.60
[01.07.2016 10:36:00,562] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X ==> Arg(1)
[01.07.2016 10:36:04,099] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 28.60
[01.07.2016 10:36:04,100] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: 6.0 - (6.0 - (ADF1(X,X,6.0))) ==> Arg(0)
[01.07.2016 10:36:05,635] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 28.46
[01.07.2016 10:36:05,636] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X / (sine 8.0) ==> Arg(0) + Arg(2) + Arg(2)
[01.07.2016 10:36:08,815] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 28.46
[01.07.2016 10:36:08,815] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: 6.0 - (6.0 - (X / (sine 8.0))) ==> Arg(0)
[01.07.2016 10:36:48,053] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:36:48,061] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:36:48,083] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:36:48,210] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:36:48,216] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:36:48,218] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:36:50,221] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 21.82
[01.07.2016 10:36:50,224] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X ==> Arg(2) + Arg(2) + Arg(0)
[01.07.2016 10:36:50,978] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 18.78
[01.07.2016 10:36:50,979] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X / (sine 2.0) ==> Arg(1)
[01.07.2016 10:36:52,886] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 18.78
[01.07.2016 10:36:52,887] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((ADF1((sine X),X,(X / X))) / (sine 2.0)) * X ==> Arg(2)
[01.07.2016 10:37:04,926] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 82.6 MB
[01.07.2016 10:37:05,736] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 18.68
[01.07.2016 10:37:05,736] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((ADF1((sine X),X,(sine 8.0))) / (sine 2.0)) * X ==> Arg(2)
[01.07.2016 10:37:37,391] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:37:37,401] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:37:37,420] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:37:37,607] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:37:37,612] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:37:37,615] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 53.2 MB
[01.07.2016 10:37:38,309] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.61
[01.07.2016 10:37:38,313] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (ADF1(X,(X * 8.0),8.0)) / (ADF1((sine 8.0),8.0,(ADF1(X,X,8.0)))) ==> Arg(0)
[01.07.2016 10:37:41,774] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.57
[01.07.2016 10:37:41,775] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((ADF1(X,X,8.0)) / (ADF1((sine 8.0),8.0,(ADF1(X,X,8.0))))) / (sine 8.0) ==> Arg(0)
[01.07.2016 10:37:42,544] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.56
[01.07.2016 10:37:42,545] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (sine 2.0) * ((X / 2.0) * (sine 2.0)) * (Exp((sine 2.0))) ==> (Arg(2) + Arg(2) + (Arg(0) + Arg(0) + Arg(2))) + (Arg(0) + Arg(0) + Arg(2)) + Arg(0)
[01.07.2016 10:37:50,512] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.52
[01.07.2016 10:37:50,512] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X / (ADF1((sine 5.0),5.0,X))) / (ADF1((sine 5.0),5.0,(ADF1(X,(X * X),7.0)))) ==> Arg(0)
[01.07.2016 10:37:50,513] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 30.8 MB
[01.07.2016 10:37:51,007] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.52
[01.07.2016 10:37:51,009] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X / (sine (4.0 * 4.0 * 4.0)) ==> Arg(0)
[01.07.2016 10:37:58,328] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 50, memory free: 6.4 MB
[01.07.2016 10:38:44,174] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:38:44,181] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:38:44,200] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:38:44,417] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:38:44,422] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:38:44,423] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 53.2 MB
[01.07.2016 10:38:44,580] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.76
[01.07.2016 10:38:44,593] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X ==> (Arg(1) + Arg(1) + Arg(2)) + Arg(0) + Arg(1)
[01.07.2016 10:38:45,671] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.76
[01.07.2016 10:38:45,676] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (9.0 * X) / 9.0 ==> Arg(0)
[01.07.2016 10:38:45,883] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 115.9 MB
[01.07.2016 10:38:46,821] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 50, memory free: 209.0 MB
[01.07.2016 10:38:47,142] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.09
[01.07.2016 10:38:47,143] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (X / ((4.0 * 4.0) * (sine 4.0) * (X * X))) ==> Arg(1)
[01.07.2016 10:38:47,342] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.73
[01.07.2016 10:38:47,343] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (X / (((9.0 * X) / 9.0) * (sine 4.0) * (9.0 * X))) ==> Arg(1)
[01.07.2016 10:38:47,495] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.63
[01.07.2016 10:38:47,495] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (X / (((8.0 * X) / 9.0) * (sine 4.0) * (9.0 * X))) ==> Arg(1)
[01.07.2016 10:38:47,611] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 75, memory free: 271.7 MB
[01.07.2016 10:38:47,702] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.54
[01.07.2016 10:38:47,703] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (X / (((8.0 * X) / 9.0) * (sine 4.0) * (8.0 * X))) ==> Arg(1)
[01.07.2016 10:38:47,809] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.54
[01.07.2016 10:38:47,811] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (X / ((8.0 * X) * (sine 4.0) * ((8.0 * X) / 9.0))) ==> Arg(1)
[01.07.2016 10:38:48,602] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.54
[01.07.2016 10:38:48,603] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (X / (((8.0 * X) / 8.0) * (8.0 * X) * (sine (sine 4.0)))) ==> (Arg(2) + Arg(0) + Arg(0)) + Arg(0) + Arg(0)
[01.07.2016 10:38:48,866] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 100, memory free: 71.1 MB
[01.07.2016 10:38:49,411] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 18.68
[01.07.2016 10:38:49,414] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((ADF1((ADF1((ADF1((X / 7.0),X,(sine 3.0))),X,(sine 3.0))),X,(X / (((ADF1((Exp((X / 5.0))),(sine X),(X / X))) / (sine 3.0)) * X)))) / (sine 3.0)) * (((sine 8.0) / (sine 2.0)) * X) ==> Arg(2)
[01.07.2016 10:38:50,185] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 125, memory free: 79.8 MB
[01.07.2016 10:38:51,064] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 150, memory free: 245.2 MB
[01.07.2016 10:38:51,635] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.53
[01.07.2016 10:38:51,635] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine (X / (((8.0 * X) / 8.0) * (6.0 * X) * (sine 4.0)))) ==> (Arg(1) + (Arg(1) + (Arg(2) + (Arg(1) + Arg(0) + Arg(0)) + Arg(1)) + Arg(2)) + (Arg(2) + Arg(0) + Arg(0))) + Arg(0) + Arg(0)
[01.07.2016 10:38:51,775] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.50
[01.07.2016 10:38:51,775] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine (X / (((7.0 * X) / 5.0) * (4.0 * X) * (sine 4.0)))) ==> Arg(1) + (Arg(1) + (Arg(2) + (Arg(1) + Arg(0) + Arg(0)) + Arg(1)) + Arg(2)) + (Arg(2) + Arg(0) + Arg(0))
[01.07.2016 10:38:51,812] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 175, memory free: 103.5 MB
[01.07.2016 10:38:52,515] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.60
[01.07.2016 10:38:52,515] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine (X / (((3.0 * X) / 8.0) * (3.0 * X) * (sine (5.0 * X))))) ==> Arg(1) + Arg(1) + (Arg(0) + Arg(0) + Arg(0))
[01.07.2016 10:38:52,515] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 200, memory free: 197.9 MB
[01.07.2016 10:38:52,667] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.54
[01.07.2016 10:38:52,667] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine (sine (X / (((3.0 * X) / 8.0) * (3.0 * X) * (sine (5.0 * X)))))) ==> Arg(0)
[01.07.2016 10:38:52,784] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.41
[01.07.2016 10:38:52,784] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine ((sine (5.0 * X)) / X)) ==> Arg(0)
[01.07.2016 10:38:53,167] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 225, memory free: 236.0 MB
[01.07.2016 10:38:53,810] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 250, memory free: 43.2 MB
[01.07.2016 10:38:54,113] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.88
[01.07.2016 10:38:54,114] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine ((sine (5.0 * (sine (sine ((sine (X * X)) / X))))) / X)) ==> Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)
[01.07.2016 10:38:54,328] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.51
[01.07.2016 10:38:54,330] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine ((sine (5.0 * ((sine (X * X)) / X))) / X)) ==> Arg(1)
[01.07.2016 10:38:54,414] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 275, memory free: 212.7 MB
[01.07.2016 10:38:55,053] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 300, memory free: 153.9 MB
[01.07.2016 10:38:55,417] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.38
[01.07.2016 10:38:55,417] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine ((sine (5.0 * ((sine (X * X)) / X))) / (X - (sine (X * X))))) ==> Arg(0)
[01.07.2016 10:38:55,571] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.13
[01.07.2016 10:38:55,571] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine ((sine (5.0 * ((sine (X * X)) / X))) / (X - (4.0 / 4.0)))) ==> Arg(1)
[01.07.2016 10:38:55,720] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 325, memory free: 58.9 MB
[01.07.2016 10:38:55,925] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.08
[01.07.2016 10:38:55,925] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine ((sine (5.0 * ((sine (X * X)) / X))) / (X - (3.0 / 4.0)))) ==> Arg(2)
[01.07.2016 10:38:56,029] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.01
[01.07.2016 10:38:56,030] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine ((sine (5.0 * ((sine (sine (X * X))) / X))) / (X - (4.0 / 4.0)))) ==> Arg(1) + (Arg(1) + Arg(2) + Arg(2)) + Arg(1)
[01.07.2016 10:38:56,385] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 350, memory free: 71.6 MB
[01.07.2016 10:38:57,038] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 375, memory free: 34.2 MB
[01.07.2016 10:38:57,714] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 400, memory free: 53.8 MB
[01.07.2016 10:38:58,370] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 425, memory free: 88.3 MB
[01.07.2016 10:38:59,016] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 450, memory free: 41.4 MB
[01.07.2016 10:38:59,652] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 475, memory free: 48.8 MB
[01.07.2016 10:39:00,292] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 500, memory free: 110.4 MB
[01.07.2016 10:39:00,981] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 525, memory free: 107.7 MB
[01.07.2016 10:39:01,457] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.00
[01.07.2016 10:39:01,458] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine ((sine (5.0 * ((sine (sine (X * X))) / X))) / (X - (5.0 / 6.0)))) ==> Arg(0) + (Arg(2) + Arg(2) + Arg(0)) + Arg(0)
[01.07.2016 10:39:01,650] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.00
[01.07.2016 10:39:01,650] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine ((sine (5.0 * ((sine (sine (X * X))) / X))) / (X - (sine 8.0)))) ==> Arg(0)
[01.07.2016 10:39:01,676] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 550, memory free: 86.3 MB
[01.07.2016 10:39:02,363] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 575, memory free: 42.4 MB
[01.07.2016 10:39:03,063] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 600, memory free: 98.9 MB
[01.07.2016 10:39:03,768] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 625, memory free: 76.3 MB
[01.07.2016 10:39:04,404] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 650, memory free: 78.8 MB
[01.07.2016 10:39:05,034] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 675, memory free: 81.2 MB
[01.07.2016 10:39:05,678] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 700, memory free: 39.4 MB
[01.07.2016 10:39:06,310] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 725, memory free: 84.5 MB
[01.07.2016 10:39:06,963] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 750, memory free: 95.8 MB
[01.07.2016 10:39:07,712] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 775, memory free: 75.0 MB
[01.07.2016 10:39:08,413] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.00
[01.07.2016 10:39:08,413] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine ((sine (5.0 * ((sine (sine (X * X))) / X))) / (X - (sine 8.0)))) ==> Arg(0)
[01.07.2016 10:39:21,003] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 75, memory free: 16.2 MB
[01.07.2016 10:40:18,146] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 18.68
[01.07.2016 10:40:18,147] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((ADF1(((((X / X) / (sine (((sine 6.0) / (sine 3.0)) * X))) * (sine X)) * X),X,(X / (((ADF1((Exp((X / 5.0))),(sine X),(X / X))) / (sine 3.0)) * X)))) / (sine (sine 3.0))) * (((sine 8.0) / (sine 2.0)) * X) ==> Arg(2)
[01.07.2016 10:40:19,798] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 100, memory free: 17.6 MB
[01.07.2016 10:40:47,204] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:40:47,212] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:40:47,230] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:40:47,409] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:40:47,414] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:40:47,416] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 53.2 MB
[01.07.2016 10:40:48,076] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.37
[01.07.2016 10:40:48,079] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: 7.0 - (7.0 - X) ==> Arg(2)
[01.07.2016 10:40:49,544] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.37
[01.07.2016 10:40:49,546] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * (ADF1(X,7.0,7.0))) / ((7.0 / 7.0) * 7.0) ==> Arg(1)
[01.07.2016 10:40:52,416] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 59.2 MB
[01.07.2016 10:40:55,614] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.60
[01.07.2016 10:40:55,614] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((X - 10.0) / (10.0 * X * 10.0)) ==> Arg(0) + Arg(1) + Arg(0)
[01.07.2016 10:40:55,767] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.53
[01.07.2016 10:40:55,768] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((X - 10.0) / (10.0 * X * 9.0)) ==> Arg(0) + Arg(1) + Arg(0)
[01.07.2016 10:40:56,195] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.19
[01.07.2016 10:40:56,198] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((X - 10.0) / (10.0 * X * (4.0 - X))) ==> Arg(0) + Arg(0) + ((Arg(0) + Arg(2) + Arg(1)) + Arg(0) + Arg(1))
[01.07.2016 10:40:56,465] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.84
[01.07.2016 10:40:56,465] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((X - 10.0) / (5.0 * X * 9.0)) ==> Arg(0)
[01.07.2016 10:40:56,631] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.78
[01.07.2016 10:40:56,631] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((X - 10.0) / (10.0 * X * 4.0)) ==> Arg(0) + Arg(1) + Arg(1)
[01.07.2016 10:40:56,976] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 50, memory free: 102.6 MB
[01.07.2016 10:40:57,098] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.12
[01.07.2016 10:40:57,099] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((3.0 - (3.0 - X)) / (ADF1((X - 10.0),(sine (X / X)),X))) ==> (Arg(0) + Arg(1) + Arg(0)) + Arg(2) + Arg(1)
[01.07.2016 10:40:58,196] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.08
[01.07.2016 10:40:58,196] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((3.0 - (4.0 - X)) / (ADF1((X - 10.0),(sine (X - 9.0)),X))) ==> (Arg(0) + Arg(1) + Arg(0)) + Arg(2) + Arg(1)
[01.07.2016 10:40:58,436] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.06
[01.07.2016 10:40:58,436] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((3.0 - ((3.0 - (7.0 - (Exp(X)))) - X)) - 7.0) / (6.0 * X * 4.0)) ==> Arg(0)
[01.07.2016 10:40:59,932] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 75, memory free: 53.0 MB
[01.07.2016 10:41:00,133] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.15
[01.07.2016 10:41:00,134] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((3.0 - (Exp(X))) - 7.0) / (6.0 * X * 4.0)) ==> Arg(2)
[01.07.2016 10:41:00,544] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.91
[01.07.2016 10:41:00,544] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - (Exp(X))) - 5.0) / (6.0 * X * 4.0)) ==> Arg(1)
[01.07.2016 10:41:03,323] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 100, memory free: 84.1 MB
[01.07.2016 10:41:06,228] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 125, memory free: 123.6 MB
[01.07.2016 10:41:09,022] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 150, memory free: 67.6 MB
[01.07.2016 10:41:11,607] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 175, memory free: 64.6 MB
[01.07.2016 10:41:14,591] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 200, memory free: 70.7 MB
[01.07.2016 10:41:17,269] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 125, memory free: 15.7 MB
[01.07.2016 10:41:17,319] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 225, memory free: 38.7 MB
[01.07.2016 10:41:20,097] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 250, memory free: 46.1 MB
[01.07.2016 10:41:22,828] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 275, memory free: 20.2 MB
[01.07.2016 10:41:25,736] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 300, memory free: 25.3 MB
[01.07.2016 10:41:27,896] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.86
[01.07.2016 10:41:27,897] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((((sine (ADF1(X,X,X))) - (Exp(X))) - 5.0) / (8.0 * X * 3.0)) ==> Arg(0) + Arg(2) + Arg(1)
[01.07.2016 10:41:28,509] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 325, memory free: 36.5 MB
[01.07.2016 10:41:31,190] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.85
[01.07.2016 10:41:31,190] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine ((((X - (Exp(X))) - 3.0) - 3.0) / (5.0 * X * 4.0))) ==> Arg(1) + Arg(0) + Arg(1)
[01.07.2016 10:41:32,166] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 350, memory free: 36.9 MB
[01.07.2016 10:41:32,408] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.84
[01.07.2016 10:41:32,409] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine (((X - (Exp(X))) - 5.0) / (5.0 * X * 4.0))) ==> Arg(1) + Arg(0) + Arg(1)
[01.07.2016 10:41:33,592] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.11
[01.07.2016 10:41:33,593] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine (((X - (Exp(X))) - 4.0) / (5.0 * (X - (sine X)) * 4.0))) ==> Arg(1)
[01.07.2016 10:41:34,707] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.78
[01.07.2016 10:41:34,707] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine (((X - (Exp(X))) - 3.0) / (5.0 * (X - (sine X)) * 4.0))) ==> (Arg(1) + Arg(2) + (Arg(2) + Arg(0) + Arg(1))) + (Arg(1) + ((Arg(2) + Arg(1) + Arg(1)) + Arg(1) + Arg(0)) + Arg(2)) + Arg(1)
[01.07.2016 10:41:35,563] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 375, memory free: 17.2 MB
[01.07.2016 10:41:38,286] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 400, memory free: 20.8 MB
[01.07.2016 10:41:40,772] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 425, memory free: 34.9 MB
[01.07.2016 10:41:42,356] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.78
[01.07.2016 10:41:42,357] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine (((X - 3.0) - (Exp(X))) / (5.0 * (X - (sine X)) * 4.0))) ==> Arg(0) + Arg(1) + Arg(0)
[01.07.2016 10:41:43,285] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 450, memory free: 34.1 MB
[01.07.2016 10:41:45,845] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 475, memory free: 43.1 MB
[01.07.2016 10:41:47,504] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 18.68
[01.07.2016 10:41:47,505] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((ADF1((((((sine 3.0) / (sine 3.0)) * X) * (sine X)) * X),X,(sine (sine 3.0)))) / (sine (sine (X / (((ADF1((Exp((X / 5.0))),(sine X),(X / X))) / (sine 3.0)) * X))))) * (((sine 8.0) / (sine 2.0)) * X) ==> Arg(2)
[01.07.2016 10:41:48,472] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 500, memory free: 8.2 MB
[01.07.2016 10:41:51,062] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 525, memory free: 8.9 MB
[01.07.2016 10:41:53,953] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 550, memory free: 20.2 MB
[01.07.2016 10:41:56,410] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 575, memory free: 35.7 MB
[01.07.2016 10:41:59,001] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 600, memory free: 13.5 MB
[01.07.2016 10:41:59,104] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.76
[01.07.2016 10:41:59,104] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine (((X - 2.0) - (Exp(X))) / (5.0 * (X - (sine X)) * 3.0))) ==> Arg(1) + (Arg(0) + Arg(2) + Arg(1)) + Arg(2)
[01.07.2016 10:42:01,825] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 625, memory free: 7.5 MB
[01.07.2016 10:42:02,198] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 18.68
[01.07.2016 10:42:02,198] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((ADF1((((((sine 3.0) / (sine 3.0)) * X) * ((sine 3.0) / X)) * X),X,(sine (sine 3.0)))) / (sine (sine (sine 3.0)))) * (((sine 8.0) / (sine 2.0)) * X) ==> Arg(2)
[01.07.2016 10:42:04,629] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 650, memory free: 40.0 MB
[01.07.2016 10:42:07,233] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 675, memory free: 23.4 MB
[01.07.2016 10:42:10,002] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 700, memory free: 31.9 MB
[01.07.2016 10:42:12,704] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 725, memory free: 38.8 MB
[01.07.2016 10:42:13,354] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 150, memory free: 25.7 MB
[01.07.2016 10:42:15,886] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 750, memory free: 17.6 MB
[01.07.2016 10:42:18,539] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 775, memory free: 21.2 MB
[01.07.2016 10:42:21,256] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.76
[01.07.2016 10:42:21,256] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (sine (((X - 2.0) - (Exp(X))) / (5.0 * (X - (sine X)) * 3.0))) ==> Arg(1) + (Arg(0) + Arg(2) + Arg(1)) + Arg(2)
[01.07.2016 10:42:36,119] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 18.68
[01.07.2016 10:42:36,120] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((sine (sine 3.0)) / (sine (sine (X / (((ADF1(4.0,(sine X),((X / (((ADF1((5.0 * X),(sine X),(X / X))) / (sine 3.0)) * X)) / (sine 3.0)))) / (sine 3.0)) * X))))) * (((sine 8.0) / (sine 2.0)) * X) ==> Arg(2)
[01.07.2016 10:46:04,339] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:46:04,348] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:46:04,369] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:46:04,506] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:46:04,515] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:46:04,517] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 53.2 MB
[01.07.2016 10:46:05,194] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.35
[01.07.2016 10:46:05,197] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X ==> Arg(2) + Arg(2) + ((Arg(1) + Arg(2) + Arg(1)) + Arg(0) + Arg(2))
[01.07.2016 10:46:06,643] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.35
[01.07.2016 10:46:06,644] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: 6.0 * (X / 6.0) ==> Arg(0)
[01.07.2016 10:46:08,399] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 259.4 MB
[01.07.2016 10:46:11,148] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 50, memory free: 322.8 MB
[01.07.2016 10:46:13,919] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 75, memory free: 82.0 MB
[01.07.2016 10:46:29,020] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:46:29,029] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:46:29,049] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:46:29,250] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:46:29,254] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:46:29,257] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 53.2 MB
[01.07.2016 10:46:29,866] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.42
[01.07.2016 10:46:29,870] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (ADF1(X,(Exp(((Exp(4.0)) / (Exp(X))))),X)) - (4.0 / X) ==> Arg(2)
[01.07.2016 10:46:30,822] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.38
[01.07.2016 10:46:30,823] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((ADF1(X,(Exp(((Exp(4.0)) / (Exp(X))))),X)) - (4.0 / X)) - (4.0 / X) ==> Arg(2)
[01.07.2016 10:46:32,536] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.15
[01.07.2016 10:46:32,537] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((ADF1(X,(Exp((Exp(4.0)))),X)) - (3.0 / X)) - (4.0 / X) ==> Arg(2)
[01.07.2016 10:46:34,304] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.14
[01.07.2016 10:46:34,304] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((ADF1(X,(Exp(((Exp(2.0)) / (Exp(X))))),X)) - ((5.0 / X) / X)) - (5.0 / X) ==> Arg(2)
[01.07.2016 10:46:36,060] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.05
[01.07.2016 10:46:36,061] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (ADF1(X,(Exp((X / X))),X)) - (5.0 / (X - 2.0)) ==> Arg(2)
[01.07.2016 10:46:38,733] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 172.6 MB
[01.07.2016 10:46:44,060] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.99
[01.07.2016 10:46:44,060] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((ADF1(X,X,X)) - (((Exp(3.0)) / (ADF1(X,X,X))) / X)) - (4.0 / X) ==> Arg(2)
[01.07.2016 10:46:50,910] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 50, memory free: 57.2 MB
[01.07.2016 10:47:04,048] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:47:04,056] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:47:04,078] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:47:04,267] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:47:04,273] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:47:04,276] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 53.2 MB
[01.07.2016 10:47:04,822] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.91
[01.07.2016 10:47:04,822] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X ==> Arg(1)
[01.07.2016 10:47:07,010] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 75, memory free: 98.2 MB
[01.07.2016 10:47:07,599] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.95
[01.07.2016 10:47:07,599] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (4.0 / (X - (4.0 / (((X - 4.0) - 4.0) - 4.0)))) ==> Arg(2)
[01.07.2016 10:47:07,842] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 155.4 MB
[01.07.2016 10:47:10,644] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.91
[01.07.2016 10:47:10,644] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (9.0 * X) / 9.0 ==> Arg(0) + Arg(1) + Arg(2)
[01.07.2016 10:47:11,759] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 50, memory free: 80.7 MB
[01.07.2016 10:47:14,950] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 75, memory free: 43.3 MB
[01.07.2016 10:47:16,658] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.91
[01.07.2016 10:47:16,658] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (6.0 * ((9.0 * X) / 9.0)) / 6.0 ==> ((Arg(0) + Arg(1) + Arg(2)) + Arg(1) + Arg(2)) + Arg(1) + Arg(2)
[01.07.2016 10:47:17,732] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 100, memory free: 86.5 MB
[01.07.2016 10:47:17,967] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 100, memory free: 51.0 MB
[01.07.2016 10:47:19,800] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.91
[01.07.2016 10:47:19,801] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (6.0 * ((5.0 * ((9.0 * X) / 9.0)) / 5.0)) / 6.0 ==> Arg(0) + Arg(0) + Arg(2)
[01.07.2016 10:47:19,998] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.91
[01.07.2016 10:47:19,998] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (9.0 * ((6.0 * ((9.0 * X) / 9.0)) / 6.0)) / 9.0 ==> Arg(2) + Arg(1) + Arg(1)
[01.07.2016 10:47:21,238] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 125, memory free: 42.9 MB
[01.07.2016 10:47:25,557] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 150, memory free: 67.5 MB
[01.07.2016 10:47:27,171] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.81
[01.07.2016 10:47:27,172] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (2.0 / ((X - ((4.0 / (((X - 4.0) - 4.0) - 4.0)) / 3.0)) - 5.0)) ==> Arg(2)
[01.07.2016 10:47:28,222] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 175, memory free: 47.3 MB
[01.07.2016 10:47:28,410] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 125, memory free: 82.0 MB
[01.07.2016 10:47:31,460] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 200, memory free: 57.0 MB
[01.07.2016 10:47:31,647] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.63
[01.07.2016 10:47:31,647] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (2.0 / ((X - ((4.0 / (((X / 2.0) - 3.0) - 3.0)) / 3.0)) - 5.0)) ==> Arg(2)
[01.07.2016 10:47:34,515] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 225, memory free: 44.3 MB
[01.07.2016 10:47:35,779] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.51
[01.07.2016 10:47:35,780] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (4.0 / (X - (Exp((3.0 / (((X - 4.0) - 4.0) - 3.0)))))) ==> Arg(2)
[01.07.2016 10:47:37,010] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 150, memory free: 34.7 MB
[01.07.2016 10:47:37,398] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 250, memory free: 92.3 MB
[01.07.2016 10:47:38,331] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.91
[01.07.2016 10:47:38,332] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: 9.0 * (((6.0 * ((9.0 * X) / 9.0)) / 6.0) / 9.0) ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 10:47:39,263] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.49
[01.07.2016 10:47:39,264] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (5.0 / (X - (Exp((3.0 / (((X - 4.0) - 4.0) - 3.0)))))) ==> Arg(2)
[01.07.2016 10:47:39,393] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.90
[01.07.2016 10:47:39,394] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X * (sine (5.0 / 3.0)) ==> Arg(0)
[01.07.2016 10:47:40,222] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 275, memory free: 104.9 MB
[01.07.2016 10:47:40,588] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.90
[01.07.2016 10:47:40,589] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (9.0 * ((6.0 * (X * (sine (5.0 / 3.0)))) / 6.0)) / 9.0 ==> Arg(1)
[01.07.2016 10:47:42,557] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.29
[01.07.2016 10:47:42,557] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (5.0 / (X - (Exp((((((X - 4.0) - 4.0) - 4.0) - 5.0) / 4.0))))) ==> Arg(2)
[01.07.2016 10:47:42,951] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 175, memory free: 37.1 MB
[01.07.2016 10:47:43,274] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 300, memory free: 60.1 MB
[01.07.2016 10:47:46,278] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 325, memory free: 62.1 MB
[01.07.2016 10:47:46,360] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 200, memory free: 31.5 MB
[01.07.2016 10:47:47,637] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.04
[01.07.2016 10:47:47,638] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (6.0 / (X - (Exp((((((X - 4.0) - 4.0) - 4.0) - 5.0) / 4.0))))) ==> Arg(0)
[01.07.2016 10:47:48,069] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.80
[01.07.2016 10:47:48,070] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (9.0 * ((6.0 * (X * (sine (3.0 / 2.0)))) / 6.0)) / 9.0 ==> Arg(1)
[01.07.2016 10:47:49,063] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 225, memory free: 51.0 MB
[01.07.2016 10:47:49,611] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.80
[01.07.2016 10:47:49,612] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (6.0 * (X * (sine (3.0 / 2.0)))) / 6.0 ==> Arg(1)
[01.07.2016 10:47:49,839] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 350, memory free: 50.1 MB
[01.07.2016 10:47:49,916] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.95
[01.07.2016 10:47:49,916] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (4.0 / (X - (Exp(((((X - 5.0) / 3.0) - 5.0) / 3.0))))) ==> Arg(0)
[01.07.2016 10:47:50,101] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.48
[01.07.2016 10:47:50,102] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (6.0 / (X - (Exp(((((X - 5.0) / 3.0) - 5.0) / 3.0))))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 10:47:51,203] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 250, memory free: 94.8 MB
[01.07.2016 10:47:51,430] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.80
[01.07.2016 10:47:51,431] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((9.0 * X) / 9.0) * (sine (3.0 / 2.0)) ==> Arg(1)
[01.07.2016 10:47:52,446] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 375, memory free: 122.7 MB
[01.07.2016 10:47:53,136] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 275, memory free: 85.6 MB
[01.07.2016 10:47:55,140] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 300, memory free: 91.2 MB
[01.07.2016 10:47:55,174] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 400, memory free: 84.4 MB
[01.07.2016 10:47:57,201] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 325, memory free: 77.4 MB
[01.07.2016 10:47:57,588] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 425, memory free: 49.9 MB
[01.07.2016 10:48:00,145] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 350, memory free: 117.4 MB
[01.07.2016 10:48:00,958] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 450, memory free: 72.9 MB
[01.07.2016 10:48:02,413] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 375, memory free: 102.5 MB
[01.07.2016 10:48:03,465] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 475, memory free: 40.4 MB
[01.07.2016 10:48:04,620] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 400, memory free: 70.0 MB
[01.07.2016 10:48:06,036] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.41
[01.07.2016 10:48:06,037] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (4.0 / ((X - 3.0) - (Exp(((((X - 5.0) / 3.0) - 5.0) / 3.0))))) ==> Arg(1)
[01.07.2016 10:48:06,372] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 500, memory free: 26.4 MB
[01.07.2016 10:48:06,895] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 425, memory free: 46.5 MB
[01.07.2016 10:48:08,566] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.80
[01.07.2016 10:48:08,566] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((3.0 * (3.0 * X)) / 3.0) / 3.0) * (sine (3.0 / 2.0)) ==> Arg(1)
[01.07.2016 10:48:09,421] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 450, memory free: 60.8 MB
[01.07.2016 10:48:09,831] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 525, memory free: 100.3 MB
[01.07.2016 10:48:11,619] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 475, memory free: 82.9 MB
[01.07.2016 10:48:12,226] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.80
[01.07.2016 10:48:12,227] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((3.0 * (3.0 * ((5.0 * X) / 5.0))) / 3.0) / 3.0) * (sine (3.0 / 2.0)) ==> Arg(1)
[01.07.2016 10:48:12,227] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 550, memory free: 44.2 MB
[01.07.2016 10:48:13,792] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 500, memory free: 60.5 MB
[01.07.2016 10:48:14,526] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 575, memory free: 20.6 MB
[01.07.2016 10:48:15,803] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 525, memory free: 28.5 MB
[01.07.2016 10:48:16,627] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 600, memory free: 49.1 MB
[01.07.2016 10:48:17,744] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 550, memory free: 17.5 MB
[01.07.2016 10:48:19,012] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 625, memory free: 54.3 MB
[01.07.2016 10:48:19,763] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 575, memory free: 35.3 MB
[01.07.2016 10:48:21,276] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 650, memory free: 42.0 MB
[01.07.2016 10:48:21,702] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 600, memory free: 31.0 MB
[01.07.2016 10:48:23,724] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 625, memory free: 14.6 MB
[01.07.2016 10:48:24,046] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 675, memory free: 45.5 MB
[01.07.2016 10:48:25,909] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 650, memory free: 9.7 MB
[01.07.2016 10:48:26,800] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 700, memory free: 29.3 MB
[01.07.2016 10:48:27,939] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 675, memory free: 22.4 MB
[01.07.2016 10:48:29,007] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 725, memory free: 35.6 MB
[01.07.2016 10:48:30,099] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 700, memory free: 29.5 MB
[01.07.2016 10:48:31,545] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 750, memory free: 29.0 MB
[01.07.2016 10:48:32,251] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 725, memory free: 30.0 MB
[01.07.2016 10:48:33,998] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 775, memory free: 20.2 MB
[01.07.2016 10:48:34,290] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 750, memory free: 24.4 MB
[01.07.2016 10:48:36,270] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 775, memory free: 21.7 MB
[01.07.2016 10:48:36,316] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.80
[01.07.2016 10:48:36,317] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((3.0 * (3.0 * ((5.0 * X) / 5.0))) / 3.0) / 3.0) * (sine (3.0 / 2.0)) ==> Arg(1)
[01.07.2016 10:48:38,113] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.41
[01.07.2016 10:48:38,114] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (4.0 / ((X - 3.0) - (Exp(((((X - 5.0) / 3.0) - 5.0) / 3.0))))) ==> Arg(1)
[01.07.2016 10:51:35,758] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 10:51:35,767] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 10:51:35,787] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 10:51:35,902] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 10:51:35,907] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 10:51:35,909] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.5 MB
[01.07.2016 10:51:37,875] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 11.72
[01.07.2016 10:51:37,876] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X ==> Arg(1)
[01.07.2016 10:51:44,689] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 11.72
[01.07.2016 10:51:44,689] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (6.0 / ((6.0 ^ 6.0) - (sine 6.0))) ==> Arg(0)
[01.07.2016 10:51:45,886] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 11.72
[01.07.2016 10:51:45,886] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (X / ((6.0 ^ 6.0) - (sine 6.0))) ==> Arg(0)
[01.07.2016 10:51:45,887] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 56.1 MB
[01.07.2016 10:51:46,965] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 11.69
[01.07.2016 10:51:46,965] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (X / ((4.0 ^ 6.0) - (sine 6.0))) ==> Arg(0)
[01.07.2016 10:51:47,754] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 11.57
[01.07.2016 10:51:47,757] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X / (Exp((6.0 / ((4.0 ^ 6.0) - (sine 6.0))))) ==> ((Arg(2) + Arg(1) + Arg(2)) + (Arg(0) + Arg(1) + Arg(2)) + (Arg(2) + Arg(1) + Arg(0))) + (Arg(1) + Arg(2) + (Arg(1) + Arg(0) + Arg(1))) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(1) + Arg(2))
[01.07.2016 10:51:50,524] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 11.57
[01.07.2016 10:51:50,524] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X / (Exp((6.0 / ((4.0 ^ 6.0) - ((4.0 ^ 2.0) - (5.0 / 5.0)))))) ==> ((Arg(2) + Arg(1) + Arg(2)) + (Arg(0) + Arg(1) + Arg(2)) + (Arg(2) + Arg(1) + Arg(0))) + (Arg(1) + Arg(2) + (Arg(1) + Arg(0) + Arg(1))) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(1) + Arg(2))
[01.07.2016 10:51:50,783] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 11.52
[01.07.2016 10:51:50,784] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (X / ((3.0 ^ 6.0) - (X - (X / (sine 4.0))))) ==> ((Arg(2) + Arg(1) + Arg(2)) + (Arg(0) + Arg(1) + (Arg(1) + Arg(0) + Arg(0))) + (Arg(2) + Arg(1) + Arg(0))) + (Arg(1) + Arg(2) + (Arg(1) + Arg(0) + Arg(1))) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(1) + Arg(2))
[01.07.2016 10:51:51,876] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 11.49
[01.07.2016 10:51:51,877] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 6.0)))))) / ((((4.0 ^ 4.0) - 5.0) - (sine 6.0)) - (sine 6.0))) / ((4.0 ^ 2.0) - (sine 3.0))) ==> Arg(0)
[01.07.2016 10:51:52,792] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.99
[01.07.2016 10:51:52,792] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 6.0)))))) / ((((3.0 ^ 4.0) - 5.0) - (sine 6.0)) - (sine 6.0))) / ((4.0 ^ 2.0) - (sine 6.0))) ==> Arg(0) + Arg(1) + Arg(2)
[01.07.2016 10:51:52,792] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 50, memory free: 29.7 MB
[01.07.2016 10:51:55,520] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.99
[01.07.2016 10:51:55,520] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 6.0)))))) / ((((3.0 ^ 4.0) - 5.0) - (sine 6.0)) - (((sine 6.0) ^ 2.0) - (sine 4.0)))) / ((4.0 ^ 2.0) - (sine 6.0))) ==> ((Arg(0) + Arg(1) + Arg(1)) + (Arg(0) + Arg(1) + (Arg(2) + Arg(2) + Arg(2))) + (Arg(2) + Arg(1) + Arg(0))) + (Arg(2) + (Arg(0) + Arg(0) + Arg(1)) + Arg(1)) + ((Arg(2) + Arg(2) + Arg(2)) + Arg(1) + Arg(2))
[01.07.2016 10:51:59,034] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.99
[01.07.2016 10:51:59,035] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 6.0)))))) / ((((3.0 ^ 4.0) - 5.0) - (sine 6.0)) - (((sine 6.0) ^ 6.0) - (sine 4.0)))) / ((4.0 ^ 2.0) - (sine 6.0))) ==> ((Arg(0) + Arg(1) + Arg(1)) + (Arg(0) + Arg(1) + (Arg(0) + Arg(0) + Arg(2))) + (Arg(2) + Arg(1) + Arg(0))) + (Arg(2) + (Arg(0) + Arg(0) + Arg(1)) + Arg(1)) + ((Arg(2) + Arg(2) + Arg(2)) + Arg(1) + Arg(2))
[01.07.2016 10:52:00,224] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 75, memory free: 36.2 MB
[01.07.2016 10:52:03,989] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.57
[01.07.2016 10:52:03,989] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 4.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 5.0) - ((sine 4.0) - X)) - (sine (7.0 * X)))) / ((3.0 ^ 4.0) - X)) ==> ((Arg(0) + (Arg(0) + Arg(0) + Arg(1)) + (Arg(1) + Arg(2) + (Arg(2) + Arg(2) + Arg(2)))) + (Arg(2) + Arg(1) + Arg(0)) + (Arg(2) + (Arg(2) + Arg(1) + Arg(2)) + Arg(0))) + (Arg(0) + Arg(1) + Arg(1)) + Arg(1)
[01.07.2016 10:52:05,318] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.56
[01.07.2016 10:52:05,318] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 4.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 5.0) - ((sine (3.0 ^ 4.0)) - X)) - (sine (7.0 * X)))) / ((3.0 ^ 4.0) - X)) ==> Arg(1)
[01.07.2016 10:52:06,187] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.56
[01.07.2016 10:52:06,187] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 4.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 5.0) - ((sine (5.0 ^ 3.0)) - X)) - (sine (7.0 * X)))) / ((3.0 ^ 4.0) - X)) ==> Arg(0) + (Arg(1) + (Arg(0) + Arg(1) + Arg(1)) + (((Arg(0) + Arg(0) + Arg(1)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(2) + Arg(1) + Arg(2))) + (Arg(1) + (Arg(2) + Arg(1) + Arg(0)) + (Arg(2) + Arg(0) + Arg(0))) + Arg(1))) + Arg(2)
[01.07.2016 10:52:06,803] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.50
[01.07.2016 10:52:06,804] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 4.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 5.0) - ((5.0 / (5.0 ^ 4.0)) - X)) - (sine (7.0 * X)))) / ((3.0 ^ 4.0) - X)) ==> (Arg(2) + Arg(2) + Arg(1)) + ((Arg(2) + Arg(0) + ((Arg(2) + Arg(0) + (Arg(1) + (Arg(2) + Arg(0) + (Arg(0) + Arg(1) + Arg(1))) + Arg(1))) + Arg(2) + Arg(1))) + Arg(2) + Arg(1)) + Arg(1)
[01.07.2016 10:52:07,615] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 100, memory free: 23.2 MB
[01.07.2016 10:52:10,090] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.43
[01.07.2016 10:52:10,090] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - ((X / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 5.0) - ((4.0 / (5.0 ^ 4.0)) - X)) - (sine (7.0 * X)))) / ((3.0 ^ 4.0) - X)) ==> Arg(1) + Arg(2) + (Arg(2) + Arg(0) + Arg(0))
[01.07.2016 10:52:11,659] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.33
[01.07.2016 10:52:11,659] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 2.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 3.0)) - 4.0) - ((5.0 / (5.0 ^ 3.0)) - X)) - (sine 2.0))) / ((3.0 ^ 4.0) - X)) ==> ((Arg(1) + Arg(2) + (Arg(2) + Arg(1) + Arg(1))) + (Arg(1) + (Arg(2) + Arg(2) + Arg(2)) + Arg(1)) + (Arg(2) + (Arg(0) + Arg(1) + Arg(2)) + Arg(0))) + (Arg(0) + Arg(1) + Arg(1)) + Arg(1)
[01.07.2016 10:52:11,959] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.32
[01.07.2016 10:52:11,960] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 4.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 5.0) - ((4.0 / (5.0 ^ 4.0)) - X)) - (sine (6.0 ^ 4.0)))) / ((3.0 ^ 4.0) - X)) ==> ((Arg(0) + Arg(0) + Arg(1)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(2) + Arg(1) + Arg(1))) + ((Arg(0) + (Arg(0) + Arg(1) + (Arg(1) + Arg(0) + Arg(0))) + (Arg(0) + Arg(0) + Arg(1))) + Arg(1) + Arg(0)) + Arg(1)
[01.07.2016 10:52:14,333] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.30
[01.07.2016 10:52:14,333] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 4.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 5.0) - ((4.0 / (4.0 ^ 4.0)) - X)) - (sine (6.0 ^ 4.0)))) / ((3.0 ^ 4.0) - X)) ==> Arg(0) + Arg(1) + (Arg(2) + Arg(1) + Arg(2))
[01.07.2016 10:52:14,911] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 125, memory free: 8.7 MB
[01.07.2016 10:52:19,143] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.29
[01.07.2016 10:52:19,144] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 4.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 5.0) - ((2.0 / (3.0 ^ 4.0)) - X)) - (sine (6.0 ^ 4.0)))) / ((3.0 ^ 4.0) - X)) ==> Arg(1) + Arg(2) + (Arg(2) + Arg(1) + Arg(2))
[01.07.2016 10:52:22,629] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 150, memory free: 13.5 MB
[01.07.2016 10:52:30,354] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 175, memory free: 37.3 MB
[01.07.2016 10:52:31,940] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.28
[01.07.2016 10:52:31,941] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 2.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 5.0) - ((2.0 / (3.0 ^ 4.0)) - X)) - (sine (sine (6.0 ^ 4.0))))) / ((3.0 ^ 4.0) - X)) ==> Arg(1)
[01.07.2016 10:52:32,566] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.28
[01.07.2016 10:52:32,567] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 4.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 5.0) - ((X / (4.0 ^ 4.0)) - X)) - (sine (6.0 ^ 4.0)))) / ((3.0 ^ 4.0) - X)) ==> Arg(0) + Arg(1) + (((Arg(1) + Arg(1) + Arg(1)) + Arg(1) + Arg(1)) + Arg(1) + Arg(1))
[01.07.2016 10:52:37,916] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 200, memory free: 22.8 MB
[01.07.2016 10:52:38,198] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.27
[01.07.2016 10:52:38,199] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 4.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 5.0) - ((X / (6.0 ^ 3.0)) - X)) - (sine (6.0 ^ 4.0)))) / ((3.0 ^ 4.0) - X)) ==> Arg(0) + (Arg(0) + Arg(1) + (Arg(1) + Arg(2) + (Arg(2) + Arg(0) + Arg(0)))) + (Arg(0) + Arg(0) + Arg(1))
[01.07.2016 10:52:45,175] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 225, memory free: 29.4 MB
[01.07.2016 10:52:52,511] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 250, memory free: 19.4 MB
[01.07.2016 10:52:59,264] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.26
[01.07.2016 10:52:59,264] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 3.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 4.0) - ((X / (4.0 ^ 3.0)) - X)) - (sine (sine X)))) / ((3.0 ^ 4.0) - X)) ==> Arg(1) + Arg(2) + (Arg(2) + Arg(0) + Arg(2))
[01.07.2016 10:53:00,236] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 275, memory free: 16.7 MB
[01.07.2016 10:53:07,914] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 300, memory free: 29.1 MB
[01.07.2016 10:53:15,199] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 325, memory free: 19.2 MB
[01.07.2016 10:53:15,761] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.24
[01.07.2016 10:53:15,762] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 3.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 4.0) - ((X / (ADF1(4.0,4.0,4.0))) - X)) - (sine (sine X)))) / ((3.0 ^ 4.0) - X)) ==> (Arg(1) + Arg(2) + (Arg(2) + Arg(2) + Arg(1))) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(1) + Arg(1) + Arg(2))
[01.07.2016 10:53:16,383] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.23
[01.07.2016 10:53:16,384] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 3.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 4.0) - ((X / (ADF1(4.0,4.0,4.0))) - X)) - (sine (sine X)))) / ((3.0 ^ 4.0) - X)) ==> (Arg(1) + Arg(2) + (Arg(2) + Arg(2) + Arg(1))) + (Arg(1) + Arg(0) + Arg(1)) + (Arg(0) + (Arg(0) + Arg(0) + Arg(1)) + Arg(1))
[01.07.2016 10:53:20,714] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.22
[01.07.2016 10:53:20,715] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 3.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 4.0) - ((X / (ADF1(3.0,4.0,4.0))) - X)) - (sine (sine X)))) / ((3.0 ^ 4.0) - X)) ==> Arg(0) + (Arg(2) + ((Arg(0) + Arg(1) + (Arg(2) + (Arg(2) + Arg(0) + Arg(2)) + Arg(2))) + (Arg(1) + Arg(1) + Arg(1)) + Arg(1)) + Arg(0)) + Arg(1)
[01.07.2016 10:53:25,990] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 350, memory free: 16.9 MB
[01.07.2016 10:53:30,753] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.21
[01.07.2016 10:53:30,754] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 3.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 4.0) - ((X / (ADF1(3.0,4.0,4.0))) - X)) - (sine (sine X)))) / ((3.0 ^ 4.0) - X)) ==> (Arg(1) + Arg(1) + Arg(1)) + (Arg(0) + (Arg(0) + Arg(0) + Arg(1)) + Arg(1)) + ((Arg(1) + Arg(1) + Arg(1)) + Arg(1) + (Arg(1) + Arg(1) + Arg(1)))
[01.07.2016 10:53:41,237] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.21
[01.07.2016 10:53:41,237] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 3.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 4.0) - ((X / (ADF1(3.0,4.0,3.0))) - X)) - (sine (sine X)))) / ((3.0 ^ 4.0) - X)) ==> (Arg(0) + (Arg(2) + ((Arg(1) + Arg(1) + Arg(1)) + Arg(1) + Arg(2)) + Arg(0)) + Arg(1)) + (Arg(2) + Arg(1) + Arg(0)) + (Arg(0) + Arg(2) + (Arg(2) + Arg(2) + Arg(1)))
[01.07.2016 10:53:54,216] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 375, memory free: 23.5 MB
[01.07.2016 10:54:25,560] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 400, memory free: 14.8 MB
[01.07.2016 10:54:26,986] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.21
[01.07.2016 10:54:26,987] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 3.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 4.0) - ((X / (ADF1(3.0,(sine X),3.0))) - X)) - (sine (sine X)))) / ((3.0 ^ 4.0) - X)) ==> (Arg(2) + ((Arg(1) + Arg(1) + Arg(1)) + Arg(1) + Arg(2)) + Arg(0)) + (Arg(2) + Arg(1) + Arg(0)) + (Arg(0) + (Arg(0) + (Arg(1) + (Arg(0) + (Arg(1) + ((Arg(0) + Arg(1) + Arg(1)) + (Arg(2) + Arg(1) + Arg(0)) + Arg(0)) + Arg(0)) + Arg(2)) + Arg(0)) + Arg(1)) + Arg(0))
[01.07.2016 10:54:41,746] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.21
[01.07.2016 10:54:41,746] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 3.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 4.0) - ((X / (ADF1(3.0,(sine X),3.0))) - X)) - (sine (sine X)))) / ((3.0 ^ 4.0) - X)) ==> (Arg(0) + (Arg(2) + ((Arg(1) + Arg(1) + Arg(1)) + Arg(1) + Arg(2)) + Arg(0)) + Arg(1)) + (Arg(0) + (Arg(1) + Arg(1) + Arg(1)) + (Arg(1) + Arg(2) + ((Arg(0) + Arg(0) + Arg(1)) + Arg(1) + (Arg(2) + (Arg(1) + Arg(1) + Arg(1)) + Arg(1))))) + (Arg(0) + Arg(1) + (Arg(2) + (Arg(2) + Arg(1) + Arg(0)) + Arg(2)))
[01.07.2016 10:54:54,630] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.17
[01.07.2016 10:54:54,630] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 3.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 4.0) - ((X / (ADF1(3.0,(sine X),3.0))) - X)) - (sine (sine X)))) / ((3.0 ^ 4.0) - X)) ==> (Arg(0) + ((Arg(0) + (Arg(1) + Arg(1) + Arg(1)) + Arg(1)) + Arg(2) + Arg(0)) + Arg(1)) + (Arg(1) + (Arg(1) + Arg(1) + Arg(1)) + Arg(0)) + (((Arg(1) + Arg(1) + Arg(1)) + ((Arg(1) + Arg(1) + Arg(1)) + Arg(0) + (Arg(1) + Arg(1) + Arg(1))) + Arg(0)) + Arg(2) + (Arg(1) + Arg(1) + Arg(1)))
[01.07.2016 10:55:05,079] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 425, memory free: 41.8 MB
[01.07.2016 10:55:37,218] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 450, memory free: 23.8 MB
[01.07.2016 10:56:03,166] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 475, memory free: 22.3 MB
[01.07.2016 10:56:18,068] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.16
[01.07.2016 10:56:18,068] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 3.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 4.0) - ((X / (ADF1(3.0,(sine X),3.0))) - X)) - (sine (sine X)))) / ((3.0 ^ 4.0) - X)) ==> (Arg(0) + ((Arg(0) + (Arg(1) + Arg(1) + Arg(1)) + Arg(1)) + Arg(2) + Arg(0)) + Arg(1)) + (Arg(1) + (Arg(1) + Arg(1) + Arg(1)) + Arg(0)) + (((Arg(1) + Arg(1) + Arg(1)) + (((Arg(1) + (Arg(1) + Arg(1) + Arg(1)) + Arg(0)) + Arg(1) + Arg(1)) + Arg(0) + (Arg(1) + Arg(1) + Arg(1))) + Arg(0)) + Arg(2) + (Arg(1) + Arg(1) + Arg(1)))
[01.07.2016 10:56:37,517] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 500, memory free: 22.7 MB
[01.07.2016 10:57:11,911] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 525, memory free: 24.7 MB
[01.07.2016 10:57:34,876] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 550, memory free: 13.6 MB
[01.07.2016 10:58:04,953] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 575, memory free: 12.1 MB
[01.07.2016 10:58:32,991] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 600, memory free: 25.7 MB
[01.07.2016 10:59:03,845] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 625, memory free: 28.9 MB
[01.07.2016 10:59:34,279] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 650, memory free: 18.6 MB
[01.07.2016 11:00:03,277] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 675, memory free: 20.1 MB
[01.07.2016 11:00:31,503] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 700, memory free: 19.7 MB
[01.07.2016 11:00:38,096] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 10.06
[01.07.2016 11:00:38,097] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (((X - 3.0) / (((((X - (5.0 / (((4.0 ^ 3.0) - (sine 4.0)) - (X - (X / (6.0 ^ 4.0)))))) - (sine 4.0)) - 4.0) - ((X / (ADF1(3.0,(sine X),3.0))) - X)) - (sine (sine X)))) / ((3.0 ^ 4.0) - X)) ==> ((Arg(1) + Arg(1) + Arg(0)) + Arg(0) + ((Arg(1) + Arg(1) + Arg(1)) + Arg(1) + Arg(1))) + (Arg(1) + (Arg(1) + Arg(1) + Arg(1)) + Arg(0)) + (((Arg(1) + Arg(1) + Arg(1)) + (((Arg(1) + (Arg(1) + Arg(1) + Arg(1)) + Arg(0)) + Arg(1) + Arg(1)) + Arg(0) + (Arg(1) + Arg(1) + Arg(1))) + Arg(0)) + Arg(2) + (Arg(1) + Arg(1) + Arg(1)))
[01.07.2016 11:01:03,656] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 725, memory free: 27.8 MB
[01.07.2016 11:01:32,522] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 750, memory free: 25.9 MB
[01.07.2016 19:42:31,872] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
