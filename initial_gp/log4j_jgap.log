[01.07.2016 01:15:38,375] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 84.32
[01.07.2016 01:15:38,375] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ ((((X ^ 8.0) ^ ((X ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ^ ((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0)))))) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 5.0))) * 4.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 3.0)) ==> Arg(1) + Arg(2) + Arg(0)
[01.07.2016 01:15:38,515] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 84.32
[01.07.2016 01:15:38,602] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ^ ((((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ^ ((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0)))) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 3.0)) ==> (Arg(0) + Arg(2) + Arg(0)) + ((Arg(1) + Arg(2) + Arg(2)) + (Arg(1) + Arg(0) + Arg(2)) + (Arg(0) + Arg(1) + Arg(1))) + ((Arg(1) + Arg(0) + Arg(2)) + (Arg(0) + ((((Arg(1) + Arg(1) + Arg(0)) + (Arg(2) + (Arg(1) + Arg(1) + Arg(0)) + Arg(2)) + (Arg(2) + Arg(1) + Arg(0))) + Arg(2) + Arg(0)) + (Arg(0) + Arg(1) + Arg(2)) + Arg(0)) + Arg(1)) + (Arg(2) + Arg(0) + Arg(0)))
[01.07.2016 01:15:38,751] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 83.37
[01.07.2016 01:15:38,752] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 5.0))) * 4.0)) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ^ (((X ^ (4.0 * 4.0)) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ==> (Arg(0) + Arg(2) + Arg(0)) + ((Arg(1) + Arg(2) + Arg(2)) + (Arg(1) + Arg(0) + Arg(2)) + (Arg(0) + Arg(1) + Arg(1))) + (((Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(2)) + (Arg(0) + ((Arg(0) + Arg(2) + Arg(1)) + (Arg(0) + Arg(1) + Arg(2)) + Arg(0)) + Arg(1)) + (Arg(2) + Arg(0) + Arg(0)))
[01.07.2016 01:15:39,284] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 83.32
[01.07.2016 01:15:39,285] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ (X ^ (6.0 * 5.0))) * 4.0)) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ^ (((X ^ (4.0 * 4.0)) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ==> (Arg(0) + Arg(2) + Arg(0)) + (Arg(2) + Arg(1) + Arg(2)) + (((Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(2)) + (Arg(0) + ((Arg(0) + Arg(2) + Arg(1)) + (Arg(0) + Arg(1) + Arg(2)) + Arg(0)) + Arg(1)) + (Arg(1) + Arg(2) + Arg(2)))
[01.07.2016 01:15:39,491] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 83.29
[01.07.2016 01:15:39,492] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) * 4.0)) ^ ((X ^ 8.0) ^ ((X * 9.0) ^ (6.0 * 6.0)))) ==> (Arg(1) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(1) + Arg(0) + Arg(2)) + Arg(1) + (Arg(2) + ((Arg(0) + Arg(2) + Arg(1)) + (Arg(1) + Arg(1) + Arg(0)) + (((Arg(0) + Arg(0) + Arg(0)) + Arg(0) + Arg(2)) + (Arg(1) + Arg(2) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1)))) + (Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0))))
[01.07.2016 01:15:40,678] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 83.29
[01.07.2016 01:15:40,678] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((((X * 9.0) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 5.0))) * 4.0)) ^ (6.0 * 6.0)) ^ ((X ^ 8.0) * 4.0)) ==> Arg(1)
[01.07.2016 01:15:40,962] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 82.61
[01.07.2016 01:15:40,963] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (6.0 * 6.0))))) ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (6.0 * 6.0)))) ==> (Arg(1) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(1) + Arg(0) + Arg(2)) + Arg(1) + (Arg(2) + ((Arg(2) + Arg(1) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + ((Arg(1) + Arg(0) + Arg(2)) + (((Arg(2) + Arg(1) + Arg(2)) + (Arg(2) + Arg(1) + Arg(2)) + (Arg(1) + Arg(0) + Arg(2))) + ((Arg(2) + Arg(1) + Arg(2)) + (Arg(2) + Arg(2) + Arg(1)) + (Arg(2) + Arg(1) + Arg(0))) + (Arg(1) + Arg(2) + Arg(0))) + (Arg(1) + Arg(1) + Arg(2)))) + (Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0))))
[01.07.2016 01:15:41,774] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.57
[01.07.2016 01:15:41,774] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 4.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((4.0 - X) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> ((Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0)) + (Arg(2) + (Arg(1) + Arg(2) + Arg(1)) + (Arg(2) + (Arg(2) + Arg(2) + Arg(2)) + Arg(2)))) + ((Arg(2) + Arg(0) + Arg(0)) + (Arg(2) + Arg(2) + Arg(0)) + ((Arg(1) + Arg(2) + Arg(1)) + (Arg(1) + Arg(1) + Arg(1)) + (Arg(2) + Arg(2) + (Arg(1) + Arg(1) + Arg(0))))) + ((Arg(0) + Arg(1) + Arg(1)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(1) + Arg(2) + Arg(1)))
[01.07.2016 01:15:43,337] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.56
[01.07.2016 01:15:43,338] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 4.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((4.0 - X) ^ ((X ^ 4.0) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> Arg(1)
[01.07.2016 01:15:44,201] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.52
[01.07.2016 01:15:44,202] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 4.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((4.0 - X) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((5.0 * X) ^ (6.0 * 5.0)))) ==> Arg(2) + Arg(2) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:15:44,955] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.45
[01.07.2016 01:15:44,956] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 4.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((4.0 - X) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * (6.0 * 6.0))) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> Arg(1) + Arg(1) + Arg(2)
[01.07.2016 01:15:45,572] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.13
[01.07.2016 01:15:45,573] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (6.0 * 6.0))))) ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((X * 9.0) ^ (5.0 * 6.0)))) ==> ((Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0)) + ((Arg(0) + Arg(0) + ((Arg(1) + Arg(1) + Arg(0)) + Arg(0) + (Arg(1) + (Arg(1) + Arg(0) + Arg(0)) + Arg(2)))) + (Arg(2) + Arg(1) + Arg(0)) + (Arg(1) + Arg(2) + Arg(2))) + (Arg(1) + Arg(0) + Arg(1))) + ((Arg(1) + Arg(0) + Arg(2)) + Arg(2) + ((Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0)) + Arg(1))) + (Arg(2) + Arg(2) + Arg(2))
[01.07.2016 01:15:46,384] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.13
[01.07.2016 01:15:46,385] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ (((X ^ 8.0) ^ ((6.0 * X) ^ (6.0 * 6.0))) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (6.0 * 6.0))))) ^ 4.0) ^ ((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((X ^ 8.0) ^ ((X ^ 8.0) ^ (((X ^ 6.0) ^ ((X ^ 3.0) ^ (4.0 * 4.0))) * 4.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((X * 9.0) ^ (5.0 * 6.0)))) ==> ((Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0)) + ((Arg(0) + Arg(0) + (((Arg(0) + Arg(2) + (Arg(2) + Arg(2) + (Arg(0) + Arg(1) + Arg(1)))) + (Arg(0) + ((Arg(0) + Arg(1) + Arg(0)) + Arg(2) + Arg(0)) + Arg(1)) + (Arg(0) + Arg(1) + Arg(2))) + Arg(0) + (Arg(1) + (Arg(1) + Arg(0) + Arg(0)) + Arg(2)))) + (Arg(2) + Arg(1) + Arg(0)) + (Arg(1) + Arg(2) + Arg(2))) + (Arg(1) + Arg(0) + Arg(1))) + ((Arg(1) + Arg(0) + Arg(2)) + Arg(2) + ((Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0)) + Arg(1))) + (Arg(2) + Arg(2) + Arg(2))
[01.07.2016 01:15:46,665] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 80.70
[01.07.2016 01:15:46,666] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 4.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((4.0 - X) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * ((((6.0 * X) ^ (4.0 * 6.0)) ^ ((6.0 * X) ^ (4.0 * 4.0))) * 4.0))) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> (Arg(1) + Arg(2) + Arg(1)) + Arg(2) + ((Arg(1) + Arg(1) + Arg(0)) + Arg(1) + (Arg(0) + Arg(1) + Arg(1)))
[01.07.2016 01:15:46,957] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 79.67
[01.07.2016 01:15:46,957] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 8.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ ((6.0 ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (3.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> (((Arg(1) + Arg(2) + (Arg(1) + Arg(0) + Arg(2))) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(1)) + Arg(0)) + Arg(2) + Arg(0)) + ((Arg(0) + Arg(0) + Arg(2)) + Arg(0) + Arg(1)) + Arg(0)
[01.07.2016 01:15:47,303] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 79.67
[01.07.2016 01:15:47,303] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 8.0) ^ (((((5.0 * X) ^ (4.0 ^ 3.0)) ^ ((6.0 ^ ((X ^ 8.0) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ (3.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> (((Arg(1) + Arg(2) + (Arg(1) + Arg(0) + Arg(2))) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(1)) + Arg(0)) + Arg(2) + Arg(0)) + ((Arg(0) + Arg(0) + Arg(2)) + Arg(0) + Arg(1)) + Arg(0)
[01.07.2016 01:15:49,323] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 79.08
[01.07.2016 01:15:49,323] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 8.0) ^ (((X ^ 7.0) ^ ((((5.0 * 2.0) ^ (((((((5.0 * X) ^ (4.0 ^ 4.0)) ^ (((3.0 - X) ^ (5.0 * 5.0)) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0) ^ (5.0 * 3.0)) * 4.0)) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> (Arg(0) + Arg(2) + Arg(2)) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))
[01.07.2016 01:15:52,224] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 78.26
[01.07.2016 01:15:52,225] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ ((((2.0 ^ (4.0 ^ 3.0)) ^ (((((((5.0 * X) ^ (4.0 ^ 4.0)) ^ ((((X ^ 4.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) ^ ((6.0 * X) ^ (4.0 * 5.0))) * 4.0)) ^ ((((X ^ 6.0) ^ ((X ^ 4.0) ^ (6.0 * 6.0))) * 4.0) ^ (4.0 * 4.0))) * 3.0) ^ ((6.0 * X) ^ (4.0 * 6.0))) * 4.0)) ^ (4.0 * 4.0)) * 4.0)) ^ ((X ^ 6.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> Arg(2) + Arg(2) + ((Arg(1) + Arg(0) + Arg(2)) + Arg(1) + (Arg(2) + ((Arg(2) + Arg(1) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + ((Arg(1) + Arg(0) + Arg(2)) + ((Arg(2) + (Arg(0) + (Arg(2) + Arg(1) + Arg(0)) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0))) + ((Arg(1) + Arg(2) + Arg(1)) + Arg(2) + (Arg(1) + ((Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + (Arg(1) + Arg(1) + Arg(0))) + Arg(0)) + Arg(0))) + (Arg(1) + Arg(2) + Arg(0))) + Arg(0))) + (Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0))))
[01.07.2016 01:15:52,608] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 77.29
[01.07.2016 01:15:52,610] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (4.0 ^ 3.0)) ^ (((((((5.0 * X) ^ (4.0 ^ 4.0)) ^ ((((X ^ 4.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) ^ ((6.0 * X) ^ (4.0 * 5.0))) * 4.0)) ^ (4.0 ^ (4.0 * 4.0))) * 3.0) ^ ((4.0 ^ 3.0) ^ (4.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ 5.0)) * 4.0)) ^ ((X ^ 4.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> Arg(0) + ((Arg(1) + Arg(0) + Arg(2)) + Arg(2) + (((((Arg(0) + Arg(2) + Arg(2)) + Arg(2) + (Arg(2) + Arg(2) + Arg(2))) + Arg(2) + Arg(0)) + (Arg(1) + Arg(2) + Arg(1)) + (Arg(2) + Arg(2) + Arg(2))) + Arg(1) + (Arg(2) + (Arg(0) + Arg(0) + (Arg(1) + Arg(1) + (Arg(1) + Arg(1) + Arg(0)))) + (Arg(0) + (((Arg(1) + Arg(2) + Arg(1)) + Arg(0) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + ((Arg(1) + Arg(1) + Arg(2)) + (Arg(0) + Arg(2) + Arg(1)) + (Arg(1) + ((Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + (Arg(1) + Arg(1) + Arg(0))) + Arg(0)) + Arg(0)))) + Arg(0))))) + Arg(0)
[01.07.2016 01:15:57,648] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.94
[01.07.2016 01:15:57,772] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 8.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (3.0 ^ 3.0)) ^ (((((((5.0 * X) ^ (4.0 ^ 3.0)) ^ (((3.0 - X) ^ (4.0 * (5.0 * 5.0))) * 4.0)) ^ ((4.0 * 2.0) ^ (4.0 * 3.0))) * 3.0) ^ (5.0 * (((5.0 * X) ^ (4.0 ^ 3.0)) ^ ((6.0 ^ ((X ^ 8.0) ^ (4.0 * 6.0))) * 4.0)))) * 2.0)) ^ ((5.0 * X) ^ (5.0 * 3.0))) * 4.0)) ^ ((X ^ 4.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> (Arg(1) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(1) + Arg(0) + Arg(1)) + Arg(1) + ((Arg(1) + Arg(0) + Arg(2)) + ((Arg(1) + Arg(2) + (Arg(1) + ((Arg(1) + Arg(1) + Arg(0)) + Arg(0) + Arg(1)) + Arg(2))) + (Arg(1) + Arg(0) + Arg(0)) + (Arg(1) + Arg(1) + Arg(0))) + (((((Arg(0) + Arg(2) + Arg(2)) + Arg(2) + Arg(2)) + Arg(2) + Arg(0)) + (Arg(1) + Arg(0) + Arg(0)) + (Arg(2) + (Arg(1) + Arg(2) + Arg(2)) + (Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0)))) + (Arg(0) + Arg(2) + Arg(1)) + (Arg(1) + Arg(2) + Arg(2)))))
[01.07.2016 01:15:58,188] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.29
[01.07.2016 01:15:58,188] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (4.0 ^ 3.0)) ^ (((((((4.0 * X) ^ (4.0 ^ 4.0)) ^ ((((X ^ 4.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) ^ ((6.0 * X) ^ (4.0 * 5.0))) * 4.0)) ^ (4.0 ^ (4.0 * 3.0))) * 3.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ 5.0)) * 4.0)) ^ ((X ^ 4.0) ^ ((6.0 * X) ^ (5.0 * 2.0)))) ==> Arg(0) + Arg(1) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:16:00,829] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.42
[01.07.2016 01:16:00,830] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (4.0 ^ 3.0)) ^ (((((((4.0 * X) ^ (4.0 ^ 4.0)) ^ ((((X ^ 4.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) ^ ((6.0 * X) ^ (4.0 * 5.0))) * 4.0)) ^ (4.0 ^ (4.0 * 3.0))) * 3.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ 5.0)) * 4.0)) ^ ((X ^ 4.0) ^ ((6.0 * X) ^ 2.0))) ==> Arg(0) + Arg(1) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:16:07,688] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.42
[01.07.2016 01:16:07,689] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (4.0 ^ 3.0)) ^ (((((((4.0 * X) ^ (4.0 ^ 4.0)) ^ ((((X ^ 4.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) ^ ((6.0 * X) ^ (4.0 * 5.0))) * 4.0)) ^ (4.0 ^ 2.0)) * 3.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ 5.0)) * 4.0)) ^ ((X ^ 4.0) ^ ((6.0 * X) ^ 2.0))) ==> Arg(0) + Arg(1) + (Arg(2) + Arg(0) + Arg(1))
[01.07.2016 01:16:32,619] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.42
[01.07.2016 01:16:32,619] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (4.0 ^ 3.0)) ^ (((((((3.0 * X) ^ (4.0 ^ 4.0)) ^ ((((X ^ 4.0) ^ (((4.0 ^ X) - X) ^ (3.0 * 6.0))) ^ ((5.0 * X) ^ (4.0 * 3.0))) * 3.0)) ^ (4.0 ^ 3.0)) * 3.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) * 4.0)) ^ ((6.0 * X) ^ 5.0)) * 4.0)) ^ ((X ^ 4.0) ^ ((6.0 * X) ^ 2.0))) ==> Arg(0)
[01.07.2016 01:16:34,456] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 74.86
[01.07.2016 01:16:34,456] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ (((X ^ 7.0) ^ (((((3.0 * X) ^ (4.0 ^ 3.0)) ^ (((((((3.0 * X) ^ (4.0 ^ 3.0)) ^ ((((X ^ 4.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) ^ (3.0 ^ (3.0 * 4.0))) * 4.0)) ^ (4.0 ^ 3.0)) * 3.0) ^ ((4.0 * X) ^ (3.0 * 6.0))) * 2.0)) ^ ((6.0 * X) ^ 5.0)) * 4.0)) ^ ((X ^ 4.0) ^ (((6.0 * X) ^ 4.0) ^ 2.0))) ==> Arg(1) + Arg(2) + Arg(0)
[01.07.2016 01:16:44,500] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:16:44,586] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:16:44,623] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:16:44,780] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:16:44,783] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:16:45,092] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 89.96
[01.07.2016 01:16:45,096] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X ^ 7.0) * (X ^ 7.0)) - (X - (X ^ 7.0)) ==> (Arg(0) + (Arg(0) + Arg(2) + Arg(0)) + (Arg(1) + Arg(1) + Arg(2))) + Arg(2) + Arg(2)
[01.07.2016 01:16:45,262] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 89.53
[01.07.2016 01:16:45,264] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X ^ 5.0) - (6.0 - 6.0)) - X ==> (Arg(0) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + (Arg(2) + Arg(0) + (Arg(0) + Arg(1) + Arg(0))) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:16:45,565] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 89.44
[01.07.2016 01:16:45,566] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X ^ 5.0) - (6.0 - 6.0)) - (X - (X ^ 7.0)) ==> (Arg(0) + (Arg(0) + Arg(2) + Arg(0)) + (Arg(1) + Arg(1) + Arg(0))) + Arg(2) + Arg(2)
[01.07.2016 01:16:45,814] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 88.82
[01.07.2016 01:16:45,815] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * 2.0) * (X ^ 2.0)) - ((X * 2.0) - (X ^ 3.0)) ==> ((Arg(1) + Arg(0) + Arg(1)) + (Arg(2) + Arg(0) + Arg(1)) + (Arg(1) + Arg(2) + Arg(2))) + ((Arg(0) + Arg(0) + Arg(1)) + (Arg(0) + Arg(1) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1))) + ((Arg(2) + Arg(1) + Arg(0)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(2) + Arg(1) + Arg(1)))
[01.07.2016 01:16:45,984] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 88.52
[01.07.2016 01:16:45,984] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * 2.0) * (X ^ 2.0)) - ((X * 2.0) - (X - X)) ==> ((Arg(1) + Arg(0) + Arg(1)) + (Arg(2) + Arg(0) + Arg(1)) + (Arg(1) + Arg(2) + Arg(2))) + ((Arg(0) + Arg(0) + Arg(1)) + (Arg(0) + Arg(1) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1))) + ((Arg(2) + Arg(1) + Arg(0)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(2) + Arg(1) + Arg(1)))
[01.07.2016 01:16:46,384] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 87.68
[01.07.2016 01:16:46,388] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) - (X - X)) - ((X * (X ^ 9.0)) ^ (X * X)) ==> (Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(0)) + (Arg(0) + Arg(1) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:16:47,048] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 87.47
[01.07.2016 01:16:47,049] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X ^ 5.0) - (X - X)) - ((X * (X ^ 9.0)) ^ (X * X))) - ((X ^ 7.0) * (X * X))) - X ==> (Arg(0) + Arg(2) + Arg(2)) + (Arg(2) + Arg(0) + (Arg(0) + Arg(0) + Arg(2))) + (Arg(0) + Arg(1) + Arg(1))
[01.07.2016 01:16:47,157] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 87.03
[01.07.2016 01:16:47,158] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X ^ 5.0) - (X - X)) - ((X * (X ^ 9.0)) ^ (X * X))) - ((X ^ 7.0) * (X * X))) - (X - (X ^ 7.0)) ==> Arg(0) + ((Arg(1) + Arg(0) + Arg(0)) + Arg(2) + Arg(0)) + ((Arg(2) + Arg(2) + Arg(1)) + Arg(1) + (Arg(0) + Arg(1) + Arg(1)))
[01.07.2016 01:16:47,342] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.57
[01.07.2016 01:16:47,342] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * ((9.0 ^ X) * (X ^ 8.0))) - (X - (X ^ 7.0))) - (X - X)) - ((X * (X ^ 9.0)) ^ (X * X)) ==> Arg(0) + ((Arg(2) + Arg(0) + Arg(2)) + (Arg(1) + Arg(2) + Arg(0)) + (Arg(0) + ((Arg(1) + Arg(0) + (Arg(2) + Arg(1) + Arg(2))) + (Arg(0) + (Arg(0) + (Arg(1) + Arg(0) + (Arg(0) + Arg(1) + Arg(0))) + Arg(0)) + Arg(0)) + (Arg(2) + Arg(0) + Arg(2))) + (Arg(2) + Arg(1) + Arg(1)))) + (Arg(1) + Arg(0) + Arg(2))
[01.07.2016 01:16:47,530] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.16
[01.07.2016 01:16:47,530] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) - ((X - (X ^ 7.0)) - (X ^ 7.0))) - ((X * (X ^ 9.0)) ^ (X * X)) ==> Arg(1)
[01.07.2016 01:16:49,280] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.15
[01.07.2016 01:16:49,281] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) - ((X - (X ^ 7.0)) - (X ^ 7.0))) - ((X * (X ^ 7.0)) ^ (X * X)) ==> (Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + Arg(1)) + Arg(0)) + Arg(0)) + (Arg(2) + Arg(0) + ((Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + ((Arg(0) + (Arg(0) + Arg(2) + ((Arg(0) + Arg(2) + (Arg(2) + ((Arg(1) + Arg(1) + Arg(0)) + (Arg(1) + Arg(2) + Arg(2)) + (Arg(0) + Arg(2) + Arg(2))) + Arg(0))) + Arg(1) + Arg(1))) + (Arg(0) + Arg(0) + Arg(0))) + Arg(2) + Arg(2))) + Arg(2) + Arg(1))) + (Arg(1) + Arg(2) + Arg(0))
[01.07.2016 01:16:49,766] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.13
[01.07.2016 01:16:49,767] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) - ((X ^ 4.0) * (((X ^ 7.0) * (X * ((X * X) - ((X ^ 7.0) * (X ^ 6.0))))) - X))) - ((X - (X ^ 7.0)) - (X - X))) - ((X * (X ^ 7.0)) ^ (X * X)) ==> Arg(1) + ((Arg(0) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))) + Arg(0) + (Arg(0) + Arg(1) + Arg(0))) + ((Arg(2) + Arg(1) + Arg(2)) + Arg(1) + (Arg(2) + Arg(2) + Arg(0)))
[01.07.2016 01:16:50,038] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.06
[01.07.2016 01:16:50,038] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) - ((X ^ 4.0) * (((X ^ 7.0) * (X * ((X * X) - ((X * X) * (X ^ 6.0))))) - X))) - ((X - (X ^ 7.0)) - (X - X))) - ((X * (X ^ 7.0)) ^ (X * X)) ==> Arg(1) + ((Arg(0) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))) + Arg(0) + (Arg(0) + Arg(1) + Arg(0))) + ((Arg(2) + Arg(1) + Arg(2)) + Arg(1) + (Arg(2) + Arg(2) + Arg(0)))
[01.07.2016 01:17:00,491] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:17:00,499] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:17:00,520] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:17:00,629] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:17:00,633] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:17:00,849] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 87.91
[01.07.2016 01:17:00,852] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 7.0) - X ==> Arg(1)
[01.07.2016 01:17:01,244] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 87.52
[01.07.2016 01:17:01,246] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (6.0 - 6.0) ^ (((X ^ 8.0) ^ (6.0 - X)) ^ X) ==> Arg(0)
[01.07.2016 01:17:02,482] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.89
[01.07.2016 01:17:02,482] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X)) - X ==> Arg(1) + Arg(1) + Arg(0)
[01.07.2016 01:17:02,639] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 86.70
[01.07.2016 01:17:02,640] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) ^ (6.0 ^ X)) - ((X * X) - (X ^ 3.0))) - X) - ((X ^ 8.0) * (((X ^ 5.0) - X) - (X ^ 3.0))) ==> Arg(0) + Arg(0) + Arg(0)
[01.07.2016 01:17:02,734] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 85.25
[01.07.2016 01:17:02,735] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) - (X ^ 4.0)) ==> ((Arg(0) + ((Arg(0) + Arg(1) + Arg(2)) + Arg(2) + ((Arg(1) + Arg(1) + Arg(1)) + (((Arg(2) + Arg(0) + Arg(0)) + (Arg(0) + Arg(2) + Arg(1)) + (Arg(2) + Arg(1) + Arg(1))) + Arg(2) + (Arg(0) + (Arg(1) + Arg(0) + Arg(0)) + Arg(0))) + (Arg(0) + Arg(0) + Arg(2)))) + Arg(2)) + (((Arg(0) + Arg(0) + Arg(2)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + Arg(0) + Arg(2))) + ((Arg(2) + Arg(0) + Arg(0)) + (Arg(1) + Arg(0) + Arg(1)) + (Arg(2) + Arg(0) + Arg(1))) + Arg(2)
[01.07.2016 01:17:03,704] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 84.69
[01.07.2016 01:17:03,707] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - (X ^ 4.0)) ==> (Arg(2) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:04,134] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 83.03
[01.07.2016 01:17:04,135] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X)) - (((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) - (X ^ 4.0)) ==> ((Arg(0) + ((Arg(0) + Arg(1) + Arg(2)) + Arg(2) + ((Arg(1) + Arg(1) + Arg(1)) + (((Arg(0) + Arg(1) + Arg(2)) + (Arg(0) + Arg(2) + Arg(1)) + (Arg(2) + Arg(1) + Arg(1))) + Arg(2) + (Arg(0) + (Arg(1) + Arg(0) + Arg(0)) + Arg(0))) + (Arg(0) + Arg(0) + Arg(2)))) + Arg(2)) + (((Arg(0) + Arg(0) + Arg(2)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + Arg(0) + Arg(2))) + ((Arg(2) + Arg(0) + Arg(0)) + (Arg(1) + Arg(0) + Arg(1)) + (Arg(2) + Arg(0) + Arg(1))) + Arg(2)
[01.07.2016 01:17:05,294] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 82.83
[01.07.2016 01:17:05,295] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - ((((((X * X) ^ (6.0 ^ X)) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X * X) ^ 2.0) ^ (6.0 - X)) ^ X))) - (X * X))) * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - (X ^ 4.0)) ==> (Arg(2) + Arg(1) + Arg(1)) + ((Arg(0) + Arg(1) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:05,569] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 82.68
[01.07.2016 01:17:05,570] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X)) - (((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (6.0 ^ X))) ==> ((Arg(0) + (Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + Arg(2)) + (Arg(2) + Arg(0) + Arg(1)) + (Arg(0) + Arg(0) + Arg(2))) + ((Arg(2) + Arg(0) + Arg(0)) + (Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + (Arg(2) + Arg(0) + Arg(1))) + Arg(2)
[01.07.2016 01:17:05,913] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.85
[01.07.2016 01:17:05,914] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - (X ^ 4.0)))) ==> ((Arg(2) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))) + Arg(2) + Arg(2)) + (((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(1) + Arg(2) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(1) + Arg(1)) + Arg(2))))) + Arg(2)) + (((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:07,457] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.43
[01.07.2016 01:17:07,558] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> ((Arg(2) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))) + Arg(2) + Arg(2)) + (((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(1) + Arg(2) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(1) + Arg(1)) + Arg(2))))) + Arg(2)) + (((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:08,901] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.36
[01.07.2016 01:17:08,902] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 6.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> ((Arg(2) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))) + Arg(2) + Arg(2)) + (((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(1) + Arg(2) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(1) + Arg(1)) + Arg(2))))) + Arg(2)) + (((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:09,609] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 81.01
[01.07.2016 01:17:09,610] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - (((X * ((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X)))) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 6.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (((Arg(2) + Arg(0) + Arg(0)) + Arg(0) + Arg(1)) + Arg(2) + Arg(2)) + (((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(1) + Arg(2) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(1) + Arg(1)) + Arg(2))))) + Arg(2)) + (((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:10,192] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 80.96
[01.07.2016 01:17:10,193] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (4.0 ^ X)) - ((((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ (((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0))) ^ (4.0 ^ ((X * X) ^ 4.0)))) - (X ^ 3.0)) ==> Arg(2) + Arg(2) + Arg(0)
[01.07.2016 01:17:10,483] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 80.73
[01.07.2016 01:17:10,483] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - ((((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (Arg(0) + Arg(0) + (Arg(1) + Arg(0) + Arg(2))) + (((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(0) + Arg(1)) + (Arg(0) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(0) + Arg(1)) + Arg(2))))) + Arg(2)) + (((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:11,035] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 80.32
[01.07.2016 01:17:11,035] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ (X * X))) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> ((Arg(2) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))) + Arg(2) + Arg(2)) + (((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + (Arg(0) + (((Arg(2) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))) + Arg(2) + Arg(2)) + Arg(2) + Arg(2)) + (Arg(0) + Arg(1) + Arg(1))))) + Arg(2)) + (((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)
[01.07.2016 01:17:13,014] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 80.02
[01.07.2016 01:17:13,014] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (4.0 ^ X)))) - (((X * X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(1) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1)) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + ((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2))) + Arg(2)) + (Arg(2) + Arg(0) + Arg(0)) + Arg(2))) + Arg(1))) + Arg(1) + Arg(2))
[01.07.2016 01:17:13,546] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 79.68
[01.07.2016 01:17:13,546] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (6.0 ^ X)) - ((((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ ((((X * X) ^ 3.0) ^ (5.0 - X)) ^ X)))) - ((X * X) ^ ((((X * X) ^ 6.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> ((Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + Arg(2) + (Arg(2) + Arg(0) + Arg(0))) + Arg(0) + Arg(2)
[01.07.2016 01:17:14,640] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 79.32
[01.07.2016 01:17:14,640] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (4.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + Arg(2)) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + ((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2))) + Arg(2)) + (Arg(2) + Arg(0) + Arg(0)) + Arg(2))) + Arg(1))) + Arg(1) + Arg(2))
[01.07.2016 01:17:15,027] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 78.44
[01.07.2016 01:17:15,028] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (4.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + Arg(2)) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + ((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2))) + Arg(2)) + ((Arg(2) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))) + Arg(2) + Arg(2)) + Arg(2))) + Arg(1))) + Arg(1) + Arg(2))
[01.07.2016 01:17:17,455] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 78.44
[01.07.2016 01:17:17,456] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (4.0 ^ X)))) - (((X * ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X)) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (((Arg(0) + Arg(1) + Arg(0)) + ((Arg(0) + Arg(0) + Arg(2)) + Arg(1) + Arg(2)) + ((Arg(2) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))) + Arg(0) + Arg(1))) + Arg(1) + Arg(0)) + Arg(2) + Arg(0)
[01.07.2016 01:17:17,841] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 78.43
[01.07.2016 01:17:17,842] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (4.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X - X) ^ (4.0 - X)) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + Arg(2)) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + ((((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2))) + Arg(2)) + ((Arg(2) + Arg(0) + (Arg(1) + Arg(2) + Arg(0))) + Arg(2) + Arg(2)) + Arg(2))) + Arg(1))) + Arg(1) + Arg(2))
[01.07.2016 01:17:18,268] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 78.14
[01.07.2016 01:17:18,269] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ ((((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> ((Arg(2) + Arg(2) + Arg(0)) + (Arg(2) + Arg(1) + ((Arg(1) + Arg(2) + Arg(0)) + Arg(1) + Arg(0))) + Arg(2)) + Arg(1) + Arg(2)
[01.07.2016 01:17:20,664] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 78.14
[01.07.2016 01:17:20,665] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ ((((X * X) ^ ((3.0 * X) ^ ((((6.0 - 6.0) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> ((Arg(2) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))) + Arg(2) + Arg(2)) + ((Arg(0) + Arg(0) + Arg(0)) + Arg(1) + Arg(2)) + ((Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + ((Arg(0) + Arg(1) + Arg(0)) + ((Arg(0) + (Arg(1) + Arg(1) + (Arg(2) + Arg(0) + Arg(2))) + (((Arg(1) + (Arg(1) + Arg(2) + Arg(0)) + Arg(0)) + ((Arg(2) + Arg(0) + Arg(1)) + (Arg(2) + Arg(0) + ((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1))) + Arg(2)) + (Arg(0) + Arg(2) + Arg(1))) + Arg(0) + Arg(2))) + (Arg(2) + Arg(0) + Arg(0)) + (Arg(0) + (Arg(2) + Arg(0) + (Arg(2) + Arg(1) + Arg(1))) + Arg(2))) + Arg(0))) + (Arg(1) + Arg(2) + Arg(2))) + Arg(0)) + Arg(2) + (Arg(0) + Arg(2) + Arg(1)))
[01.07.2016 01:17:22,276] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 77.42
[01.07.2016 01:17:22,277] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X ^ 4.0) ^ ((((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> Arg(0)
[01.07.2016 01:17:24,329] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 77.16
[01.07.2016 01:17:24,329] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ 4.0) ^ ((((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 4.0)))) ==> (Arg(2) + Arg(0) + Arg(0)) + ((((Arg(2) + Arg(0) + Arg(0)) + ((Arg(2) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1))) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + Arg(1)) + Arg(1))) + Arg(1) + Arg(2))) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + (Arg(1) + (Arg(0) + (Arg(2) + Arg(0) + Arg(0)) + Arg(2)) + Arg(2))) + Arg(1))) + Arg(1) + Arg(2))
[01.07.2016 01:17:30,260] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 77.01
[01.07.2016 01:17:30,260] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X ^ 4.0) ^ ((((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((X ^ 5.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (6.0 - 6.0)))) ==> (Arg(0) + (Arg(0) + Arg(2) + Arg(2)) + Arg(1)) + (Arg(0) + ((((Arg(2) + Arg(1) + Arg(1)) + Arg(2) + Arg(0)) + Arg(1) + Arg(2)) + Arg(2) + Arg(2)) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + (Arg(1) + Arg(0) + Arg(1))) + Arg(1))) + Arg(1) + Arg(2))
[01.07.2016 01:17:31,083] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.82
[01.07.2016 01:17:31,084] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ 4.0) ^ ((((X * X) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((3.0 - 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 5.0)))) ==> (Arg(2) + Arg(0) + Arg(0)) + ((((Arg(2) + Arg(0) + Arg(0)) + ((Arg(2) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1))) + Arg(2)) + ((Arg(0) + Arg(0) + (Arg(0) + (Arg(0) + Arg(2) + Arg(1)) + Arg(1))) + Arg(1) + Arg(2))) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)
[01.07.2016 01:17:35,242] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.28
[01.07.2016 01:17:35,242] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((X ^ 5.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (6.0 - 6.0)))) ==> Arg(1) + Arg(2) + Arg(1)
[01.07.2016 01:17:41,460] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.22
[01.07.2016 01:17:41,461] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) * (4.0 - 4.0)) ^ ((((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 5.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (4.0 ^ X)))) - (((X ^ 5.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((6.0 - 6.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ (6.0 ^ 6.0)) ^ X))) - (6.0 - 6.0)))) ==> Arg(2) + Arg(2) + Arg(0)
[01.07.2016 01:17:41,964] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.22
[01.07.2016 01:17:41,965] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - (((X ^ 5.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (6.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> (Arg(1) + Arg(1) + Arg(2)) + ((Arg(0) + (Arg(0) + Arg(2) + (Arg(0) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2))) + ((Arg(2) + Arg(2) + (Arg(0) + (((Arg(2) + Arg(2) + Arg(2)) + (Arg(1) + (Arg(2) + (Arg(1) + Arg(0) + Arg(1)) + (Arg(1) + Arg(2) + Arg(0))) + Arg(0)) + (((Arg(0) + Arg(0) + Arg(0)) + Arg(0) + Arg(1)) + Arg(0) + Arg(1))) + Arg(2) + (Arg(2) + Arg(0) + ((Arg(1) + Arg(0) + Arg(1)) + Arg(0) + Arg(1)))) + Arg(2))) + Arg(1) + Arg(2))) + Arg(2) + Arg(1)) + Arg(2)
[01.07.2016 01:17:43,396] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 76.14
[01.07.2016 01:17:43,397] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ ((4.0 * X) ^ ((((X * X) ^ 3.0) ^ (5.0 - X)) ^ X))) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ ((X * X) ^ (2.0 ^ X)))) - (((X ^ 5.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ (((X * X) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (5.0 ^ X))) ^ X))) - (X ^ 7.0)))) ==> (Arg(0) + (Arg(0) + Arg(2) + (Arg(0) + (Arg(1) + Arg(0) + Arg(1)) + Arg(2))) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2))) + ((Arg(2) + Arg(2) + Arg(0)) + Arg(0) + Arg(1)) + Arg(2)
[01.07.2016 01:17:44,737] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.22
[01.07.2016 01:17:44,738] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - (((X ^ 5.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> Arg(2) + Arg(0) + Arg(0)
[01.07.2016 01:17:49,202] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.19
[01.07.2016 01:17:49,202] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> Arg(2) + Arg(0) + Arg(0)
[01.07.2016 01:17:50,626] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.17
[01.07.2016 01:17:50,627] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> Arg(0)
[01.07.2016 01:17:51,501] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.13
[01.07.2016 01:17:51,502] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - (((((X ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> Arg(0)
[01.07.2016 01:17:52,078] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 75.03
[01.07.2016 01:17:52,078] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((6.0 - 6.0) ^ ((((X ^ 7.0) ^ 4.0) ^ (6.0 - X)) ^ X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (X ^ 7.0)))) ==> Arg(0)
[01.07.2016 01:17:53,653] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 74.80
[01.07.2016 01:17:53,653] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((X * X) ^ (6.0 - X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> ((Arg(0) + Arg(0) + (Arg(2) + Arg(2) + (Arg(2) + Arg(0) + Arg(1)))) + Arg(1) + Arg(2)) + ((Arg(0) + Arg(0) + Arg(0)) + (Arg(2) + Arg(1) + Arg(1)) + Arg(2)) + ((Arg(1) + (Arg(2) + Arg(2) + Arg(0)) + Arg(0)) + Arg(1) + Arg(2))
[01.07.2016 01:17:57,805] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 74.77
[01.07.2016 01:17:57,806] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - (X ^ 7.0))) ^ X) ^ ((X * X) ^ (6.0 - X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (((X ^ 6.0) ^ 4.0) ^ (6.0 - X))))) ==> (Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(1)) + (Arg(0) + ((Arg(0) + (Arg(0) + Arg(2) + ((Arg(0) + Arg(2) + Arg(2)) + (Arg(2) + Arg(2) + Arg(0)) + (Arg(1) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(0) + Arg(0)) + Arg(0)))) + Arg(2)) + (Arg(2) + Arg(2) + (Arg(2) + Arg(1) + Arg(1))) + Arg(2)) + Arg(2)) + ((Arg(0) + ((Arg(0) + Arg(2) + Arg(2)) + Arg(2) + (Arg(1) + Arg(1) + Arg(0))) + Arg(1)) + Arg(2) + (Arg(2) + Arg(2) + Arg(0)))
[01.07.2016 01:17:58,263] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 73.63
[01.07.2016 01:17:58,264] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((X ^ 7.0) ^ 4.0)) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> ((Arg(0) + Arg(0) + (Arg(2) + Arg(2) + (Arg(2) + Arg(0) + Arg(1)))) + Arg(1) + Arg(2)) + Arg(0) + ((Arg(1) + (Arg(2) + Arg(2) + Arg(0)) + Arg(0)) + Arg(1) + Arg(2))
[01.07.2016 01:17:59,932] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 73.42
[01.07.2016 01:17:59,932] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((X ^ 6.0) ^ 4.0)) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 6.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> (Arg(0) + Arg(2) + Arg(1)) + (Arg(2) + ((Arg(0) + (Arg(0) + Arg(2) + (Arg(2) + (Arg(2) + Arg(0) + Arg(0)) + ((Arg(0) + (Arg(2) + Arg(2) + Arg(2)) + Arg(2)) + (((Arg(0) + Arg(0) + Arg(0)) + Arg(0) + Arg(1)) + Arg(0) + Arg(1)) + Arg(2)))) + Arg(2)) + (Arg(2) + Arg(2) + (Arg(2) + Arg(1) + Arg(1))) + Arg(2)) + Arg(2)) + Arg(1)
[01.07.2016 01:18:04,391] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 72.60
[01.07.2016 01:18:04,392] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 5.0) ^ (4.0 - X))) ^ X))) - (6.0 - 6.0)))) ==> Arg(2) + ((Arg(1) + Arg(0) + Arg(1)) + ((Arg(0) + (Arg(1) + Arg(2) + Arg(0)) + ((Arg(2) + Arg(2) + ((Arg(2) + Arg(0) + (Arg(2) + Arg(2) + (Arg(0) + Arg(2) + Arg(1)))) + (Arg(2) + Arg(0) + Arg(0)) + Arg(2))) + Arg(1) + Arg(2))) + Arg(2) + (Arg(1) + (Arg(2) + Arg(2) + Arg(0)) + Arg(1))) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:18:07,747] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 72.59
[01.07.2016 01:18:07,747] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 5.0) ^ (4.0 - X))) ^ X))) - ((X * X) ^ (6.0 - X))))) ==> Arg(2) + ((Arg(1) + Arg(0) + Arg(1)) + ((Arg(0) + (Arg(1) + Arg(2) + Arg(0)) + ((Arg(2) + Arg(2) + ((Arg(2) + Arg(0) + (Arg(2) + Arg(2) + (Arg(0) + Arg(2) + Arg(1)))) + (Arg(2) + Arg(0) + Arg(0)) + Arg(2))) + Arg(1) + Arg(2))) + Arg(2) + (Arg(1) + (Arg(2) + Arg(2) + Arg(0)) + Arg(1))) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:18:13,934] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 72.59
[01.07.2016 01:18:13,934] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ ((((X * X) ^ 3.0) ^ ((6.0 - 6.0) ^ (((X * X) ^ ((6.0 ^ 5.0) ^ (4.0 - X))) ^ X))) - (((X * X) ^ 3.0) ^ (5.0 - X))))) ==> (Arg(2) + Arg(2) + Arg(0)) + Arg(0) + ((((Arg(0) + Arg(1) + Arg(0)) + (Arg(2) + Arg(0) + Arg(2)) + (((Arg(0) + (Arg(1) + Arg(1) + Arg(0)) + Arg(1)) + Arg(0) + Arg(1)) + ((Arg(1) + Arg(1) + Arg(0)) + Arg(0) + Arg(1)) + (((Arg(0) + Arg(2) + Arg(2)) + Arg(0) + (Arg(1) + Arg(1) + Arg(1))) + Arg(1) + Arg(2)))) + Arg(1) + Arg(2)) + Arg(2) + ((Arg(2) + Arg(2) + (Arg(1) + (Arg(1) + Arg(2) + Arg(2)) + Arg(0))) + Arg(2) + Arg(2)))
[01.07.2016 01:18:15,187] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 71.56
[01.07.2016 01:18:15,188] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ (((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) ^ ((X * (X * X)) ^ 4.0)) - (6.0 - 6.0)))) ==> (((Arg(2) + Arg(0) + (Arg(0) + (Arg(1) + Arg(2) + Arg(0)) + ((Arg(0) + Arg(1) + Arg(0)) + (Arg(2) + Arg(1) + Arg(1)) + Arg(2)))) + (Arg(2) + Arg(1) + Arg(1)) + Arg(1)) + Arg(0) + Arg(1)) + (Arg(0) + Arg(0) + Arg(0)) + Arg(2)
[01.07.2016 01:18:15,465] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 70.65
[01.07.2016 01:18:15,465] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ ((((X * X) ^ 3.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ ((((((X * X) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ (6.0 - X))))) ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 01:18:18,956] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.70
[01.07.2016 01:18:18,957] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ (6.0 - X))))) ==> (Arg(0) + (Arg(0) + Arg(1) + Arg(1)) + Arg(1)) + (Arg(0) + ((Arg(2) + Arg(2) + ((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(1)) + Arg(2) + (Arg(2) + Arg(1) + Arg(2)))) + Arg(1) + Arg(2)) + Arg(2)) + ((Arg(1) + ((Arg(0) + Arg(2) + Arg(2)) + (Arg(2) + Arg(0) + Arg(1)) + Arg(0)) + Arg(0)) + Arg(2) + (Arg(2) + Arg(2) + Arg(0)))
[01.07.2016 01:18:22,874] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.70
[01.07.2016 01:18:22,874] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X * X) ^ (6.0 - X))))) ==> (((Arg(2) + Arg(0) + (Arg(0) + (Arg(1) + Arg(2) + Arg(0)) + (Arg(0) + Arg(1) + Arg(0)))) + (Arg(2) + Arg(1) + Arg(1)) + Arg(1)) + Arg(0) + Arg(1)) + ((Arg(0) + (Arg(0) + Arg(2) + (Arg(0) + Arg(2) + Arg(2))) + (Arg(2) + Arg(2) + Arg(0))) + Arg(2) + Arg(1)) + Arg(2)
[01.07.2016 01:18:23,538] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.60
[01.07.2016 01:18:23,538] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ (6.0 - X))))) ==> Arg(2) + ((Arg(1) + Arg(0) + Arg(1)) + (((Arg(2) + Arg(2) + ((Arg(0) + Arg(0) + Arg(2)) + ((Arg(0) + Arg(0) + Arg(0)) + Arg(2) + Arg(1)) + Arg(1))) + Arg(0) + Arg(1)) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:18:35,612] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.50
[01.07.2016 01:18:35,612] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X))))) ==> Arg(2) + (((Arg(0) + Arg(0) + Arg(0)) + Arg(0) + Arg(1)) + (((Arg(0) + Arg(1) + Arg(0)) + Arg(2) + Arg(0)) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2)) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:18:39,391] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.50
[01.07.2016 01:18:39,392] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ (6.0 - X))))) ==> Arg(2) + (((Arg(0) + Arg(0) + Arg(0)) + Arg(0) + Arg(1)) + (((Arg(0) + Arg(1) + Arg(0)) + Arg(2) + Arg(0)) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2)) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:18:41,899] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.49
[01.07.2016 01:18:41,899] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ (6.0 - X))))) ==> Arg(0) + (Arg(0) + Arg(0) + ((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + (Arg(2) + Arg(2) + Arg(1)) + (Arg(2) + Arg(2) + Arg(0))) + Arg(2)) + (((Arg(1) + (((Arg(1) + Arg(1) + Arg(1)) + ((Arg(1) + ((Arg(0) + Arg(2) + Arg(2)) + (Arg(1) + Arg(1) + Arg(2)) + Arg(0)) + Arg(0)) + Arg(1) + Arg(2)) + ((Arg(0) + Arg(1) + Arg(0)) + Arg(0) + Arg(1))) + Arg(1) + Arg(0)) + Arg(0)) + Arg(2) + Arg(0)) + Arg(2) + (Arg(1) + (Arg(0) + Arg(2) + Arg(2)) + Arg(1))) + Arg(2))) + Arg(2)
[01.07.2016 01:18:43,643] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.49
[01.07.2016 01:18:43,644] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ (6.0 - X))))) ==> Arg(0) + (Arg(0) + Arg(0) + ((Arg(0) + ((Arg(2) + Arg(0) + Arg(1)) + (Arg(2) + Arg(2) + Arg(1)) + (Arg(2) + Arg(2) + Arg(0))) + Arg(2)) + (((Arg(1) + (((Arg(1) + Arg(1) + Arg(1)) + ((Arg(1) + ((Arg(0) + Arg(2) + Arg(2)) + (Arg(1) + Arg(1) + Arg(2)) + Arg(0)) + Arg(0)) + Arg(1) + Arg(2)) + ((Arg(0) + Arg(1) + Arg(0)) + Arg(0) + Arg(1))) + Arg(1) + Arg(0)) + Arg(0)) + Arg(2) + Arg(0)) + Arg(2) + (Arg(1) + (Arg(0) + Arg(2) + Arg(2)) + Arg(1))) + Arg(2))) + Arg(2)
[01.07.2016 01:18:48,049] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.48
[01.07.2016 01:18:48,049] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ ((6.0 - X) - X))))) ==> ((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + (((Arg(2) + Arg(2) + Arg(0)) + (Arg(2) + Arg(2) + ((Arg(2) + Arg(2) + (Arg(0) + Arg(2) + Arg(2))) + Arg(1) + Arg(2))) + Arg(1)) + Arg(2) + (Arg(0) + Arg(1) + Arg(2)))) + Arg(2) + (Arg(2) + Arg(1) + Arg(2))
[01.07.2016 01:18:49,095] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.48
[01.07.2016 01:18:49,096] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * (4.0 - 4.0)) ^ 3.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (((6.0 - 6.0) ^ (6.0 - X)) ^ X))) ^ (5.0 ^ X))) - ((((((X ^ 6.0) ^ 4.0) ^ (6.0 - ((X * X) ^ 3.0))) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ (6.0 - X))))) ==> (Arg(0) + (((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + (((Arg(2) + Arg(2) + Arg(0)) + (Arg(2) + Arg(2) + ((Arg(2) + Arg(2) + (Arg(0) + Arg(2) + Arg(2))) + Arg(1) + Arg(2))) + Arg(1)) + Arg(2) + (Arg(0) + Arg(1) + Arg(2)))) + Arg(2) + (Arg(2) + Arg(1) + Arg(2))) + (Arg(1) + Arg(2) + Arg(0))) + (Arg(0) + Arg(2) + Arg(1)) + ((Arg(1) + ((Arg(0) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2)) + Arg(2) + (Arg(0) + Arg(2) + Arg(2))) + Arg(1)) + Arg(0) + Arg(1))
[01.07.2016 01:18:58,938] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.48
[01.07.2016 01:18:58,939] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ ((5.0 - X) - X))))) ==> (Arg(0) + ((Arg(0) + Arg(1) + Arg(1)) + ((Arg(2) + Arg(0) + Arg(1)) + (Arg(0) + Arg(0) + Arg(0)) + (Arg(1) + Arg(1) + Arg(2))) + Arg(1)) + Arg(2)) + (((Arg(0) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(2) + ((Arg(0) + (((Arg(2) + Arg(2) + Arg(2)) + Arg(1) + Arg(2)) + Arg(1) + Arg(2)) + Arg(1)) + Arg(2) + Arg(1))) + Arg(1)) + (((Arg(0) + Arg(1) + Arg(0)) + Arg(0) + Arg(1)) + Arg(0) + Arg(1))) + Arg(2) + (Arg(1) + (Arg(2) + Arg(0) + Arg(2)) + Arg(1))) + Arg(2)
[01.07.2016 01:19:09,332] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.47
[01.07.2016 01:19:09,333] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 5.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * ((5.0 * X) ^ 4.0)) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ ((3.0 - X) - X))))) ==> ((Arg(2) + Arg(1) + ((Arg(0) + Arg(0) + Arg(1)) + Arg(2) + (Arg(1) + Arg(0) + Arg(1)))) + ((Arg(0) + (Arg(2) + Arg(2) + Arg(0)) + Arg(2)) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2) + (Arg(2) + ((Arg(1) + Arg(1) + Arg(0)) + (Arg(0) + Arg(2) + (Arg(0) + Arg(2) + (Arg(0) + Arg(1) + Arg(2)))) + (Arg(2) + Arg(0) + Arg(0))) + Arg(2))
[01.07.2016 01:19:11,748] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.45
[01.07.2016 01:19:11,748] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 5.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * ((5.0 * X) ^ 4.0)) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - ((X * X) ^ 3.0)))) - ((X ^ 6.0) ^ ((3.0 - X) - X))))) ==> ((Arg(2) + Arg(1) + ((((Arg(0) + (Arg(2) + Arg(2) + ((Arg(1) + Arg(1) + (Arg(1) + Arg(2) + Arg(1))) + Arg(2) + Arg(0))) + Arg(0)) + Arg(1) + Arg(2)) + Arg(2) + Arg(0)) + Arg(2) + (Arg(1) + Arg(0) + Arg(1)))) + ((Arg(0) + (Arg(2) + Arg(2) + Arg(0)) + Arg(2)) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2) + (Arg(2) + ((Arg(1) + Arg(1) + Arg(0)) + (Arg(0) + Arg(2) + (Arg(0) + Arg(2) + (Arg(0) + Arg(1) + Arg(2)))) + (Arg(2) + Arg(0) + Arg(0))) + Arg(2))
[01.07.2016 01:19:12,346] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.44
[01.07.2016 01:19:12,346] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ ((((3.0 - X) - X) - X) - X))))) ==> (Arg(0) + (Arg(1) + (Arg(2) + Arg(0) + Arg(2)) + Arg(1)) + Arg(2)) + (((Arg(0) + Arg(1) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(2) + ((Arg(0) + (((Arg(2) + Arg(2) + Arg(2)) + Arg(1) + Arg(2)) + Arg(1) + Arg(2)) + Arg(1)) + Arg(2) + Arg(1))) + Arg(1)) + (Arg(2) + Arg(1) + (Arg(1) + ((Arg(0) + Arg(0) + Arg(0)) + Arg(1) + Arg(0)) + Arg(1)))) + Arg(2) + (Arg(1) + (Arg(2) + Arg(0) + Arg(2)) + Arg(1))) + Arg(2)
[01.07.2016 01:19:15,986] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 69.36
[01.07.2016 01:19:15,986] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (5.0 - (X * X))) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * X)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ ((X ^ 6.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ ((((3.0 - X) - X) - X) - X))))) ==> (Arg(1) + Arg(0) + Arg(2)) + (Arg(0) + ((Arg(2) + Arg(2) + ((Arg(0) + (((Arg(1) + ((Arg(0) + (Arg(0) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(2) + ((Arg(0) + Arg(2) + (Arg(1) + (Arg(2) + Arg(0) + Arg(2)) + Arg(1))) + Arg(2) + Arg(1))) + Arg(1)) + Arg(0)) + Arg(0)) + Arg(1) + Arg(2)) + Arg(1) + Arg(2)) + (Arg(1) + (Arg(0) + Arg(1) + Arg(0)) + Arg(1))) + (Arg(0) + (Arg(2) + Arg(0) + Arg(0)) + Arg(0)) + (Arg(2) + Arg(0) + Arg(2)))) + (Arg(0) + Arg(0) + Arg(2)) + Arg(2)) + Arg(2)) + Arg(1)
[01.07.2016 01:19:17,465] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.98
[01.07.2016 01:19:17,466] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * (6.0 - X))))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ ((5.0 - X) - X))))) ==> (Arg(0) + (Arg(0) + (Arg(2) + (((Arg(0) + (Arg(0) + Arg(1) + Arg(2)) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(2) + ((Arg(0) + Arg(2) + (Arg(0) + Arg(1) + Arg(0))) + Arg(2) + Arg(1))) + Arg(1)) + Arg(0)) + Arg(2) + Arg(2)) + Arg(1)) + Arg(1)) + Arg(2)) + (((Arg(2) + Arg(0) + Arg(0)) + (Arg(2) + Arg(2) + Arg(2)) + (Arg(1) + Arg(1) + Arg(1))) + Arg(2) + ((Arg(0) + Arg(0) + Arg(1)) + Arg(2) + ((Arg(0) + Arg(2) + Arg(0)) + Arg(2) + (Arg(0) + Arg(2) + (Arg(0) + Arg(1) + Arg(0)))))) + Arg(2)
[01.07.2016 01:19:21,028] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.97
[01.07.2016 01:19:21,029] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * (6.0 - X))))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((X ^ 6.0) ^ (5.0 - X))))) ==> Arg(2) + (Arg(0) + ((Arg(0) + Arg(1) + Arg(0)) + (((Arg(0) + Arg(2) + Arg(1)) + Arg(1) + Arg(1)) + Arg(2) + Arg(2)) + Arg(2)) + Arg(2)) + (Arg(0) + (Arg(0) + Arg(1) + Arg(2)) + Arg(2))
[01.07.2016 01:19:21,648] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.96
[01.07.2016 01:19:21,648] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * (6.0 - X))))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - (((X * X) ^ 4.0) ^ (5.0 - (6.0 - 5.0)))))) ==> Arg(2) + Arg(0) + ((Arg(1) + Arg(1) + (Arg(1) + Arg(0) + Arg(1))) + Arg(2) + Arg(0))
[01.07.2016 01:19:22,991] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.95
[01.07.2016 01:19:22,991] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (5.0 ^ X))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * (6.0 - X))))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - (((6.0 - 6.0) ^ 4.0) ^ (5.0 - (6.0 - 5.0)))))) ==> Arg(0) + (((Arg(0) + Arg(1) + Arg(0)) + (Arg(0) + (Arg(2) + Arg(2) + Arg(2)) + Arg(1)) + ((Arg(0) + Arg(1) + Arg(0)) + (Arg(1) + Arg(0) + Arg(2)) + (Arg(2) + Arg(0) + Arg(2)))) + Arg(2) + Arg(1)) + Arg(2)
[01.07.2016 01:19:26,556] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.91
[01.07.2016 01:19:26,556] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - (((X * X) ^ 4.0) ^ (5.0 - (6.0 - 5.0)))))) ==> (Arg(0) + (Arg(0) + (Arg(2) + (Arg(1) + (Arg(2) + Arg(0) + Arg(2)) + Arg(1)) + Arg(1)) + Arg(1)) + Arg(2)) + ((Arg(1) + (Arg(2) + Arg(0) + Arg(2)) + Arg(1)) + Arg(2) + (((Arg(2) + Arg(0) + Arg(2)) + (Arg(0) + (Arg(2) + Arg(2) + (Arg(0) + Arg(1) + Arg(0))) + Arg(1)) + ((Arg(1) + (Arg(0) + Arg(1) + Arg(0)) + Arg(1)) + Arg(0) + Arg(1))) + Arg(2) + ((Arg(0) + Arg(2) + Arg(0)) + Arg(2) + ((Arg(0) + (Arg(0) + Arg(1) + Arg(1)) + Arg(2)) + (Arg(0) + Arg(0) + Arg(2)) + Arg(0))))) + Arg(2)
[01.07.2016 01:19:28,835] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.90
[01.07.2016 01:19:28,835] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - (((X * X) ^ 4.0) ^ (5.0 - (6.0 - 5.0)))))) ==> (Arg(2) + Arg(0) + Arg(2)) + (((Arg(0) + Arg(1) + Arg(0)) + (Arg(0) + (Arg(2) + Arg(2) + ((Arg(2) + Arg(2) + (Arg(2) + Arg(1) + ((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + (Arg(1) + Arg(0) + Arg(1))))) + Arg(2) + Arg(1))) + Arg(1)) + (Arg(0) + Arg(2) + Arg(1))) + Arg(2) + (Arg(1) + (Arg(0) + Arg(0) + Arg(2)) + Arg(0))) + Arg(2)
[01.07.2016 01:19:30,849] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.89
[01.07.2016 01:19:30,849] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - (((X * X) ^ 4.0) ^ (5.0 - (6.0 - 6.0)))))) ==> (Arg(2) + Arg(0) + Arg(2)) + (((Arg(0) + Arg(1) + Arg(0)) + (Arg(0) + (Arg(2) + Arg(2) + ((Arg(2) + Arg(2) + (Arg(2) + Arg(1) + ((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + (Arg(1) + Arg(0) + Arg(1))))) + Arg(2) + Arg(1))) + Arg(1)) + (Arg(0) + Arg(2) + Arg(1))) + Arg(2) + (Arg(1) + (Arg(0) + Arg(0) + Arg(2)) + Arg(0))) + Arg(2)
[01.07.2016 01:19:31,556] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.88
[01.07.2016 01:19:31,557] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((((X * X) ^ 3.0) ^ (5.0 - X)) ^ (5.0 - (6.0 - 5.0)))))) ==> ((((Arg(2) + Arg(1) + (((Arg(0) + Arg(1) + Arg(2)) + Arg(2) + Arg(0)) + Arg(2) + (Arg(1) + Arg(0) + Arg(1)))) + (((Arg(0) + Arg(1) + Arg(0)) + ((Arg(0) + Arg(1) + Arg(1)) + (Arg(0) + (Arg(2) + Arg(2) + (Arg(0) + Arg(1) + Arg(0))) + Arg(1)) + Arg(2)) + Arg(2)) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2) + ((Arg(2) + Arg(2) + ((Arg(0) + Arg(2) + Arg(2)) + Arg(1) + Arg(2))) + Arg(1) + Arg(2))) + (Arg(0) + (Arg(2) + Arg(1) + ((Arg(0) + Arg(0) + Arg(1)) + Arg(2) + (Arg(1) + Arg(0) + Arg(1)))) + Arg(1)) + Arg(2)) + (Arg(0) + Arg(1) + (Arg(2) + Arg(2) + (Arg(1) + Arg(2) + Arg(0)))) + Arg(2)
[01.07.2016 01:19:32,258] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.88
[01.07.2016 01:19:32,259] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ ((X * X) ^ 3.0))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ (((X * X) ^ 3.0) ^ (5.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((((X * X) ^ 4.0) ^ 4.0) ^ (5.0 - ((X * X) - 5.0)))))) ==> (((Arg(2) + Arg(1) + ((Arg(1) + Arg(1) + Arg(0)) + Arg(2) + (Arg(1) + Arg(1) + Arg(1)))) + ((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + (Arg(0) + (Arg(2) + ((Arg(0) + ((Arg(0) + Arg(1) + Arg(0)) + Arg(1) + ((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + ((Arg(1) + Arg(0) + Arg(1)) + Arg(0) + Arg(1)))) + Arg(1)) + Arg(1) + Arg(2)) + Arg(1)) + Arg(1))) + Arg(1)) + Arg(0) + Arg(1)) + Arg(2) + (((Arg(1) + Arg(1) + Arg(1)) + (Arg(0) + (Arg(0) + ((Arg(1) + Arg(2) + Arg(1)) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))) + Arg(2) + Arg(1))
[01.07.2016 01:19:44,961] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.65
[01.07.2016 01:19:44,961] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((((X * X) ^ 4.0) ^ 3.0) ^ (6.0 - X))))) ==> (((Arg(2) + Arg(1) + ((Arg(1) + Arg(1) + Arg(0)) + Arg(2) + (Arg(1) + Arg(1) + Arg(1)))) + ((Arg(2) + Arg(0) + Arg(2)) + Arg(2) + (Arg(0) + (Arg(2) + ((Arg(0) + ((Arg(0) + Arg(1) + Arg(0)) + Arg(1) + (((Arg(0) + Arg(2) + (Arg(0) + Arg(1) + Arg(2))) + Arg(2) + Arg(2)) + Arg(2) + (Arg(0) + ((Arg(0) + Arg(1) + Arg(2)) + Arg(0) + Arg(1)) + Arg(1)))) + Arg(1)) + Arg(1) + Arg(2)) + Arg(1)) + Arg(1))) + Arg(1)) + Arg(0) + Arg(1)) + Arg(2) + (((Arg(1) + Arg(1) + Arg(1)) + (Arg(0) + (Arg(0) + ((Arg(1) + Arg(2) + Arg(1)) + Arg(0) + Arg(1)) + Arg(1)) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0))) + Arg(2) + Arg(1))
[01.07.2016 01:19:46,588] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 68.65
[01.07.2016 01:19:46,588] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ 3.0) ^ (6.0 - X))))) ==> (((Arg(0) + Arg(1) + Arg(1)) + Arg(2) + (Arg(0) + Arg(2) + Arg(0))) + ((Arg(1) + Arg(0) + Arg(1)) + Arg(0) + Arg(1)) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0)) + Arg(2)
[01.07.2016 01:19:50,615] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.52
[01.07.2016 01:19:50,615] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ (5.0 - X))) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> ((Arg(1) + Arg(0) + Arg(0)) + (((Arg(1) + Arg(0) + Arg(1)) + Arg(0) + Arg(1)) + Arg(1) + (Arg(0) + Arg(2) + Arg(1))) + Arg(2)) + (Arg(0) + Arg(1) + Arg(0)) + Arg(2)
[01.07.2016 01:20:12,800] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.52
[01.07.2016 01:20:12,800] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - (((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ X) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 01:20:32,098] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.37
[01.07.2016 01:20:32,098] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - X)) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> Arg(1)
[01.07.2016 01:20:38,138] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.34
[01.07.2016 01:20:38,139] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - ((X * X) ^ 3.0))) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> (Arg(0) + Arg(2) + (Arg(0) + Arg(0) + Arg(1))) + Arg(2) + (Arg(0) + Arg(2) + Arg(2))
[01.07.2016 01:20:45,736] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.33
[01.07.2016 01:20:45,736] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (3.0 ^ 3.0))) ^ (X * X))) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - ((6.0 - 6.0) ^ 3.0))) ^ ((((X * X) ^ 5.0) ^ 3.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> (Arg(0) + Arg(2) + ((((Arg(1) + Arg(0) + Arg(2)) + Arg(2) + ((Arg(1) + Arg(0) + Arg(0)) + (Arg(1) + Arg(0) + Arg(2)) + Arg(1))) + Arg(2) + ((Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + (Arg(0) + Arg(1) + Arg(1)))) + Arg(0) + Arg(1))) + Arg(2) + Arg(2)
[01.07.2016 01:20:59,521] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.33
[01.07.2016 01:20:59,522] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (5.0 ^ 3.0))) ^ (X * X))) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (6.0 - ((6.0 - 6.0) ^ 3.0))) ^ ((((X * X) ^ 3.0) ^ 5.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> (Arg(2) + ((Arg(2) + Arg(1) + (Arg(1) + (Arg(1) + (Arg(1) + Arg(0) + Arg(2)) + ((Arg(1) + Arg(0) + Arg(1)) + Arg(2) + (Arg(2) + Arg(2) + Arg(0)))) + Arg(2))) + Arg(1) + Arg(2)) + (Arg(1) + Arg(0) + Arg(2))) + (Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + (Arg(1) + Arg(0) + Arg(0)) + ((Arg(1) + Arg(1) + Arg(2)) + ((Arg(2) + Arg(1) + Arg(2)) + Arg(1) + Arg(2)) + (Arg(1) + Arg(0) + Arg(0))))
[01.07.2016 01:21:06,708] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.29
[01.07.2016 01:21:06,708] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (5.0 ^ 3.0))) ^ (X * X))) - ((((((X * X) ^ 4.0) ^ 4.0) ^ (6.0 - (4.0 - (X * 5.0)))) ^ ((((X * X) ^ 3.0) ^ 5.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> (Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + ((((Arg(0) + Arg(2) + Arg(1)) + (Arg(1) + Arg(1) + Arg(2)) + ((Arg(1) + Arg(1) + Arg(1)) + Arg(2) + (Arg(1) + Arg(0) + Arg(2)))) + ((Arg(0) + Arg(0) + Arg(2)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(1) + Arg(2) + Arg(2))) + ((Arg(0) + Arg(0) + Arg(2)) + (Arg(2) + Arg(2) + Arg(1)) + (Arg(1) + Arg(2) + Arg(0)))) + (Arg(0) + Arg(1) + Arg(1)) + Arg(2))
[01.07.2016 01:21:35,551] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 67.29
[01.07.2016 01:21:35,552] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((6.0 - 6.0) ^ ((((X * X) ^ (((X * X) ^ (6.0 - X)) ^ X)) ^ ((3.0 * X) ^ (5.0 ^ 3.0))) ^ (X * X))) - ((((((X * X) ^ 4.0) ^ 4.0) ^ (6.0 - (4.0 - (X * 5.0)))) ^ ((((X * X) ^ 3.0) ^ 5.0) ^ (4.0 - (X * 6.0)))) - ((X * X) ^ (((((X * X) ^ 4.0) ^ (6.0 - X)) ^ (((X * X) ^ 3.0) ^ 5.0)) - ((((((X * X) ^ 3.0) ^ 4.0) ^ (X * X)) ^ 3.0) ^ (6.0 - X))))) ==> (Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + ((((Arg(0) + Arg(2) + Arg(1)) + (Arg(1) + Arg(1) + Arg(2)) + ((Arg(1) + Arg(1) + Arg(1)) + Arg(2) + (Arg(1) + Arg(0) + Arg(2)))) + ((Arg(0) + Arg(0) + Arg(2)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(1) + Arg(2) + Arg(2))) + ((Arg(0) + Arg(0) + Arg(2)) + (Arg(2) + Arg(2) + Arg(1)) + (Arg(1) + Arg(2) + Arg(0)))) + (Arg(0) + Arg(1) + Arg(1)) + Arg(2))
[01.07.2016 01:24:02,122] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:24:02,129] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:24:02,148] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:24:02,277] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:24:02,281] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:24:03,039] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 903.09
[01.07.2016 01:24:03,042] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X * X ==> Arg(0)
[01.07.2016 01:24:05,039] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 893.78
[01.07.2016 01:24:05,040] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - ((4.0 - 4.0) ^ (2.0 - 2.0)) ==> Arg(0)
[01.07.2016 01:24:06,329] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 878.18
[01.07.2016 01:24:06,332] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - ((X ^ 10.0) ^ (X ^ 4.0)) ==> Arg(0)
[01.07.2016 01:24:08,376] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 878.15
[01.07.2016 01:24:08,376] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (((X * X) - ((X * X) ^ (X ^ 4.0))) ^ 4.0) ==> Arg(0) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2)
[01.07.2016 01:24:09,708] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 876.69
[01.07.2016 01:24:09,709] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - ((X ^ 10.0) ^ (((X * X) ^ (X - X)) - ((X ^ 4.0) ^ (X ^ 4.0)))) ==> Arg(0)
[01.07.2016 01:24:11,348] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 872.81
[01.07.2016 01:24:11,351] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - ((((X * X) - (((X * X) - ((X * X) - X)) ^ 4.0)) - ((X * X) ^ (X ^ 4.0))) ^ 4.0) ==> (((Arg(2) + Arg(2) + Arg(0)) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2)) + Arg(2) + Arg(0)) + (Arg(2) + Arg(0) + Arg(1)) + Arg(2)
[01.07.2016 01:24:12,450] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 872.14
[01.07.2016 01:24:12,450] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (((X * X) - (((X * X) - (X ^ 3.0)) ^ (X * X))) ^ (5.0 - 3.0)) ==> Arg(0)
[01.07.2016 01:24:14,582] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 869.96
[01.07.2016 01:24:14,582] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (((X * X) - (((X * X) ^ (((4.0 * 4.0) ^ (X * X)) - ((X * X) ^ (X * X)))) ^ (X * X))) ^ (5.0 - 3.0)) ==> Arg(0)
[01.07.2016 01:24:15,150] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 869.08
[01.07.2016 01:24:15,151] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - ((((X * X) ^ 10.0) ^ (X * X)) ^ (X * X)) ==> (Arg(1) + Arg(0) + Arg(0)) + (Arg(2) + Arg(0) + (Arg(2) + Arg(1) + Arg(1))) + (Arg(1) + Arg(0) + Arg(0))
[01.07.2016 01:24:58,190] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:24:58,205] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:24:58,243] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:24:58,353] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:24:58,357] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:24:58,441] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.95
[01.07.2016 01:24:58,444] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * (3.0 ^ X)) - (X * 3.0) ==> Arg(2)
[01.07.2016 01:24:58,927] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.87
[01.07.2016 01:24:58,927] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) - X) * ((X * X) - X)) ^ (4.0 ^ X)) - X ==> Arg(2)
[01.07.2016 01:24:59,041] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.84
[01.07.2016 01:24:59,042] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((((X - X) * X) - X) * ((X * X) - X)) ^ (4.0 ^ X)) - X ==> Arg(2)
[01.07.2016 01:24:59,228] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.78
[01.07.2016 01:24:59,229] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ 6.0) ^ (6.0 ^ (X * 6.0)) ==> Arg(2)
[01.07.2016 01:24:59,302] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.54
[01.07.2016 01:24:59,302] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) ^ (6.0 ^ (X * 6.0)) ==> Arg(2)
[01.07.2016 01:24:59,636] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.54
[01.07.2016 01:24:59,639] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) - X) * ((2.0 - 2.0) - X)) ^ (6.0 ^ (X * 6.0)) ==> Arg(1) + Arg(1) + Arg(2)
[01.07.2016 01:24:59,686] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.54
[01.07.2016 01:24:59,686] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) - X) * ((X * X) - X)) ^ (6.0 ^ (X * 6.0)) ==> Arg(1) + Arg(1) + Arg(2)
[01.07.2016 01:25:00,000] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.54
[01.07.2016 01:25:00,000] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) - X) * (((X ^ 4.0) * 4.0) - X)) ^ (6.0 ^ (X * 6.0)) ==> Arg(0) + Arg(1) + Arg(2)
[01.07.2016 01:25:00,029] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.47
[01.07.2016 01:25:00,030] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) - X) * ((X * X) - X)) ^ (6.0 ^ (X * 6.0))) ^ 4.0 ==> Arg(2) + Arg(0) + Arg(2)
[01.07.2016 01:25:00,129] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.34
[01.07.2016 01:25:00,129] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (6.0 ^ (X * 6.0))) ^ 4.0) ^ (6.0 ^ (X * 6.0)) ==> (Arg(1) + Arg(1) + Arg(0)) + Arg(2) + (Arg(0) + Arg(0) + Arg(1))
[01.07.2016 01:25:00,226] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.16
[01.07.2016 01:25:00,226] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (3.0 ^ (X * 6.0))) ^ (6.0 ^ (X * 6.0))) ^ 4.0 ==> Arg(0) + Arg(2) + Arg(1)
[01.07.2016 01:25:00,328] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.11
[01.07.2016 01:25:00,328] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ ((3.0 ^ 3.0) ^ (X * 6.0))) ^ (3.0 ^ (3.0 ^ (5.0 ^ X))) ==> Arg(0) + Arg(2) + (((Arg(0) + Arg(2) + Arg(1)) + (Arg(0) + Arg(0) + (Arg(0) + Arg(2) + Arg(1))) + Arg(1)) + Arg(2) + Arg(0))
[01.07.2016 01:25:00,467] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.09
[01.07.2016 01:25:00,467] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) ^ (5.0 ^ (X * 6.0))) ^ (6.0 ^ (X * 6.0))) ^ 4.0) ^ 4.0 ==> Arg(2) + Arg(0) + Arg(2)
[01.07.2016 01:25:00,719] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.06
[01.07.2016 01:25:00,720] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ (5.0 ^ (X * 6.0))) ^ (6.0 ^ (X * 6.0))) ^ 4.0 ==> Arg(1) + (((Arg(1) + Arg(2) + Arg(1)) + Arg(2) + (Arg(0) + Arg(2) + Arg(2))) + Arg(0) + Arg(2)) + Arg(1)
[01.07.2016 01:25:00,786] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.05
[01.07.2016 01:25:00,787] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) ^ (5.0 ^ (X * 6.0))) ^ (6.0 ^ (X * 6.0))) ^ 3.0) ^ 4.0 ==> Arg(0) + Arg(2) + Arg(1)
[01.07.2016 01:25:00,892] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.05
[01.07.2016 01:25:00,893] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) ^ (5.0 ^ (X * 6.0))) ^ (6.0 ^ (X * 6.0))) ^ 3.0) ^ 3.0 ==> Arg(1)
[01.07.2016 01:25:01,033] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 16.03
[01.07.2016 01:25:01,033] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X * X) ^ (6.0 ^ (X * 6.0))) ^ 3.0) ^ (6.0 ^ (X * 6.0))) ^ 4.0 ==> Arg(0)
[01.07.2016 01:25:01,425] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.97
[01.07.2016 01:25:01,426] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ ((3.0 * 3.0) ^ 3.0)) ^ ((5.0 ^ (X * 6.0)) ^ 3.0)) ^ 4.0 ==> Arg(2) + Arg(1) + Arg(0)
[01.07.2016 01:25:01,929] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.97
[01.07.2016 01:25:01,930] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ ((3.0 * 3.0) ^ 3.0)) ^ ((6.0 ^ (X * 6.0)) ^ 3.0)) ^ 4.0 ==> (Arg(1) + Arg(2) + Arg(0)) + Arg(2) + Arg(0)
[01.07.2016 01:25:02,012] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.97
[01.07.2016 01:25:02,013] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (4.0 * 4.0)) ^ ((5.0 ^ (X * 6.0)) ^ 3.0)) ^ 4.0 ==> Arg(1) + Arg(0) + Arg(1)
[01.07.2016 01:25:02,418] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.96
[01.07.2016 01:25:02,419] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X ^ ((3.0 * 5.0) ^ 3.0)) ^ ((6.0 ^ (X * 6.0)) ^ 3.0)) ^ 9.0 ==> (Arg(0) + Arg(0) + (Arg(2) + Arg(2) + (Arg(0) + Arg(1) + Arg(2)))) + Arg(2) + Arg(0)
[01.07.2016 01:25:02,621] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.96
[01.07.2016 01:25:02,621] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ (4.0 * 4.0)) ^ ((6.0 ^ (X * 6.0)) ^ 3.0)) ^ 4.0) ^ 3.0 ==> (Arg(1) + Arg(2) + Arg(0)) + Arg(2) + Arg(0)
[01.07.2016 01:25:04,895] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.96
[01.07.2016 01:25:04,895] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X ^ 4.0) ^ ((6.0 ^ (X * 6.0)) ^ 3.0)) ^ 3.0) ^ 4.0) ^ 4.0 ==> (Arg(2) + Arg(2) + Arg(1)) + (Arg(2) + Arg(1) + Arg(1)) + (Arg(2) + Arg(1) + Arg(1))
[01.07.2016 01:25:05,606] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.96
[01.07.2016 01:25:05,606] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X ^ (2.0 * 4.0)) ^ ((4.0 ^ (X * 5.0)) ^ 5.0)) ^ 3.0) ^ 4.0) ^ 4.0 ==> Arg(1)
[01.07.2016 01:25:05,643] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.92
[01.07.2016 01:25:05,644] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((X ^ 4.0) ^ ((4.0 ^ (X * 6.0)) ^ 3.0)) ^ 3.0) ^ 4.0) - (X * X) ==> (Arg(1) + Arg(0) + Arg(1)) + (Arg(1) + Arg(1) + Arg(2)) + (Arg(1) + Arg(1) + Arg(1))
[01.07.2016 01:25:05,734] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.87
[01.07.2016 01:25:05,734] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ (10.0 * 4.0)) ^ ((5.0 ^ (X * 6.0)) ^ 3.0)) ^ 4.0) - (X * X) ==> (Arg(1) + Arg(0) + Arg(1)) + (Arg(1) + Arg(1) + Arg(2)) + (Arg(1) + Arg(1) + Arg(1))
[01.07.2016 01:25:06,505] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.80
[01.07.2016 01:25:06,506] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ ((5.0 ^ ((X * 4.0) ^ 3.0)) ^ 4.0)) ^ 4.0) - (X * X) ==> Arg(1)
[01.07.2016 01:25:06,924] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.80
[01.07.2016 01:25:06,925] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ ((5.0 ^ ((X * 4.0) ^ 3.0)) ^ 4.0)) ^ 4.0) - (X * X) ==> Arg(1)
[01.07.2016 01:25:07,192] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.80
[01.07.2016 01:25:07,193] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ ((5.0 ^ ((X * 5.0) ^ 3.0)) ^ 4.0)) ^ 4.0) - (X * X) ==> Arg(0) + Arg(0) + (Arg(0) + Arg(0) + Arg(0))
[01.07.2016 01:25:07,249] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.79
[01.07.2016 01:25:07,249] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X ^ 4.0) ^ ((4.0 ^ ((X * 5.0) ^ 3.0)) ^ 4.0)) ^ 4.0) - (X * X) ==> Arg(1)
[01.07.2016 01:25:07,345] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.79
[01.07.2016 01:25:07,346] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (5.0 ^ (((X * 4.0) ^ 5.0) ^ 5.0))) ^ 4.0) - (X * X) ==> Arg(0) + ((Arg(0) + Arg(0) + Arg(0)) + Arg(2) + Arg(1)) + Arg(0)
[01.07.2016 01:25:07,474] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.79
[01.07.2016 01:25:07,475] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (5.0 ^ (((X * 6.0) ^ 3.0) ^ 5.0))) ^ 4.0) - (X * X) ==> (Arg(1) + Arg(1) + Arg(1)) + Arg(2) + (Arg(0) + Arg(0) + (Arg(1) + Arg(1) + Arg(2)))
[01.07.2016 01:25:07,506] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.79
[01.07.2016 01:25:07,506] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (5.0 ^ (((X * 5.0) ^ 3.0) ^ 5.0))) ^ 4.0) - (X * X) ==> Arg(0) + ((Arg(0) + Arg(0) + Arg(0)) + Arg(2) + Arg(1)) + Arg(0)
[01.07.2016 01:25:07,686] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.79
[01.07.2016 01:25:07,687] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (5.0 ^ (((X * 5.0) ^ 5.0) ^ 5.0))) ^ 4.0) - (X * X) ==> (Arg(2) + Arg(2) + Arg(0)) + Arg(1) + Arg(1)
[01.07.2016 01:25:07,719] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.79
[01.07.2016 01:25:07,719] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) ^ (5.0 ^ (((X * 5.0) ^ 5.0) ^ 5.0))) ^ 3.0) - (X * X) ==> ((Arg(1) + Arg(1) + Arg(1)) + (Arg(2) + Arg(0) + Arg(0)) + (Arg(0) + Arg(0) + Arg(0))) + Arg(2) + (Arg(1) + Arg(2) + Arg(1))
[01.07.2016 01:25:07,756] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.78
[01.07.2016 01:25:07,757] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (5.0 ^ (((X * 4.0) ^ 5.0) ^ 5.0))) - (X * X) ==> Arg(1) + Arg(1) + Arg(2)
[01.07.2016 01:25:07,975] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.78
[01.07.2016 01:25:07,975] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X * X) ^ (3.0 ^ ((((X * 5.0) ^ 5.0) ^ 5.0) ^ 5.0))) - (X * X) ==> Arg(1)
[01.07.2016 01:25:08,235] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.35
[01.07.2016 01:25:08,236] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ (3.0 ^ ((((X * 5.0) ^ 5.0) ^ 5.0) ^ 5.0))) - (X * X) ==> Arg(2) + Arg(1) + (Arg(0) + Arg(0) + Arg(2))
[01.07.2016 01:25:22,589] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 15.35
[01.07.2016 01:25:22,590] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ (3.0 ^ ((((X * 5.0) ^ 5.0) ^ 5.0) ^ 5.0))) - (X * X) ==> Arg(2) + Arg(1) + (Arg(0) + Arg(0) + Arg(2))
[01.07.2016 01:26:13,470] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:26:13,477] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:26:13,497] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:26:13,635] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:26:13,639] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:26:13,744] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.32
[01.07.2016 01:26:13,747] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 4.0) ^ 4.0 ==> Arg(0)
[01.07.2016 01:26:13,853] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.06
[01.07.2016 01:26:13,854] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X ^ 9.0) - X ==> Arg(0)
[01.07.2016 01:26:14,596] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.06
[01.07.2016 01:26:14,597] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X - (X - ((X ^ 9.0) - X)) ==> Arg(1)
[01.07.2016 01:26:15,448] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.98
[01.07.2016 01:26:15,449] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((X - (X ^ 8.0)) - X) - X ==> Arg(0)
[01.07.2016 01:26:15,560] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.98
[01.07.2016 01:26:15,561] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((4.0 - 4.0) - (X ^ 8.0)) - X ==> Arg(2)
[01.07.2016 01:26:17,603] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.96
[01.07.2016 01:26:17,605] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (2.0 ^ (X - X)) ==> Arg(2)
[01.07.2016 01:26:17,711] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.56
[01.07.2016 01:26:17,712] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (2.0 ^ (X ^ 7.0)) ==> Arg(2)
[01.07.2016 01:26:17,725] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.52
[01.07.2016 01:26:17,726] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (4.0 ^ (X ^ 7.0)) ==> Arg(2)
[01.07.2016 01:26:18,023] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.48
[01.07.2016 01:26:18,023] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (2.0 ^ (X ^ 5.0)) ==> Arg(2)
[01.07.2016 01:26:18,080] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.42
[01.07.2016 01:26:18,080] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (3.0 ^ (X ^ 5.0)) ==> Arg(2)
[01.07.2016 01:26:18,666] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.42
[01.07.2016 01:26:18,666] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (2.0 ^ (X ^ 3.0)) ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 01:26:27,460] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.42
[01.07.2016 01:26:27,461] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) - (2.0 ^ (X ^ 3.0)) ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 01:27:27,694] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:27:27,710] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:27:27,903] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:27:28,031] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:27:28,036] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:27:28,155] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.78
[01.07.2016 01:27:28,157] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((sine X) / (6.0 / X)) - (sine (8.0 / X)) ==> Arg(2)
[01.07.2016 01:27:28,217] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.01
[01.07.2016 01:27:28,218] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (X * 7.0) ==> (Arg(1) + Arg(1) + Arg(2)) + (Arg(2) + Arg(2) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0))
[01.07.2016 01:27:28,332] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.96
[01.07.2016 01:27:28,333] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((sine (4.0 * X)) - (7.0 * 7.0 * X)) ==> Arg(2) + Arg(1) + Arg(1)
[01.07.2016 01:27:28,371] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.88
[01.07.2016 01:27:28,372] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (X * (7.0 - (sine (9.0 ^ X)))) ==> (Arg(0) + Arg(2) + Arg(0)) + (Arg(0) + Arg(2) + Arg(1)) + (Arg(2) + Arg(2) + Arg(1))
[01.07.2016 01:27:28,494] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.35
[01.07.2016 01:27:28,494] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((5.0 * 5.0) * (sine (Exp(X))) * (sine (4.0 * X))) ==> Arg(1)
[01.07.2016 01:27:28,520] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.02
[01.07.2016 01:27:28,523] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((3.0 * 3.0 * X) * 6.0 * 6.0)) ==> Arg(0) + Arg(1) + Arg(0)
[01.07.2016 01:27:28,561] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.41
[01.07.2016 01:27:28,561] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (7.0 / (sine ((sine 3.0) / X))) ==> (Arg(0) + Arg(1) + Arg(0)) + (Arg(1) + Arg(1) + Arg(0)) + (Arg(0) + Arg(1) + Arg(0))
[01.07.2016 01:27:28,936] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.85
[01.07.2016 01:27:28,936] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (7.0 / (sine (7.0 / (sine ((sine 3.0) / X))))) ==> (Arg(1) + Arg(1) + Arg(0)) + (Arg(1) + Arg(0) + Arg(2)) + Arg(0)
[01.07.2016 01:27:30,158] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.43
[01.07.2016 01:27:30,159] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (7.0 / (sine (7.0 / (sine (7.0 * X * 7.0))))) ==> Arg(2) + Arg(2) + Arg(0)
[01.07.2016 01:27:40,857] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.11
[01.07.2016 01:27:40,858] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (7.0 / (sine ((7.0 * X * 7.0) / (sine 3.0)))) ==> Arg(1)
[01.07.2016 01:27:42,751] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.75
[01.07.2016 01:27:42,751] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (10.0 / (sine (sine (sine ((7.0 * X * 7.0) / (sine 3.0)))))) ==> Arg(0)
[01.07.2016 01:27:44,132] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.75
[01.07.2016 01:27:44,132] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (10.0 / (sine (sine (sine ((7.0 * X * 7.0) / (sine 3.0)))))) ==> Arg(0)
[01.07.2016 01:29:07,283] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:29:07,290] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:29:07,307] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:29:07,436] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:29:07,441] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:29:07,538] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.45
[01.07.2016 01:29:07,541] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (2.0 / X) ==> (Arg(2) + Arg(0) + Arg(2)) + Arg(1) + Arg(0)
[01.07.2016 01:29:07,648] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.38
[01.07.2016 01:29:07,649] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X * ((sine (2.0 / X)) / (sine (sine X))) ==> Arg(0)
[01.07.2016 01:29:07,899] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.36
[01.07.2016 01:29:07,900] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((sine 6.0) - ((6.0 * X) - 6.0)) ==> Arg(1) + Arg(0) + Arg(2)
[01.07.2016 01:29:08,090] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.17
[01.07.2016 01:29:08,091] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((X * 9.0) - (9.0 / 8.0)) - X) ==> Arg(0)
[01.07.2016 01:29:08,201] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.75
[01.07.2016 01:29:08,202] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((Exp((sine (sine (X * X * 2.0))))) * 5.0)) ==> Arg(0)
[01.07.2016 01:29:08,417] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.63
[01.07.2016 01:29:08,420] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((Exp((sine (sine (sine (5.0 * X * X)))))) * 4.0)) ==> Arg(0)
[01.07.2016 01:29:08,571] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.26
[01.07.2016 01:29:08,572] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((Exp((sine (sine (sine (5.0 * X * X)))))) * 4.0) ==> Arg(1) + (Arg(1) + Arg(0) + Arg(1)) + Arg(2)
[01.07.2016 01:29:08,640] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.88
[01.07.2016 01:29:08,641] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((X * 7.0) - 8.0) ==> Arg(2)
[01.07.2016 01:29:08,759] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.81
[01.07.2016 01:29:08,760] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (5.0 / (Exp((sine (sine (5.0 * X * X)))))) ==> Arg(2)
[01.07.2016 01:29:08,790] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.66
[01.07.2016 01:29:08,790] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((sine (sine (sine (5.0 * X * X)))) * 4.0) - 8.0) ==> Arg(1) + Arg(1) + Arg(1)
[01.07.2016 01:29:08,918] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.33
[01.07.2016 01:29:08,918] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((sine (5.0 * X * X)) * 4.0) - 8.0) ==> Arg(2) + Arg(0) + Arg(1)
[01.07.2016 01:29:09,537] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.07
[01.07.2016 01:29:09,538] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((sine (sine (sine (5.0 * X * X)))) * 5.0) - 8.0) ==> (Arg(1) + Arg(1) + Arg(2)) + (Arg(2) + Arg(2) + Arg(0)) + (Arg(1) + Arg(0) + Arg(0))
[01.07.2016 01:29:09,833] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.90
[01.07.2016 01:29:09,833] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((sine ((sine (5.0 * X * X)) * 2.0)) * 3.0) - 8.0) ==> Arg(1) + Arg(2) + Arg(1)
[01.07.2016 01:29:12,468] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.63
[01.07.2016 01:29:12,469] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((sine (X * (5.0 * X * X) * 9.0)) * 5.0) - 8.0) ==> Arg(2)
[01.07.2016 01:29:13,748] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.38
[01.07.2016 01:29:13,748] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (5.0 - ((sine (X * (5.0 * X * X) * 9.0)) * 5.0)) ==> Arg(1)
[01.07.2016 01:29:14,182] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.38
[01.07.2016 01:29:14,183] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (5.0 - ((sine (X * (X * X * 5.0) * 9.0)) * 5.0)) ==> Arg(2) + (Arg(1) + Arg(2) + Arg(2)) + Arg(1)
[01.07.2016 01:29:23,403] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.27
[01.07.2016 01:29:23,404] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (5.0 - (X * ((X * X * 8.0) * 4.0) * 6.0)) ==> Arg(2)
[01.07.2016 01:29:23,443] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.27
[01.07.2016 01:29:23,443] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (5.0 - ((X * (X * 6.0 * X) * 8.0) * 4.0)) ==> Arg(2) + Arg(1) + Arg(1)
[01.07.2016 01:29:47,564] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.18
[01.07.2016 01:29:47,565] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((X * (X * 6.0 * X) * 8.0) * 4.0) - 8.0) ==> Arg(1) + Arg(2) + Arg(2)
[01.07.2016 01:29:51,558] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.17
[01.07.2016 01:29:51,558] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((X * (sine (X * X * 7.0)) * 8.0) * 4.0) - 8.0) ==> Arg(1) + (Arg(2) + (Arg(2) + Arg(1) + (Arg(2) + Arg(2) + Arg(0))) + Arg(1)) + Arg(0)
[01.07.2016 01:30:04,278] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.13
[01.07.2016 01:30:04,279] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((X * (sine (4.0 / X)) * 8.0) - 8.0) ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 01:30:06,178] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 2.77
[01.07.2016 01:30:06,187] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((X * (sine (4.0 / (sine (4.0 / X)))) * 8.0) - 8.0) ==> Arg(0)
[01.07.2016 01:30:17,211] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 2.14
[01.07.2016 01:30:17,211] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (2.0 / (sine ((X * (sine (4.0 / X)) * 7.0) - 8.0))) ==> Arg(2)
[01.07.2016 01:31:34,485] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 2.14
[01.07.2016 01:31:34,485] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (2.0 / (sine ((X * (sine (4.0 / X)) * 7.0) - 8.0))) ==> Arg(2)
[01.07.2016 01:33:15,042] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:33:15,080] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:33:15,119] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:33:15,267] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:33:15,271] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:33:15,440] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.92
[01.07.2016 01:33:15,456] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (7.0 * X * 7.0) ==> (Arg(0) + Arg(2) + Arg(1)) + (Arg(0) + Arg(1) + Arg(1)) + (Arg(2) + Arg(2) + Arg(1))
[01.07.2016 01:33:15,495] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 7.18
[01.07.2016 01:33:15,495] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((4.0 * 4.0) * (4.0 ^ 4.0) * (X ^ 4.0)) ==> Arg(1)
[01.07.2016 01:33:15,636] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.59
[01.07.2016 01:33:15,636] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (6.0 / X) ==> Arg(1) + Arg(0) + Arg(1)
[01.07.2016 01:33:15,826] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.13
[01.07.2016 01:33:15,827] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((4.0 * 4.0) * (4.0 ^ 4.0) * (Exp(X))) ==> Arg(0) + Arg(0) + Arg(1)
[01.07.2016 01:33:15,964] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.12
[01.07.2016 01:33:15,965] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (6.0 / (sine (sine (6.0 / X)))) ==> Arg(0)
[01.07.2016 01:33:16,217] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.96
[01.07.2016 01:33:16,220] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (3.0 * (sine (sine (6.0 / (sine (sine (6.0 / X))))))) ==> Arg(1) + (Arg(0) + Arg(0) + (Arg(2) + Arg(1) + Arg(0))) + Arg(1)
[01.07.2016 01:33:17,262] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.65
[01.07.2016 01:33:17,263] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (3.0 * (sine (sine (sine (6.0 / (sine (sine (6.0 / X)))))))) ==> Arg(2)
[01.07.2016 01:33:18,255] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.41
[01.07.2016 01:33:18,256] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((Exp(X)) / (sine (6.0 / X))) ==> Arg(2)
[01.07.2016 01:33:18,552] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.99
[01.07.2016 01:33:18,552] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((Exp(X)) / (sine (sine ((Exp(X)) / (sine (6.0 / X)))))) ==> (Arg(1) + Arg(1) + Arg(0)) + Arg(2) + Arg(2)
[01.07.2016 01:33:20,122] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.91
[01.07.2016 01:33:20,122] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((Exp(X)) / (sine (sine ((6.0 / X) - X)))) ==> Arg(2) + Arg(1) + Arg(2)
[01.07.2016 01:33:20,494] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.81
[01.07.2016 01:33:20,495] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((7.0 ^ X) / (sine (6.0 / X))) ==> (Arg(2) + Arg(1) + Arg(2)) + Arg(0) + Arg(2)
[01.07.2016 01:33:20,852] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 4.42
[01.07.2016 01:33:20,852] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((6.0 ^ X) / (sine (sine (6.0 / X)))) ==> Arg(2)
[01.07.2016 01:34:28,424] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.99
[01.07.2016 01:34:28,424] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((6.0 ^ X) / (sine (sine (6.0 / X)))) - (sine 3.0)) ==> Arg(2)
[01.07.2016 01:35:43,773] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 3.99
[01.07.2016 01:35:43,774] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((6.0 ^ X) / (sine (sine (6.0 / X)))) - (sine 3.0)) ==> Arg(2)
[01.07.2016 01:37:51,135] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:37:51,158] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:37:51,195] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:37:51,444] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:37:51,449] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:37:51,610] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.13
[01.07.2016 01:37:51,614] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((X - 2.0) * (X / 2.0) * (sine X)) ==> Arg(2) + (Arg(2) + Arg(2) + Arg(2)) + (Arg(0) + Arg(0) + Arg(1))
[01.07.2016 01:37:51,752] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.11
[01.07.2016 01:37:51,753] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X - 2.0) * (X / 2.0) * (sine X) ==> (Arg(2) + Arg(2) + Arg(2)) + (Arg(1) + Arg(0) + Arg(2)) + (Arg(1) + Arg(1) + Arg(1))
[01.07.2016 01:37:51,791] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.95
[01.07.2016 01:37:51,792] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0) ==> Arg(1)
[01.07.2016 01:37:51,862] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 6.22
[01.07.2016 01:37:51,863] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) ==> Arg(2)
[01.07.2016 01:37:51,967] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.99
[01.07.2016 01:37:51,968] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0))) ==> Arg(0)
[01.07.2016 01:37:52,004] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.91
[01.07.2016 01:37:52,007] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)))) ==> Arg(2)
[01.07.2016 01:37:55,710] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.90
[01.07.2016 01:37:55,711] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)))) * (sine 8.0)) ==> Arg(1) + Arg(1) + Arg(1)
[01.07.2016 01:37:56,757] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.90
[01.07.2016 01:37:56,757] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine ((sine (sine ((sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) * (sine 8.0)))) * (sine 8.0)) ==> Arg(1)
[01.07.2016 01:37:57,394] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.90
[01.07.2016 01:37:57,394] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) * (sine (Exp(6.0)))))) ==> Arg(0) + Arg(2) + (Arg(1) + (Arg(0) + Arg(1) + ((Arg(1) + Arg(1) + Arg(2)) + Arg(1) + Arg(0))) + (Arg(0) + Arg(2) + Arg(2)))
[01.07.2016 01:37:57,998] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.87
[01.07.2016 01:37:57,999] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) * (sine (Exp((X * X))))))) ==> Arg(1) + Arg(1) + (Arg(0) + Arg(2) + Arg(2))
[01.07.2016 01:37:58,201] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.71
[01.07.2016 01:37:58,201] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) * (sine (Exp((X * X)))))) ==> Arg(0) + Arg(2) + (Arg(1) + (Arg(1) + Arg(0) + Arg(1)) + ((Arg(1) + Arg(0) + (Arg(0) + Arg(1) + Arg(0))) + Arg(0) + Arg(0)))
[01.07.2016 01:37:58,612] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.70
[01.07.2016 01:37:58,613] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) * (sine (Exp((X * (sine X))))))) ==> Arg(2) + ((Arg(2) + (Arg(0) + Arg(2) + Arg(1)) + Arg(2)) + Arg(2) + Arg(0)) + Arg(2)
[01.07.2016 01:37:59,550] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.64
[01.07.2016 01:37:59,550] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)) * (Exp((X * X)))))) ==> (((Arg(0) + Arg(2) + Arg(0)) + Arg(1) + Arg(2)) + Arg(2) + Arg(2)) + Arg(2) + Arg(0)
[01.07.2016 01:37:59,886] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.59
[01.07.2016 01:37:59,886] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0))) * (Exp((X * X)))))) ==> Arg(0)
[01.07.2016 01:37:59,938] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.56
[01.07.2016 01:37:59,939] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine ((sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)))) * (Exp((X * X))))) ==> Arg(1)
[01.07.2016 01:38:04,957] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.55
[01.07.2016 01:38:04,958] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)))) / (Exp((sine X)))))) ==> Arg(2) + Arg(0) + Arg(0)
[01.07.2016 01:38:05,100] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.53
[01.07.2016 01:38:05,100] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0)))) / (Exp(X))))) ==> (Arg(2) + Arg(0) + Arg(0)) + Arg(0) + Arg(0)
[01.07.2016 01:38:05,339] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 5.52
[01.07.2016 01:38:05,339] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (sine (sine ((sine (sine (sine (sine ((X * (Exp(6.0)) * (6.0 ^ X)) * 6.0))))) / (Exp(X))))) ==> Arg(2) + (((Arg(1) + Arg(1) + Arg(0)) + Arg(2) + Arg(2)) + Arg(0) + Arg(2)) + (Arg(2) + (Arg(2) + Arg(2) + Arg(0)) + Arg(2))
[01.07.2016 01:43:20,359] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:43:20,446] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:43:20,538] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:43:20,697] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:43:20,702] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:43:21,254] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.53
[01.07.2016 01:43:21,257] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (sine 9.0) / (X * 9.0 * 9.0) ==> Arg(2)
[01.07.2016 01:43:21,775] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 9.11
[01.07.2016 01:43:21,776] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (sine (X * 7.0 * X)) ^ 7.0 ==> Arg(2)
[01.07.2016 01:43:23,521] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 8.07
[01.07.2016 01:43:23,521] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: sine (((4.0 ^ X) - (X * X)) * ((sine X) * (4.0 * 4.0 * X)) * (sine (sine X))) ==> Arg(0)
[01.07.2016 01:44:13,168] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:44:13,207] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:44:13,226] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:44:13,354] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:44:13,359] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:44:15,472] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.28
[01.07.2016 01:44:15,475] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) / X ==> Arg(1)
[01.07.2016 01:44:16,287] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.28
[01.07.2016 01:44:16,336] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (3.0 * X) / 3.0 ==> Arg(0)
[01.07.2016 01:44:19,973] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.28
[01.07.2016 01:44:19,974] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (3.0 * ((X * X) / X)) / 3.0 ==> Arg(0)
[01.07.2016 01:44:38,768] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.28
[01.07.2016 01:44:38,769] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((3.0 * ((X * X) / X)) / 3.0) * ((X * X) / X)) / X ==> Arg(0) + Arg(2) + (Arg(2) + Arg(2) + Arg(2))
[01.07.2016 01:44:39,266] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.28
[01.07.2016 01:44:39,266] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) / X) * ((((3.0 * ((X * X) / X)) / 3.0) * ((X * ((X * X) / X)) / X)) / X)) / X ==> Arg(2) + Arg(0) + ((Arg(2) + Arg(0) + Arg(0)) + Arg(1) + (Arg(2) + Arg(0) + Arg(0)))
[01.07.2016 01:47:52,004] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:47:52,012] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:47:52,032] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:47:52,142] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:47:52,146] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:47:54,229] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.92
[01.07.2016 01:47:54,233] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * 5.0 * X) / (X * 5.0) ==> (Arg(2) + Arg(0) + Arg(2)) + (Arg(2) + Arg(0) + Arg(1)) + (Arg(2) + Arg(2) + Arg(2))
[01.07.2016 01:47:58,545] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 23.92
[01.07.2016 01:47:58,546] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X * 3.0) / (X * 3.0) ==> (Arg(0) + Arg(2) + Arg(2)) + (Arg(1) + Arg(1) + Arg(1)) + (Arg(1) + Arg(0) + Arg(1))
[01.07.2016 01:55:56,490] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:55:56,513] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:55:56,533] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:55:56,689] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:55:56,694] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:55:56,696] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.6 MB
[01.07.2016 01:55:59,846] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.02
[01.07.2016 01:55:59,847] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: X ==> Arg(1)
[01.07.2016 01:56:00,977] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 25.02
[01.07.2016 01:56:00,980] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((((X * 7.0) / (ADF1(7.0,X,X))) - ((sine 7.0) * (X - X))),(ADF1(7.0,X,X)),(sine 7.0)) ==> Arg(0)
[01.07.2016 01:56:08,085] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.53
[01.07.2016 01:56:08,087] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((((X * 7.0) / (ADF1(7.0,X,X))) - ((sine 6.0) * (sine ((sine 4.0) * (4.0 * X))))),(ADF1(7.0,X,X)),(sine 7.0)) ==> Arg(0)
[01.07.2016 01:56:24,862] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.53
[01.07.2016 01:56:24,862] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((((X * 7.0) / (ADF1(7.0,X,X))) - ((sine 6.0) * (sine ((sine 4.0) * (4.0 * ((X * 8.0 * X) / (X * 8.0))))))),(ADF1(7.0,X,X)),(sine 7.0)) ==> Arg(0)
[01.07.2016 01:56:24,862] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 24.8 MB
[01.07.2016 01:56:51,833] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:56:51,840] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:56:51,861] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:56:51,982] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:56:51,987] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:56:51,989] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.3 MB
[01.07.2016 01:56:54,097] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.24
[01.07.2016 01:56:54,101] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ADF1((3.0 - (3.0 - X)),X,(2.0 * 2.0)) ==> Arg(0)
[01.07.2016 01:56:57,071] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 24.00
[01.07.2016 01:56:57,072] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (sine 2.0) * (ADF1(X,5.0,X)) ==> Arg(2)
[01.07.2016 01:57:08,830] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 35.1 MB
[01.07.2016 01:57:28,167] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:57:28,174] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:57:28,194] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:57:28,305] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:57:28,309] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:57:28,311] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.3 MB
[01.07.2016 01:57:36,898] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.07.2016 01:57:36,905] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 61.5 MB
[01.07.2016 01:57:36,926] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.07.2016 01:57:37,039] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population somtheing:  61.5 MB
[01.07.2016 01:57:37,044] [main] INFO  org.jgap.gp.impl.GPGenotype  - Your configuration does not contain unused commands, this is good
[01.07.2016 01:57:37,047] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 52.3 MB
[01.07.2016 01:57:39,221] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:39,225] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * X) / X ==> Arg(0) + ((Arg(2) + Arg(0) + Arg(2)) + (Arg(2) + Arg(0) + Arg(2)) + (Arg(1) + Arg(2) + Arg(1))) + Arg(1)
[01.07.2016 01:57:43,274] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:43,274] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) / X) * ((X * X) / X)) / X ==> (Arg(1) + Arg(2) + Arg(2)) + Arg(0) + Arg(2)
[01.07.2016 01:57:46,233] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:46,233] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) * X) / X) / X ==> Arg(1) + Arg(0) + Arg(2)
[01.07.2016 01:57:47,508] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:47,508] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (X * 7.0) / (ADF1(7.0,7.0,7.0)) ==> Arg(0)
[01.07.2016 01:57:49,967] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:49,967] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((X * X) / X) * ((((X * 7.0) / (ADF1(7.0,7.0,7.0))) * ((X * X) / X)) / X)) / X ==> Arg(2)
[01.07.2016 01:57:50,443] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 18.3 MB
[01.07.2016 01:57:51,878] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:51,879] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((X * X) * (X * X)) / X) / X) * X) / X) / X ==> Arg(2) + ((Arg(1) + Arg(2) + Arg(0)) + (Arg(1) + (Arg(1) + Arg(1) + Arg(2)) + Arg(0)) + Arg(0)) + Arg(1)
[01.07.2016 01:57:53,094] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:53,095] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((X * X) * (((X * X) * ((X * X) / X)) / X)) / X) / X) * X) / X) / X ==> Arg(1) + Arg(0) + Arg(0)
[01.07.2016 01:57:53,835] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:53,836] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((((X * X) / X) * ((X / X) / X)) * (((X * X) * (X * X)) / X)) / X) / X ==> Arg(2) + Arg(0) + Arg(2)
[01.07.2016 01:57:54,798] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:54,799] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((((((X * X) * X) / X) / X) * ((((X * X) * X) / X) / X)) / X) * ((((((X * X) / X) * ((X / X) / X)) * (((X * X) * (X * X)) / X)) / X) / X)) / X ==> ((Arg(1) + Arg(0) + Arg(0)) + (Arg(1) + Arg(0) + Arg(0)) + Arg(1)) + (Arg(1) + Arg(2) + Arg(1)) + Arg(1)
[01.07.2016 01:57:56,649] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:56,649] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((((((X * X) * (X * X)) / X) / X) * X) / X) / X) * X) * (((((((X * X) * (X * X)) / X) / X) * X) / X) / X)) / X) / X ==> Arg(2) + ((Arg(2) + Arg(0) + Arg(1)) + (Arg(1) + Arg(0) + (Arg(2) + Arg(2) + Arg(1))) + Arg(0)) + Arg(1)
[01.07.2016 01:57:57,844] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:57,846] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((((X * X) * (X * X)) / X) / X) * X) / X) / X) * ((((X * X) * (((((((X * X) * (X * X)) / X) / X) * X) / X) / X)) / X) / X)) / X ==> Arg(1) + ((Arg(0) + Arg(1) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + (Arg(0) + (Arg(0) + ((Arg(1) + Arg(0) + Arg(0)) + (Arg(1) + Arg(2) + Arg(1)) + Arg(2)) + Arg(1)) + Arg(0))) + (Arg(0) + Arg(2) + Arg(1))
[01.07.2016 01:57:58,749] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:57:58,750] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((((X * X) * (X * X)) / X) / X) * X) / X) / X) * ((((X * X) * (((((((X * X) * (X * X)) / X) / X) * ((X * X) / X)) / X) / X)) / X) / X)) / X ==> Arg(1) + ((Arg(0) + Arg(1) + Arg(2)) + (Arg(1) + Arg(1) + Arg(0)) + (Arg(0) + (Arg(1) + Arg(0) + Arg(0)) + Arg(0))) + (Arg(0) + Arg(2) + Arg(1))
[01.07.2016 01:58:01,365] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:58:01,365] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((((((((X * X) * (X * X)) / X) / X) / X) * (((((((X * X) * (X * X)) / X) / X) * X) / X) / X)) / X) * (((((X * X) * (X * X)) / X) / X) / X)) / X ==> Arg(2) + ((Arg(1) + Arg(2) + Arg(1)) + (Arg(2) + Arg(2) + Arg(1)) + Arg(0)) + Arg(1)
[01.07.2016 01:58:01,365] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 50, memory free: 21.0 MB
[01.07.2016 01:58:12,798] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 75, memory free: 35.3 MB
[01.07.2016 01:58:23,973] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 100, memory free: 20.3 MB
[01.07.2016 01:58:27,260] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 22.71
[01.07.2016 01:58:27,261] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((((((X * X) * (X * X)) / X) / X) * (((((((X * X) * (X * X)) / X) / X) * X) / X) / X)) / X) * ((((((X * X) * (X * X)) / X) / X) / X) / X)) / X ==> Arg(0) + Arg(0) + Arg(1)
